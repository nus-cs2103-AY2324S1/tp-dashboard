[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103-T16-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103-T16-2/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103-T16-2/tp/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103-T16-2/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* This is **MediSync**.\u003cbr\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"  * as a directory for a hospital\u0027s staff and patients","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"* The project provides a UI and database functionality (called _MediSync_) used for managing staff and patients of a hospital","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base (around 6 KLoC).","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"  * It has a **reasonable level of user and developer documentation**.","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"* It is named `MediSync` as it allows the syncing of directory information in a medical context.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"* For the detailed documentation of this project, see the **[MediSync Product Website](https://ay2324s1-cs2103-t16-2.github.io/tp/)**.","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"leezhanpeng":3,"EricXiong420":6,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    archiveFileName \u003d \u0027medisync.jar\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"run {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"leezhanpeng":5,"-":71}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"EricXiong420"},"content":"    \u003c!-- Checks that all block-affiliations are ordered correctly. --\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"EricXiong420"},"content":"    \u003c!-- Checks that Javadoc block affiliations appear only at the beginning of the line. --\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"EricXiong420"},"content":"    \u003c!-- Checks that for block affiliations, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","lastModifiedDate":"2023-07-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EricXiong420":3,"-":431}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"### Lee Zhan Peng","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"\u003cimg src\u003d\"images/leezhanpeng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"[[github](https://github.com/leezhanpeng)]","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"[[portfolio](team/leezhanpeng.md)]","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"* Role: Lead Singer","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"* Responsibilities: Singing","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"### Eric Xiong","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"\u003cimg src\u003d\"images/ericxiong420.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"[[github](http://github.com/EricXiong420)]","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"* Role: Piano Man","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"### Ng Shuen Jin","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"\u003cimg src\u003d\"images/shuenj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"[[github](http://github.com/shuenj)] [[portfolio](team/shuenj.md)]","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"* Role: Drummer","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"* Responsibilities: Drums","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"### Zheng Chenglong","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"\u003cimg src\u003d\"images/seonlo99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"[[github](https://github.com/seonlo99)]","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"[[portfolio](team/seonlo99.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"* Role: Bassist","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"* Responsibilities: Double Bass","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"leezhanpeng":6,"Seonlo99":6,"EricXiong420":4,"shuenj":5,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"# MediSync Developer Guide","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103-T16-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"![Structure of the UI Component](diagrams/UiClassDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `Information Window`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"The interaction between `PersonListPanel` and `InformationWindow` is bridged by an on-click event.","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"The sequence diagram below illustrates the interactions between `PersonListPanel` and `InformationWindow` when the user clicks on a displayed `Person`.","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"![Sequence Diagram between PersonListPanel and InformationWindow](diagrams/informationPersonListSequenceDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"   1. If the command has arguments, the `AddressBookParser` creates a parser that matches the command (e.g., `XYZCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"   1. If the command has no arguments, the `AddressBookParser` directly returns the `Command` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `XYZCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add/edit/delete a person).","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"EricXiong420"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"COMMAND_WORD ARGS\")` as an example.","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"EricXiong420"},"content":"\u003cpuml src\u003d\"diagrams/CommandARGSSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `COMMAND_WORD ARGS` Command\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"EricXiong420"},"content":"**Note:** The lifeline for `XYZCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"EricXiong420"},"content":"Below is a similar sequence diagram, illustrating the interactions for a command with no arguments. (e.g. `execute(\"COMMAND_WORD\")`)","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"EricXiong420"},"content":"\u003cpuml src\u003d\"diagrams/CommandNOARGSSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `COMMAND_WORD` Command\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"EricXiong420"},"content":"Here are the details for the actual command execution and interaction between Logic and Model for the `delete` command. Other commands involving list indexing follow similar formats.","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"EricXiong420"},"content":"\u003cpuml src\u003d\"diagrams/DeleteCommandExecutionSequenceDiagram.puml\" alt\u003d\"Interactions Between Logic and Model for the `delete` Command\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"Seonlo99"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103-T16-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"Seonlo99"},"content":"* Contain `AuthenticateAffiliation` class to validate affiliation before allow to add to a `Person` object\u0027s  affiliation. This is to prevent affiliation that is not compatible with the `Person` object to be added.","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"Seonlo99"},"content":"* Contain `AffiliationModifier` class to modify the affiliation of a `Person` object. This is to ensure affiliations of a `Person` object is correctly modified.","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"shuenj"},"content":"![Class diagram for Model](diagrams/ModelDiagramsPerson.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"shuenj"},"content":"The `Person` component has several attributes: `Name`, `Phone`, `Email`, `Role`, `Affiliations` and `AffiliationHistory`. Each instance of `Person` class has exactly one of each of these attributes. In particular, `Affiliations` and `AffiliationHistory` can have multiple `Affiliation`. ","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"Seonlo99"},"content":"The `AuthenticateAffiliation` class is an integral part of our system\u0027s affiliation management. It is responsible for authenticating and validating affiliations before adding it to a `Person` affiliation. This class contains methods for checking the validity of affiliations and finding affiliated persons in the system\u0027s address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Seonlo99"},"content":"The `AffiliationModifier` class is a key component of our system\u0027s affiliation management. It provides methods to modify affiliations by adding, removing, or changing affiliations and affiliation history. These operations are essential for maintaining accurate and up-to-date affiliations within our system.","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"shuenj"},"content":"`Patient` and `Staff` are the 2 main subclasses of `Person`. `Patient` has an additional attribute `NextOfKin`. `Staff` has an additional attribute `ShiftDays`. `Staff` is a superclass of `Doctor` and `Nurse`, where the former has an additional attribute `Specialisation`.","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"shuenj"},"content":"The hierarchical structure of the classes allows for easy extensibility. If there is a need to introduce more specialized roles or attributes in the future, they can be added as subclasses under Staff or even under Doctor and Nurse. The distinction between various classes also suggests that there can be different levels of permissions associated with each role, which can be useful when implementing data privacy and security features.","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"leezhanpeng"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103-T16-2/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"leezhanpeng"},"content":"![Storage Class Diagram](diagrams/storageClassDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"leezhanpeng"},"content":"Specifically, the `CustomJsonAdaptedPersonSerializer` acts as a blueprint to convert a `Person` in the `AddressBook` to its correct JSON notation based on the `Person`\u0027s `Role`.","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"leezhanpeng"},"content":"The following activity diagram summarizes the jsonification process of the AddressBook when a user executes the `exit` command or closes MediSync:","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"leezhanpeng"},"content":"![StorageActivityDiagram](diagrams/storageActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"shuenj"},"content":"### Affiliation History feature","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"shuenj"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"shuenj"},"content":"The `affiliationHistory` records the past and current affiliations that a person has with others. It is implemented similar to `affiliations`, but with a few differences:","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"shuenj"},"content":"* When adding a person, the user specified `affiliations` will be added to `affiliationHistory` of himself/herself and the affiliated person.","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"shuenj"},"content":"  * The `Person` constructor has been modified to use `affiliations` as the `affiliationHistory` during initialization.","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"shuenj"},"content":"* When editing a `Person`\u0027s `Name`, the user specified affiliation will also be updated in `affiliationHistory` of others.","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"shuenj"},"content":"This is done by iterating through the affiliation list of the `Person` and updating the `affiliationHistory` of others. ","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"shuenj"},"content":"* When editing a `Person`\u0027s `affiliations`, specifically,","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"shuenj"},"content":"  * adding `affiliations` will be add it to `affiliationHistory` as well","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"shuenj"},"content":"  * removing an `affiliations`, will **not** be removed from `affiliationHistory`","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"shuenj"},"content":"* When deleting a `Person`, the `affiliationHistory` of others will be updated accordingly.","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"shuenj"},"content":"Utilization of Name as a Unique Identifier:","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"shuenj"},"content":"The proposed method circumvents these issues by employing the Name field as a unique identifier for affiliations. When an affiliation is deleted, the system uses this identifier to update all relevant entries across the `affiliationHistory`, thereby maintaining consistency.","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"shuenj"},"content":"This strategy streamlines the affiliation management process, as it allows for the complete removal of a Person from the system, including their historical data. From a user\u0027s perspective, this process is more intuitive and efficient, as it aligns with the expected outcome of entirely deleting an entry from the system.","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"shuenj"},"content":"The following activity diagram showcases the process of handling affiliation when adding a person:","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"shuenj"},"content":"![Add Person with affiliation diagram](diagrams/AddPersonAffnActivity.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"shuenj"},"content":"#### Design considerations","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"shuenj"},"content":"Alternative implementations:","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"shuenj"},"content":"#### 1. Maintaining Inactive Affiliations within Affiliation History:","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"shuenj"},"content":"One potential methodology involves keeping the deleted affiliations within the `affiliationHistory` of other entities in the system. Implementing this approach would mean that, upon the deletion of an affiliation, the system does not erase the affiliation\u0027s record. Instead, it marks it as inactive or invalid within the historical log. This could be achieved by introducing a specific indicator or flag signifying the affiliation\u0027s current status.","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"shuenj"},"content":"An extension of this method might require the system to incorporate a separate historical record or repository (`affiliationHistory`), explicitly dedicated to storing those affiliations marked as invalid. This secondary historical log ensures that while the affiliation is no longer active or valid, there is still a trace of its existence and impact on other entities within the system.","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"shuenj"},"content":"However, this strategy inherently increases the complexity of the system\u0027s infrastructure. It necessitates additional layers of logic in several functionalities, particularly those that list or display affiliations. These functions must be sophisticated enough to distinguish between active and inactive affiliations, ensuring that any representation of the data (like contact lists) reflects only the current, valid entries. This approach, while comprehensive in its historical tracking, may compromise the user experience by not fully removing deleted entities from various views and lists, potentially leading to confusion or perceived inefficiency.","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"shuenj"},"content":"#### 2. Storing Complete Person Objects:","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"shuenj"},"content":"Another alternative involves the `affiliationHistory` storing complete `Person` objects instead of just references or unique identifiers. This method is akin to taking a snapshot of the Person object at various points in time, preserving a more detailed historical account.","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"shuenj"},"content":"However, this approach can create discrepancies between the current state of `affiliations` and the historical records. Because each snapshot within the `affiliationHistory` remains static, any updates to a Person object post-creation of these snapshots would not reflect in the historical data. This inconsistency means that the current and historical views of affiliations could diverge significantly over time, potentially causing confusion or data integrity concerns.","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"shuenj"},"content":"Moreover, storing complete objects demands more storage space and could complicate data management tasks due to the volume and detail level of the data retained.","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"EricXiong420"},"content":"### ShiftDays feature","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"EricXiong420"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"EricXiong420"},"content":"The `ShiftDays` records the days of the week that a `Staff` is on shift duty. It is implemented using a bespoke `ShiftDays` class, which contains: ","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"EricXiong420"},"content":"- a `Set\u003cInteger\u003e` that stores the shift days as the respective integers.","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"EricXiong420"},"content":"- a `HashMap\u003cInteger, String\u003e` that maps the integers 1 to 7 each to a day of the week, from Monday to Sunday.","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"EricXiong420"},"content":"- a `getShiftDays()` method that returns the set of integers","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"EricXiong420"},"content":"- a `modifyShiftDays()` method that takes in a set of integers, and replaces the currently contained set of integers with the new set. This does not return a new ShiftDays object.","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"EricXiong420"},"content":"Likewise, the `Staff` includes several new methods to deal with ShiftDays, including:","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"EricXiong420"},"content":"- `getShiftDays()`, which returns the`ShiftDays` object of the staff member","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"EricXiong420"},"content":"- `setShiftDays()`, which calls the `modifyShiftDays()` method of the staff member\u0027s `ShiftDays` object in order to change the set of integers within their `ShiftDays`.","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"EricXiong420"},"content":"Finally, the `ShiftCommand` class was added to allow the addition and modification of `ShiftDays` for a staff member.","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"EricXiong420"},"content":"Below is a partial sequence diagram that illustrates the execution of the `shift` command, using `execute(\"shift 1 127\")` as the API call.","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"EricXiong420"},"content":"\u003cpuml src\u003d\"diagrams/ShiftCommandExecutionSequenceDiagram.puml\" alt\u003d\"Interactions Between Logic and Model for the `shift` Command\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"EricXiong420"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"EricXiong420"},"content":"Alternative implementations:","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"EricXiong420"},"content":"#### Maintaining an immutable ShiftDays object","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"EricXiong420"},"content":"One potential alternative to this implementation is to maintain an immutable ShiftDays object. That is to say, instead of modifying the set of integers stored","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"EricXiong420"},"content":"within ShiftDays when `modifyShiftDays()` is called, to instead return a new instance of the ShiftDays object. This could be beneficial as it follows the precendence","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"EricXiong420"},"content":"set by the other attributes such as Name, Email, and Phone, which all have `final` immutable text, and the objects themselves are replaced when the field is edited.","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"EricXiong420"},"content":"Potential benefits:","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"EricXiong420"},"content":"- Easier to test. As the current `ShiftDays` implementation allows mutability of the set of integers, when the shifts stored in a model address book used for testing are changed,","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"EricXiong420"},"content":"the model address book may remain modified, causing future test cases to fail certain checks. While this can be mediated by simply returning the address book to its original condition after","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"EricXiong420"},"content":"a test, future extensions may wish to consider this as a more long-term solution to such issues.","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"EricXiong420"},"content":"Potential costs:","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"EricXiong420"},"content":"- Implementing `ShiftDays` in an immutable way may be complex and can lead to its own set of challenges, as the `shiftDays` attribute of a `Staff` will also need to be implemented in an immutable","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"EricXiong420"},"content":"manner, requiring commands to return a new `Staff` each time the shift timings are changed.","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"leezhanpeng"},"content":"* a head nurse of a hospital","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"leezhanpeng"},"content":"* has a need to track significant number of contacts","lastModifiedDate":"2023-10-06"},{"lineNumber":280,"author":{"gitId":"leezhanpeng"},"content":"* has a need to quickly identify relevant individuals from the vast pool of contacts","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"leezhanpeng"},"content":"* can type fast","lastModifiedDate":"2023-10-06"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"leezhanpeng"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"leezhanpeng"},"content":"Provide categories for different healthcare roles, healthcare-specific information within each contact, capacity to track duty days and shifts for staff members, an emergency contacts section that updates based on who is on duty, robust search and filter capabilities to quickly find staff members based on criteria such as department, specialisation","lastModifiedDate":"2023-10-06"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"EricXiong420"},"content":"| Type  | Priority | As a …​                                    | I want to …​                                                                                                         | So that I can…​                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":295,"author":{"gitId":"EricXiong420"},"content":"|-------|----------|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-28"},{"lineNumber":296,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | new user                                   | see usage instructions                                                                                               | refer to instructions when I forget how to use the App                                                               |","lastModifiedDate":"2023-09-28"},{"lineNumber":297,"author":{"gitId":"EricXiong420"},"content":"| Epic  | `* * *`  | new user                                   | set up the application                                                                                               |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":298,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | new user                                   | see the features of the app                                                                                          |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":299,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | past user                                  | import existing contact data from my previously saved contacts                                                       | kickstart my contact list                                                                                            |","lastModifiedDate":"2023-09-28"},{"lineNumber":300,"author":{"gitId":"EricXiong420"},"content":"| Epic  | `* * *`  | user                                       | add a new person                                                                                                     |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":301,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | user                                       | specify contact details, including phone numbers and email addresses,                                                | maintain accurate and up-to-date contact information for each staff member                                           |","lastModifiedDate":"2023-09-28"},{"lineNumber":302,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | user                                       | add emergency contact information for each staff member                                                              | quickly reach out to the appropriate contacts in critical situations                                                 |","lastModifiedDate":"2023-09-28"},{"lineNumber":303,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | user                                       | include pager numbers for doctors and on-call schedules                                                              | have a method of contact during off-hours                                                                            |","lastModifiedDate":"2023-09-28"},{"lineNumber":304,"author":{"gitId":"EricXiong420"},"content":"| Epic  | `* * *`  | head nurse                                 | edit my contacts                                                                                                     |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":305,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | update contact information (e.g., phone numbers, email addresses) as needed                                          | ensure that the contact details remain current and reliable                                                          |","lastModifiedDate":"2023-09-28"},{"lineNumber":306,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | track and manage staff availability for upcoming shifts in the contact book including leave requests and shift swaps | manage the availability and shift schedule easily                                                                    |","lastModifiedDate":"2023-09-28"},{"lineNumber":307,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | add comments to the contact book entries, such as private notes                                                      | make more informed decisions when assigning tasks or seeking assistance                                              |","lastModifiedDate":"2023-09-28"},{"lineNumber":308,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | mark certain contacts as \"critical contacts\" in the contact book                                                     | they can be searched for and identified more easily in emergencies                                                   |","lastModifiedDate":"2023-09-28"},{"lineNumber":309,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | adjust the shifts of staff members                                                                                   | staff members can have flexibility in changing shift timings                                                         |","lastModifiedDate":"2023-09-28"},{"lineNumber":310,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | transfer a patient to a new doctor in charge                                                                         | patients can be flexibly transferred when different expertise is required, or when manpower needs reallocation       |","lastModifiedDate":"2023-09-28"},{"lineNumber":311,"author":{"gitId":"EricXiong420"},"content":"| Epic  | `* * *`  | head nurse                                 | view my contacts                                                                                                     |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":312,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view who is the doctor in charge of a patient currently                                                              |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":313,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view who are the patients who are currently under a doctor                                                           |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":314,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view the past doctors who have treated the patient                                                                   | obtain some medical history                                                                                          |","lastModifiedDate":"2023-09-28"},{"lineNumber":315,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view who are the past patients who have been treated by a doctor                                                     | obtain the patient history of the doctor                                                                             |","lastModifiedDate":"2023-09-28"},{"lineNumber":316,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view view the patients whom the nurses are in charge of                                                              | balance the workload of my nurses                                                                                    |","lastModifiedDate":"2023-09-28"},{"lineNumber":317,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view next-of-kin information of patients                                                                             | contact them when necessary                                                                                          |","lastModifiedDate":"2023-09-28"},{"lineNumber":318,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view the patients’ discharge dates                                                                                   | manage the discharge procedure                                                                                       |","lastModifiedDate":"2023-09-28"},{"lineNumber":319,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | view the duty and shift dates of my staff                                                                            | manage and oversee when they are working                                                                             |","lastModifiedDate":"2023-09-28"},{"lineNumber":320,"author":{"gitId":"EricXiong420"},"content":"| Epic  | `* * *`  | head nurse                                 | delete a person                                                                                                      | remove entries that I no longer need                                                                                 |","lastModifiedDate":"2023-09-28"},{"lineNumber":321,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | remove only the unwanted information about a staff or a patient if it is inaccurate                                  | ensure that the directory remains accurate                                                                           |","lastModifiedDate":"2023-09-28"},{"lineNumber":322,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | delete contacts of staff who are not working in the hospital anymore                                                 |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":323,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | delete contacts of patients who have been discharged                                                                 |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":324,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | delete all contacts when I quit                                                                                      |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":325,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | maintain a contact book of all medical staff within the hospital                                                     | quickly find and contact the right healthcare professionals in case of emergencies or when coordinating patient care |","lastModifiedDate":"2023-09-28"},{"lineNumber":326,"author":{"gitId":"EricXiong420"},"content":"| Epic  | `* * *`  | head nurse                                 | manage my contact book                                                                                               |                                                                                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":327,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | back up the contact book                                                                                             | prevent data loss and maintain the integrity of the contact information                                              |","lastModifiedDate":"2023-09-28"},{"lineNumber":328,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | head nurse                                 | load the previous backup                                                                                             | restore my contacts when I make wrong edits                                                                          |","lastModifiedDate":"2023-09-28"},{"lineNumber":329,"author":{"gitId":"EricXiong420"},"content":"| Story | `* * *`  | user                                       | export contact information in a printable format for reference                                                       | have physical copies of essential contact details when needed                                                        |","lastModifiedDate":"2023-09-28"},{"lineNumber":330,"author":{"gitId":"EricXiong420"},"content":"| Epic  | `* * *`  | head nurse                                 | search for specific contacts                                                                                         | locate details of persons without having to go through the entire list                                               |","lastModifiedDate":"2023-09-28"},{"lineNumber":331,"author":{"gitId":"EricXiong420"},"content":"| Story | `* *`    | head nurse                                 | filter out \"critical contacts\" in the contact book                                                                   | reach them quickly during urgent situations                                                                          |","lastModifiedDate":"2023-09-28"},{"lineNumber":332,"author":{"gitId":"EricXiong420"},"content":"| Story | `* *`    | head nurse                                 | select language preferences and interpreter contact information                                                      | effectively communicate with patients who have limited English proficiency                                           |","lastModifiedDate":"2023-09-28"},{"lineNumber":333,"author":{"gitId":"EricXiong420"},"content":"| Story | `* *`    | head nurse                                 | track and display the availability status of staff members (e.g., on-duty, off-duty, on-call)                        | facilitate decision-making for patient care assignments                                                              |","lastModifiedDate":"2023-09-28"},{"lineNumber":334,"author":{"gitId":"EricXiong420"},"content":"| Story | `* *`    | head nurse                                 | filter staff members by their specialisation (e.g., cardiologist, pediatrician)                                      | identify and contact the right healthcare professionals based on their expertise                                     |","lastModifiedDate":"2023-09-28"},{"lineNumber":335,"author":{"gitId":"EricXiong420"},"content":"| Story | `* *`    | head nurse                                 | search for staff members by name, role, or department quickly                                                        | easily find and access their contact information when necessary                                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":336,"author":{"gitId":"EricXiong420"},"content":"| Story | `* *`    | user                                       | hide private contact details                                                                                         | minimize chance of someone else seeing them by accident                                                              |","lastModifiedDate":"2023-09-28"},{"lineNumber":337,"author":{"gitId":"EricXiong420"},"content":"| Story | `*`      | user with many persons in the address book | sort persons by name                                                                                                 | locate a person easily                                                                                               |","lastModifiedDate":"2023-09-28"},{"lineNumber":338,"author":{"gitId":"EricXiong420"},"content":"| Story | `*`      | include photos of staff members            | quickly identify the individual and better personalise our communication                                             | locate a person easily                                                                                               |","lastModifiedDate":"2023-09-28"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"shuenj"},"content":"(For all use cases below, the **System** is the `MediSync`, the **Actor** is the `user`, and the `precondition` is that user is in the main interface unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"shuenj"},"content":"**Use case: UC01- Add a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"shuenj"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"shuenj"},"content":"1. User requests to add new person and provide details","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"shuenj"},"content":"2. MediSync adds person to system and confirms addition to user","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"shuenj"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"shuenj"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"shuenj"},"content":"* 1a. Provided details are incomplete or incorrect format","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"shuenj"},"content":"  * 1a1. MediSync shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"shuenj"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"shuenj"},"content":"* 2a. Person of the same name already exists","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":365,"author":{"gitId":"shuenj"},"content":"    * 2a1. MediSync shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"shuenj"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":369,"author":{"gitId":"shuenj"},"content":"**Use case: UC02- Edit a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"shuenj"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"shuenj"},"content":"1. User requests to edit a particular person\u0027s contact and provide details","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"shuenj"},"content":"2. MediSync edits person on system and confirms changes to user","lastModifiedDate":"2023-10-05"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"shuenj"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"shuenj"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"shuenj"},"content":"* 1a. Provided details are incomplete or incorrect format","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"shuenj"},"content":"    * 1a1. MediSync shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"shuenj"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"shuenj"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"shuenj"},"content":"    * 1a1. MediSync shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"shuenj"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"shuenj"},"content":"**Use case: UC03- Delete a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"shuenj"},"content":"2.  MediSync shows a list of persons","lastModifiedDate":"2023-10-05"},{"lineNumber":398,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"shuenj"},"content":"4.  MediSync deletes the person","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"shuenj"},"content":"    * 3a1. MediSync shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"shuenj"},"content":"**Use case: UC04- Find a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"shuenj"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"shuenj"},"content":"1.  User requests to find person by name","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"shuenj"},"content":"2.  MediSync shows details of the all relevant persons","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"shuenj"},"content":"3.  User issues command to access help","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"shuenj"},"content":"4.  MediSync displays help instructions","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"shuenj"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"shuenj"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"shuenj"},"content":"* 2a. No relevant names found.","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"shuenj"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":431,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"shuenj"},"content":"* 2a. List is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":433,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"shuenj"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":435,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":436,"author":{"gitId":"shuenj"},"content":"**Use case: UC05- Find affiliation of a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":437,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"shuenj"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":439,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":440,"author":{"gitId":"shuenj"},"content":"1.  User requests to find affiliations of a person","lastModifiedDate":"2023-10-05"},{"lineNumber":441,"author":{"gitId":"shuenj"},"content":"2.  MediSync shows all persons affiliated with the specified person","lastModifiedDate":"2023-10-05"},{"lineNumber":442,"author":{"gitId":"shuenj"},"content":"3.  User requests to exit MediSync","lastModifiedDate":"2023-10-05"},{"lineNumber":443,"author":{"gitId":"shuenj"},"content":"4.  MediSync closes the application","lastModifiedDate":"2023-10-05"},{"lineNumber":444,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":445,"author":{"gitId":"shuenj"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"shuenj"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"shuenj"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":450,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":451,"author":{"gitId":"shuenj"},"content":"    * 1a1. MediSync shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":453,"author":{"gitId":"shuenj"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":455,"author":{"gitId":"shuenj"},"content":"* 2a. Person has no affiliations.","lastModifiedDate":"2023-10-05"},{"lineNumber":456,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":457,"author":{"gitId":"shuenj"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"leezhanpeng"},"content":"4.  Should respond to all commands within 3 seconds.","lastModifiedDate":"2023-10-06"},{"lineNumber":465,"author":{"gitId":"leezhanpeng"},"content":"5.  Commands should be easy to remember and succinct.","lastModifiedDate":"2023-10-06"},{"lineNumber":466,"author":{"gitId":"leezhanpeng"},"content":"6.  Product is not required to handle the printing of reports.","lastModifiedDate":"2023-10-06"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":484,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"leezhanpeng":28,"Seonlo99":6,"EricXiong420":89,"shuenj":102,"-":303}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"# MediSync User Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"MediSync is a **desktop app specifically used for head nurses to manage staff and patients, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). Instead of tracking data of staff and patients using existing applications such as Microsoft Excel, using a CLI-centric application like MediSync will help head nurses track and handle contact management more quickly.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"1. Download the latest `medisync.jar` from [here](https://github.com/AY2324S1-CS2103-T16-2/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your MediSync.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar medisync.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com r/patient af/Dr Mike` : Adds a contact named `John Doe` to MediSync.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"  e.g `n/NAME [a/AFFN]` can be used as `n/John Doe a/friend` or as `n/John Doe`.","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"  e.g. `[a/AFFN]…​` can be used as ` ` (i.e. 0 times), `a/friend`, `a/friend a/family` etc.","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"![help message](images/helpMessageT16.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL r/ROLE [a/AFFN]…​`","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"**Tip:** A person can have any number of affiliations (including 0)","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com r/patient`","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com r/patient a/Dr Mike`","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"Shows a list of all persons in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"Edits an existing contact in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Seonlo99"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [r/ROLE] [a/AFFN]…​`","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"EricXiong420"},"content":"* When editing affiliations, the existing affiliations of the person will be removed i.e adding of affiliations is not cumulative.","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"* You can remove all the person’s affiliations by typing `a/` without","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"EricXiong420"},"content":"    specifying any affiliations after it.","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Seonlo99"},"content":"*  `edit 3 p/81234567 a/` Edits the phone number of the 3rd person to `81234567` and removes the person’s affiliation","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"Seonlo99"},"content":"*  `edit 1 n/Sally Wing e/sallyw@kmail.com` Edits the name and the email of the 1st person to `Sally Wing` and `sallyw@kmail.com` respectively.","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"shuenj"},"content":"* `find sally` returns `Sally Wing`\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"  ![result for \u0027find alex david\u0027](images/findSallyResult.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"EricXiong420"},"content":"### Returning affiliations of a doctor/patient: `affn`","lastModifiedDate":"2023-09-27"},{"lineNumber":137,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":138,"author":{"gitId":"EricXiong420"},"content":"Finds doctors/patients who are affiliated with the patient/doctor indicated","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"EricXiong420"},"content":"by the given index.","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"EricXiong420"},"content":"* Finds affiliations for the person at the specified `INDEX`.","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"EricXiong420"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-09-27"},{"lineNumber":143,"author":{"gitId":"EricXiong420"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-27"},{"lineNumber":144,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":145,"author":{"gitId":"EricXiong420"},"content":"Examples:","lastModifiedDate":"2023-09-27"},{"lineNumber":146,"author":{"gitId":"shuenj"},"content":"* `list` followed by `affn 2` lists the people affiliated to the 2nd person in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"EricXiong420"},"content":"* Subsequently, `affn 1` will list the people affiliated with the 1st person displayed after the previous `affn` command.","lastModifiedDate":"2023-09-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"shuenj"},"content":"Deletes the contact in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"leezhanpeng"},"content":"If the other contacts have affiliations with this contact, the affiliations will be deleted automatically.","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"shuenj"},"content":"* `list` followed by `delete 3` deletes the 3rd person in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"shuenj"},"content":"Clears all entries from the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"shuenj"},"content":"MediSync data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":182,"author":{"gitId":"shuenj"},"content":"MediSync data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":184,"author":{"gitId":"EricXiong420"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e\u003c/box\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"shuenj"},"content":"If your changes to the data file makes its format invalid, MediSync will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"shuenj"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MediSync home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Seonlo99"},"content":"### More FAQ to come","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"Seonlo99"},"content":"| Action          | Format, Examples                                                                                                                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"Seonlo99"},"content":"|-----------------|--------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"Seonlo99"},"content":"| **Add**         | `add n/NAME p/PHONE_NUMBER e/EMAIL r/ROLE [a/AFFN]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com r/patient a/Dr Mike` |","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"Seonlo99"},"content":"| **Clear**       | `clear`                                                                                                                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"Seonlo99"},"content":"| **Delete**      | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"Seonlo99"},"content":"| **Edit**        | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [r/ROLE] [a/AFFN]…​`\u003cbr\u003e e.g.,`edit 1 p/91234567 e/johndoe@example.com`                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"Seonlo99"},"content":"| **Find**        | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                           |","lastModifiedDate":"2023-10-05"},{"lineNumber":220,"author":{"gitId":"Seonlo99"},"content":"| **Affiliation** | `affn INDEX`                                                                                                                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":221,"author":{"gitId":"Seonlo99"},"content":"| **List**        | `list`                                                                                                                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":222,"author":{"gitId":"Seonlo99"},"content":"| **Help**        | `help`                                                                                                                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"shuenj"},"content":"| **Exit**        | `exit`                                                                                                                               |","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"leezhanpeng":6,"Seonlo99":21,"EricXiong420":17,"shuenj":16,"-":163}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eMediSync\u003c/a\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103-T16-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"leezhanpeng":2,"-":64}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"AddressBook *-right-\u003e \"1\" UniqueAffiliationList","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"UniqueAffiliationList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"UniqueAffiliationList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"UniqueAffiliationList -right-\u003e \"*\" Affiliation","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"Person -up-\u003e \"*\" Affiliation","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EricXiong420":5,"-":16}},{"path":"docs/diagrams/CommandARGSSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"participant \":XYZCommandParser\" as XYZCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"participant \"c:XYZCommand\" as XYZCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"[-\u003e LogicManager : execute(\"COMMAND_WORD ARGS\")","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"COMMAND_WORD ARGS\")","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"create XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"AddressBookParser -\u003e XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"XYZCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"AddressBookParser -\u003e XYZCommandParser : parse(\"ARGS\")","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"create XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"XYZCommandParser -\u003e XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"activate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"XYZCommand --\u003e XYZCommandParser : c","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"deactivate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"XYZCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"XYZCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"destroy XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"LogicManager -\u003e XYZCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"activate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"ref over XYZCommand, Model : command execution","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"XYZCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"CommandResult --\u003e XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"XYZCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"deactivate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"EricXiong420":66}},{"path":"docs/diagrams/CommandNOARGSSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"participant \"c:XYZCommand\" as XYZCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"[-\u003e LogicManager : execute(\"COMMAND_WORD\")","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"COMMAND_WORD\")","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"create XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"AddressBookParser -\u003e XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"activate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"XYZCommand --\u003e AddressBookParser : c","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"deactivate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"LogicManager -\u003e XYZCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"activate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"ref over XYZCommand, Model : command execution","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"XYZCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"CommandResult --\u003e XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"XYZCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"deactivate XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"EricXiong420":49}},{"path":"docs/diagrams/DeleteCommandExecutionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"group sd command execution (delete)","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"activate DeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"DeleteCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"Model --\u003e DeleteCommand : lastShownList","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"create Person","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"DeleteCommand -\u003e Person : lastShownList.get()","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"activate Person","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"Person --\u003e DeleteCommand : p","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"deactivate Person","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"DeleteCommand -\u003e Model : deletePerson(p)","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"EricXiong420":31}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"Class Affiliation","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"Person *--\u003e \"*\" Affiliation","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EricXiong420":2,"-":52}},{"path":"docs/diagrams/ShiftCommandExecutionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"participant \":ShiftCommand\" as ShiftCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"participant \"s:Staff\" as Staff MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"participant \"sd:ShiftDays\" as ShiftDays MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"activate ShiftCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"ShiftCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"Model --\u003e ShiftCommand : lastShownList","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"create Staff","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"ShiftCommand -\u003e Staff : lastShownList.get()","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"activate Staff","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"Staff --\u003e ShiftCommand : s","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"deactivate Staff","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"create ShiftDays","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"ShiftCommand -\u003e ShiftDays","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"activate ShiftDays","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"ShiftDays --\u003e ShiftCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"deactivate ShiftDays","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"ShiftCommand -\u003e Staff : setShiftDays(sd)","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"activate Staff","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"Staff -\u003e ShiftDays : getShiftDays()","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"ShiftDays --\u003e Staff : set","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"activate Staff","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"Staff -\u003e Staff : modifyShiftDays(set)","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"deactivate Staff","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"Staff --\u003e ShiftCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"deactivate Staff","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"EricXiong420":38}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"Class JsonAdaptedAffiliation","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedAffiliation","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EricXiong420":2,"-":41}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"# MediSync","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103-T16-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103-T16-2/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103-T16-2/tp/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103-T16-2/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"**MediSync is a desktop app specifically used for head nurses to manage staff and patients.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"* If you are interested in using MediSync, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"* If you are interested about developing MediSync, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"leezhanpeng":6,"-":15}},{"path":"docs/team/ericxiong420.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"title: \"Eric Xiong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"* **New Feature**: Added the affiliation command, `affn`","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    * What it does: Displays the affiliations of a doctor/patient","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    * Justification: This feature adds on the specific functionality for a head nurse, by allowing a nurse to find out the doctors of a patient, or the patients of a doctor.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    * Highlights: This implementation was challenging as the \"tag\" functionality had to be changed to \"affiliation\", which required project-wide renaming and refactoring, across both code and comments. The implementation required certain additions to Logic classes, and the addition of a new predicate.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dericxiong420\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    * Managing release `v1.1` on GitHub","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    * None yet","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        * Added documentation for the feature `affn` [\\#68](https://github.com/AY2324S1-CS2103-T16-2/tp/pull/68)","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        * None yet","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), None so far","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"    * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2324S1/forum/issues/155), [2](https://github.com/nus-cs2103-AY2324S1/forum/issues/164), [3](), [4]())","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), None so far)","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"EricXiong420":36}},{"path":"docs/team/leezhanpeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"  layout: default.md","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"  title: \"Zhan Peng\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"### Project: MediSync","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"MediSync is a desktop app specifically used for head nurses to manage staff and patients, optimised for use via a Command Line Interface (CLI). Instead of tracking data of staff and patients using existing applications such as Microsoft Excel, using a CLI-centric application like MediSync will help head nurses track and handle contact management more quickly.","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"  * To be added","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dleezhanpeng\u0026breakdown\u003dfalse)","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"* **Project management**:","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"  * Managed releases `v1.1` on GitHub","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"  * To be added","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"  * User Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    * To be added","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    * To be added","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"* **Community**:","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#68](https://github.com/AY2324S1-CS2103-T16-2/tp/pull/68)","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"  * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2324S1/forum/issues/28#issuecomment-1694649929), [2](https://github.com/nus-cs2103-AY2324S1/forum/issues/29#issuecomment-1694648517))","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: To be added)","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"* **Tools**:","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"  * Set up the team\u0027s project repo","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"leezhanpeng":36}},{"path":"docs/team/seonlo99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"  layout: default.md","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"  title: \"Zheng Chenglong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"### Project: MediSync","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"MediSync is a desktop app specifically used for head nurses to manage staff and patients, optimised for use via a Command Line Interface (CLI). Instead of tracking data of staff and patients using existing applications such as Microsoft Excel, using a CLI-centric application like MediSync will help head nurses track and handle contact management more quickly.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dseonlo99\u0026breakdown\u003dfalse)","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"  * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"      * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"      * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"  * Contributed to forum discussions (examples: )","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: To be added)","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"  * Set up the team\u0027s project repo","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"Seonlo99":35}},{"path":"docs/team/shuenj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"  layout: default.md","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"  title: \"Ng Shuen Jin\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"### Project: MediSync","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"MediSync is a desktop app specifically used for head nurses to manage staff and patients, optimised for use via a Command Line Interface (CLI). Instead of tracking data of staff and patients using existing applications such as Microsoft Excel, using a CLI-centric application like MediSync will help head nurses track and handle contact management more quickly.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"  * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dshuenj\u0026breakdown\u003dfalse)","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"  * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"  * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"  * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"  * Contributed to forum discussions (examples: )","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: To be added)","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"  * Set up the team\u0027s project repo","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"shuenj":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"EricXiong420"},"content":"                personToEdit.getAddress(), remark, personToEdit.getAffiliations());","lastModifiedDate":"2023-09-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"EricXiong420":1,"-":401}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [af/AFFILIATION]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"EricXiong420"},"content":"    6.  `edit 1 af/one af/two af/three af/one`","lastModifiedDate":"2023-09-27"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"EricXiong420":2,"-":309}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s contact list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"     * The data from the sample contact list will be used instead if {@code storage}\u0027s contact list is not found,","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"     * or an empty contact list will be used instead if errors occur when reading {@code storage}\u0027s contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"shuenj"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping MediSync ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leezhanpeng":1,"shuenj":4,"-":181}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * Returns the user prefs\u0027 contact list file path.","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shuenj":1,"-":49}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    public static final String MESSAGE_INVALID_ROLE \u003d \"Invalid role!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"                .append(\"; Role: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"                .append(person.getRole())","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"                .append(\"; Affiliations: {\");","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        ArrayList\u003cAffiliation\u003e affiliationsList \u003d new ArrayList\u003c\u003e(person.getAffiliations());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        for (int i \u003d 0; i \u003c affiliationsList.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"            builder.append(affiliationsList.get(i));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"            if (i \u003c affiliationsList.size() - 1) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"                builder.append(\", \");","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"        builder.append(\"}\");","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"        builder.append(\"; Affiliation History: {\");","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        ArrayList\u003cAffiliation\u003e affiliationHistoryList \u003d new ArrayList\u003c\u003e(person.getAffiliationHistory());","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        for (int i \u003d 0; i \u003c affiliationHistoryList.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"            builder.append(affiliationHistoryList.get(i));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"            if (i \u003c affiliationHistoryList.size() - 1) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"                builder.append(\", \");","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        builder.append(\"}\");","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        if (person instanceof Staff) {","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"            builder.append(\"; Shift Days: \");","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"            builder.append(((Staff) person).getShiftDays());","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        if (person instanceof Doctor) {","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"            builder.append(\"; Specialisations: {\");","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"            ArrayList\u003cSpecialisation\u003e specialisationsList \u003d new ArrayList\u003c\u003e(((Doctor) person).getSpecialisations());","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"            for (int i \u003d 0; i \u003c specialisationsList.size(); i++) {","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"                builder.append(specialisationsList.get(i));","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"                if (i \u003c specialisationsList.size() - 1) {","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"                    builder.append(\", \");","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"            builder.append(\"}\");","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":26,"EricXiong420":1,"shuenj":18,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/AddAffiliationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AffiliationModifier;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AuthenticateAffiliation;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":" * Add affiliations to an existing person in the contact list.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"public class AddAffiliationCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public static final String COMMAND_WORD \u003d \"addaffn\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add affiliation to the person identified \"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"            + \"Input affiliation will be added on existing affiliation.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"            + PREFIX_AFFILIATION + \"AFFILIATION \"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"            + \"[\" + PREFIX_AFFILIATION + \"AFFILIATION]...\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"            + PREFIX_AFFILIATION + \"John Doe \"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"            + PREFIX_AFFILIATION + \"Amy\";","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_ADD_AFFILIATION_SUCCESS \u003d \"Added Affiliation: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_NO_AFFILIATION_INPUT \u003d \"At least one affiliation must be provided.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    private final Index index;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    private final Set\u003cAffiliation\u003e affiliationListToAdd;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"     * @param affiliationListToAdd the additional affiliations to add.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    public AddAffiliationCommand(Index index, Set\u003cAffiliation\u003e affiliationListToAdd) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(affiliationListToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"        this.affiliationListToAdd \u003d affiliationListToAdd;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"        Person personToAddAffiliation \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"        AuthenticateAffiliation.check(this.affiliationListToAdd, personToAddAffiliation, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"        // Add new affiliations","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"        personToAddAffiliation.getAffiliations().addAll(this.affiliationListToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"        personToAddAffiliation.getAffiliationHistory().addAll(this.affiliationListToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"        // Add affiliation to the other affiliated person","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.addAffiliations(this.affiliationListToAdd, personToAddAffiliation, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.addAffiliationHistory(this.affiliationListToAdd, personToAddAffiliation, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_AFFILIATION_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"                Messages.format(personToAddAffiliation)));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"        if (!(other instanceof AddAffiliationCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"        AddAffiliationCommand otherAddAffiliationCommand \u003d (AddAffiliationCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"        return index.equals(otherAddAffiliationCommand.index)","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"                \u0026\u0026 affiliationListToAdd.equals(otherAddAffiliationCommand.affiliationListToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"                .add(\"affiliationListToAdd\", affiliationListToAdd)","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"leezhanpeng":1,"Seonlo99":102}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AffiliationModifier;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AuthenticateAffiliation;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":" * Adds a person to the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the contact list.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"            + \"[\" + PREFIX_AFFILIATION + \"AFFILIATION]...\\n\"","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"            + PREFIX_ROLE + \"Doctor \"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"            + PREFIX_AFFILIATION + \"Johnson \"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"            + PREFIX_AFFILIATION + \"Jackson\";","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        \"This person already exists in the contact list. Please use a different name.\";","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"        AuthenticateAffiliation.check(toAdd.getAffiliations(), toAdd, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.addAffiliations(toAdd.getAffiliations(), toAdd, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"        AffiliationModifier.addAffiliationHistory(toAdd.getAffiliations(), toAdd, model);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":4,"Seonlo99":5,"EricXiong420":2,"shuenj":6,"-":74}},{"path":"src/main/java/seedu/address/logic/commands/AffiliationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import java.util.List;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.person.NameMatchesAffiliationPredicate;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" * Finds staff/patients affiliated with patient/staff.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"public class AffiliationCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"affn\";","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds and returns the list of people who are \"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"        + \"affiliated with the person identified by the index number shown in the displayed person list. \"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        + \"(i.e. returns the staff of a patient, or the patients of a staff)\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    private final Index index;","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"     * Creates an AffiliationCommand to return the affiliation for the specified {@code Index}","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    public AffiliationCommand(Index index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        Person personToGetAffiliationsOf \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cAffiliation\u003e affiliations \u003d personToGetAffiliationsOf.getAffiliations();","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"        model.updateFilteredPersonList(new NameMatchesAffiliationPredicate(affiliations));","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"        return new CommandResult(","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"        if (!(other instanceof AffiliationCommand)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"        AffiliationCommand e \u003d (AffiliationCommand) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"leezhanpeng":2,"EricXiong420":67,"shuenj":4}},{"path":"src/main/java/seedu/address/logic/commands/AffiliationHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.NameMatchesAffiliationPredicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":" * Finds doctors/patients affiliated with patient/doctor.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"public class AffiliationHistoryCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    public static final String COMMAND_WORD \u003d \"affnh\";","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds and returns the list of people who \"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"        + \"are affiliated or once affiliated with the person identified by the index number shown in the  \"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"        + \"displayed person list. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"        + \"(i.e. returns the doctors of a patient, or the patients of a doctor)\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"     * Creates an AffiliationCommand to return the affiliation history for the specified {@code Index}","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    public AffiliationHistoryCommand(Index index) {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        Person personToGetAffiliationsOf \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliationHistory \u003d personToGetAffiliationsOf.getAffiliationHistory();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"        model.updateFilteredPersonList(new NameMatchesAffiliationPredicate(affiliationHistory));","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"        if (!(other instanceof AffiliationHistoryCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"        AffiliationHistoryCommand e \u003d (AffiliationHistoryCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"shuenj":74}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Clears the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contact list has been cleared!\";","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shuenj":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     * @throws CommandException If an error occurs during the command execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    /** Person information should be shown to the user. */","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private final Optional\u003cInteger\u003e showInfoIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, Optional\u003cInteger\u003e showInfoIndex) {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        this.showInfoIndex \u003d showInfoIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        this(feedbackToUser, false, false, Optional.empty());","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    public Optional\u003cInteger\u003e getShowInfoIndex() {","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        return showInfoIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 showInfoIndex.equals(otherCommandResult.showInfoIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, showInfoIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"                .add(\"showInfoIndex\", showInfoIndex)","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":15,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AffiliationModifier;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":" * Deletes a person identified using it\u0027s displayed index from the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.removeAffiliations(personToDelete.getAffiliations(), personToDelete, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        AffiliationModifier.removeAffiliationHistory(personToDelete.getAffiliationHistory(), personToDelete, model);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Seonlo99":2,"shuenj":2,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AffiliationModifier;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AuthenticateAffiliation;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":" * Edits the details of an existing person in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"            + \"[\" + PREFIX_AFFILIATION + \"AFFILIATION]...\\n\"","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"            \"This person already exists in the contact list. Please use a different name.\";","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_EDIT_ROLE_NOT_ALLOW \u003d \"Editing of role is not allowed.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        Role updatedRole \u003d editPersonDescriptor.getRole().orElse(personToEdit.getRole());","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cAffiliation\u003e updatedAffiliations \u003d editPersonDescriptor","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"                .getAffiliations().orElse(personToEdit.getAffiliations());","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e mergedAffiliationHistory \u003d new HashSet\u003c\u003e(personToEdit.getAffiliationHistory());","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        mergedAffiliationHistory.addAll(updatedAffiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"        return updatedRole.generatePerson(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"            updatedAffiliations, mergedAffiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"Seonlo99"},"content":"        if (this.editPersonDescriptor.isNameEdited()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"Seonlo99"},"content":"            AffiliationModifier.nameChangeAffiliations(personToEdit.getAffiliations(), personToEdit.getName(),","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"Seonlo99"},"content":"                    editedPerson.getName(), model);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"shuenj"},"content":"            AffiliationModifier.nameChangeAffiliationHistory(personToEdit.getAffiliationHistory(),","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"                personToEdit.getName(), editedPerson.getName(), model);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Seonlo99"},"content":"        if (this.editPersonDescriptor.isAffiliationEdited()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"Seonlo99"},"content":"            AuthenticateAffiliation.check(editedPerson.getAffiliations(), editedPerson, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Seonlo99"},"content":"            AffiliationModifier.addAffiliationHistory(editedPerson.getAffiliations(), editedPerson, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Seonlo99"},"content":"            AffiliationModifier.removeAffiliations(personToEdit.getAffiliations(), editedPerson, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"Seonlo99"},"content":"            AffiliationModifier.addAffiliations(editedPerson.getAffiliations(), editedPerson, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"        if (personToEdit instanceof Staff \u0026\u0026 editedPerson instanceof Staff) {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"            ShiftDays shiftDays \u003d ((Staff) personToEdit).getShiftDays();","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"            Staff editedStaff \u003d (Staff) editedPerson;","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"            editedStaff.setShiftDays(shiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"shuenj"},"content":"        if (personToEdit instanceof Doctor \u0026\u0026 editedPerson instanceof Doctor) {","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"shuenj"},"content":"            Set\u003cSpecialisation\u003e specialisations \u003d ((Doctor) personToEdit).getSpecialisations();","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"            Doctor editedDoctor \u003d (Doctor) editedPerson;","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"shuenj"},"content":"            editedDoctor.setSpecialisations(specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"leezhanpeng"},"content":"        private Role role;","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"EricXiong420"},"content":"        private Set\u003cAffiliation\u003e affiliations;","lastModifiedDate":"2023-09-27"},{"lineNumber":177,"author":{"gitId":"shuenj"},"content":"        private Set\u003cAffiliation\u003e affiliationHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"leezhanpeng"},"content":"        private ShiftDays shiftDays;","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"shuenj"},"content":"        private Set\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"EricXiong420"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"EricXiong420"},"content":"         * A defensive copy of {@code affiliations} is used internally.","lastModifiedDate":"2023-09-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":192,"author":{"gitId":"leezhanpeng"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"EricXiong420"},"content":"            setAffiliations(toCopy.affiliations);","lastModifiedDate":"2023-09-27"},{"lineNumber":194,"author":{"gitId":"shuenj"},"content":"            setAffiliationHistory(toCopy.affiliationHistory, toCopy.affiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"leezhanpeng"},"content":"            setShiftDays(toCopy.shiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"shuenj"},"content":"            setSpecialisations(toCopy.specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"leezhanpeng"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, role, affiliations, affiliationHistory, shiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"Seonlo99"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"Seonlo99"},"content":"         * Returns true if name is edited.","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"Seonlo99"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"Seonlo99"},"content":"        public boolean isNameEdited() {","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"Seonlo99"},"content":"            return !isNull(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"Seonlo99"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"Seonlo99"},"content":"         * Returns true if role is edited.","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"Seonlo99"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"Seonlo99"},"content":"        public boolean isRoleEdited() {","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"Seonlo99"},"content":"            return !isNull(role);","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"Seonlo99"},"content":"        /**","lastModifiedDate":"2023-10-11"},{"lineNumber":221,"author":{"gitId":"Seonlo99"},"content":"         * Returns true if affiliations is edited.","lastModifiedDate":"2023-10-11"},{"lineNumber":222,"author":{"gitId":"Seonlo99"},"content":"         */","lastModifiedDate":"2023-10-11"},{"lineNumber":223,"author":{"gitId":"Seonlo99"},"content":"        public boolean isAffiliationEdited() {","lastModifiedDate":"2023-10-11"},{"lineNumber":224,"author":{"gitId":"Seonlo99"},"content":"            return !isNull(affiliations);","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"EricXiong420"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-04"},{"lineNumber":232,"author":{"gitId":"EricXiong420"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"EricXiong420"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-04"},{"lineNumber":240,"author":{"gitId":"EricXiong420"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"EricXiong420"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-04"},{"lineNumber":248,"author":{"gitId":"EricXiong420"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"leezhanpeng"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2023-10-07"},{"lineNumber":252,"author":{"gitId":"leezhanpeng"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2023-10-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"leezhanpeng"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2023-10-07"},{"lineNumber":256,"author":{"gitId":"leezhanpeng"},"content":"            this.role \u003d role;","lastModifiedDate":"2023-10-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"leezhanpeng"},"content":"        public Optional\u003cShiftDays\u003e getShiftDays() {","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"leezhanpeng"},"content":"            return Optional.ofNullable(shiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"leezhanpeng"},"content":"        public void setShiftDays(ShiftDays shiftDays) {","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"leezhanpeng"},"content":"            this.shiftDays \u003d shiftDays;","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"shuenj"},"content":"        public Optional\u003cSet\u003cSpecialisation\u003e\u003e getSpecialisation() {","lastModifiedDate":"2023-10-30"},{"lineNumber":267,"author":{"gitId":"shuenj"},"content":"            return Optional.ofNullable(specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":268,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":269,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":270,"author":{"gitId":"shuenj"},"content":"        public void setSpecialisations(Set\u003cSpecialisation\u003e specialisations) {","lastModifiedDate":"2023-10-29"},{"lineNumber":271,"author":{"gitId":"shuenj"},"content":"            this.specialisations \u003d specialisations;","lastModifiedDate":"2023-10-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":275,"author":{"gitId":"EricXiong420"},"content":"         * Returns an unmodifiable affiliation set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-09-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"EricXiong420"},"content":"         * Returns {@code Optional#empty()} if {@code affiliations} is null.","lastModifiedDate":"2023-09-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":279,"author":{"gitId":"EricXiong420"},"content":"        public Optional\u003cSet\u003cAffiliation\u003e\u003e getAffiliations() {","lastModifiedDate":"2023-09-27"},{"lineNumber":280,"author":{"gitId":"EricXiong420"},"content":"            return (affiliations !\u003d null) ? Optional.of(Collections.unmodifiableSet(affiliations)) : Optional.empty();","lastModifiedDate":"2023-09-27"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":283,"author":{"gitId":"shuenj"},"content":"         * Returns an unmodifiable affiliation set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-15"},{"lineNumber":285,"author":{"gitId":"shuenj"},"content":"         * Returns {@code Optional#empty()} if {@code affiliations} is null.","lastModifiedDate":"2023-10-15"},{"lineNumber":286,"author":{"gitId":"shuenj"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":287,"author":{"gitId":"shuenj"},"content":"        public Optional\u003cSet\u003cAffiliation\u003e\u003e getAffiliationHistory() {","lastModifiedDate":"2023-10-15"},{"lineNumber":288,"author":{"gitId":"shuenj"},"content":"            return (affiliationHistory !\u003d null) ? Optional.of(Collections.unmodifiableSet(affiliationHistory))","lastModifiedDate":"2023-10-15"},{"lineNumber":289,"author":{"gitId":"shuenj"},"content":"                : Optional.empty();","lastModifiedDate":"2023-10-15"},{"lineNumber":290,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"EricXiong420"},"content":"        /**","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"EricXiong420"},"content":"         * Sets {@code affiliations} to this object\u0027s {@code affiliations}.","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"EricXiong420"},"content":"         * A defensive copy of {@code affiliations} is used internally.","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"EricXiong420"},"content":"         */","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"EricXiong420"},"content":"        public void setAffiliations(Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"EricXiong420"},"content":"            this.affiliations \u003d (affiliations !\u003d null) ? new HashSet\u003c\u003e(affiliations) : null;","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"shuenj"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":300,"author":{"gitId":"shuenj"},"content":"         * Sets {@code affiliationHistory} and {@code affiliations} to","lastModifiedDate":"2023-10-15"},{"lineNumber":301,"author":{"gitId":"shuenj"},"content":"         * this object\u0027s {@code affiliationHistory}.","lastModifiedDate":"2023-10-15"},{"lineNumber":302,"author":{"gitId":"shuenj"},"content":"         * A defensive copy of {@code affiliationHistory} is used internally.","lastModifiedDate":"2023-10-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":304,"author":{"gitId":"shuenj"},"content":"        public void setAffiliationHistory(Set\u003cAffiliation\u003e affiliationHistory, Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-15"},{"lineNumber":305,"author":{"gitId":"shuenj"},"content":"            if (affiliationHistory !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":306,"author":{"gitId":"shuenj"},"content":"                this.affiliationHistory \u003d new HashSet\u003c\u003e(affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":307,"author":{"gitId":"shuenj"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":308,"author":{"gitId":"shuenj"},"content":"                this.affiliationHistory \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":309,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":310,"author":{"gitId":"shuenj"},"content":"            if (affiliations !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":311,"author":{"gitId":"shuenj"},"content":"                addAffiliationsToHistory(affiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":312,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":315,"author":{"gitId":"shuenj"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":316,"author":{"gitId":"shuenj"},"content":"         * Sets {@code affiliationHistory} to this object\u0027s {@code affiliationHistory}.","lastModifiedDate":"2023-10-15"},{"lineNumber":317,"author":{"gitId":"shuenj"},"content":"         * A defensive copy of {@code affiliationHistory} is used internally.","lastModifiedDate":"2023-10-15"},{"lineNumber":318,"author":{"gitId":"shuenj"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":319,"author":{"gitId":"shuenj"},"content":"        public void setAffiliationHistory(Set\u003cAffiliation\u003e affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":320,"author":{"gitId":"shuenj"},"content":"            this.affiliationHistory \u003d (affiliationHistory !\u003d null)","lastModifiedDate":"2023-10-15"},{"lineNumber":321,"author":{"gitId":"shuenj"},"content":"                ? new HashSet\u003c\u003e(affiliationHistory) : null;","lastModifiedDate":"2023-10-15"},{"lineNumber":322,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":323,"author":{"gitId":"shuenj"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":324,"author":{"gitId":"shuenj"},"content":"         * Adds {@code affiliations} to this object\u0027s {@code affiliations}.","lastModifiedDate":"2023-10-15"},{"lineNumber":325,"author":{"gitId":"Seonlo99"},"content":"         * @param affiliations the affiliations to add to affiliation history.","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"shuenj"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":327,"author":{"gitId":"shuenj"},"content":"        public void addAffiliationsToHistory(Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-15"},{"lineNumber":328,"author":{"gitId":"shuenj"},"content":"            if (this.affiliationHistory \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":329,"author":{"gitId":"shuenj"},"content":"                this.affiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":330,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":331,"author":{"gitId":"shuenj"},"content":"            this.affiliationHistory.addAll(affiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":332,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":348,"author":{"gitId":"leezhanpeng"},"content":"                    \u0026\u0026 Objects.equals(role, otherEditPersonDescriptor.role)","lastModifiedDate":"2023-10-07"},{"lineNumber":349,"author":{"gitId":"shuenj"},"content":"                    \u0026\u0026 Objects.equals(affiliations, otherEditPersonDescriptor.affiliations)","lastModifiedDate":"2023-10-15"},{"lineNumber":350,"author":{"gitId":"leezhanpeng"},"content":"                    \u0026\u0026 Objects.equals(affiliationHistory, otherEditPersonDescriptor.affiliationHistory)","lastModifiedDate":"2023-10-25"},{"lineNumber":351,"author":{"gitId":"shuenj"},"content":"                    \u0026\u0026 Objects.equals(shiftDays, otherEditPersonDescriptor.shiftDays)","lastModifiedDate":"2023-10-29"},{"lineNumber":352,"author":{"gitId":"shuenj"},"content":"                    \u0026\u0026 Objects.equals(specialisations, otherEditPersonDescriptor.specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":361,"author":{"gitId":"leezhanpeng"},"content":"                    .add(\"role\", role)","lastModifiedDate":"2023-10-07"},{"lineNumber":362,"author":{"gitId":"EricXiong420"},"content":"                    .add(\"affiliations\", affiliations)","lastModifiedDate":"2023-09-27"},{"lineNumber":363,"author":{"gitId":"shuenj"},"content":"                    .add(\"affiliationHistory\", affiliationHistory)","lastModifiedDate":"2023-10-15"},{"lineNumber":364,"author":{"gitId":"leezhanpeng"},"content":"                    .add(\"shiftDays\", shiftDays)","lastModifiedDate":"2023-10-25"},{"lineNumber":365,"author":{"gitId":"shuenj"},"content":"                    .add(\"specialisations\", specialisations)","lastModifiedDate":"2023-10-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"leezhanpeng":29,"Seonlo99":34,"EricXiong420":41,"shuenj":68,"-":197}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting MediSync as requested ...\";","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true,","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"                Optional.empty());","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"leezhanpeng":4,"shuenj":1,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":" * Finds and lists all persons in contact list whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"leezhanpeng":1,"shuenj":1,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, Optional.empty());","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/InfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" * Updates the shift days of an existing person in the contact list.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"public class InfoCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    public static final String COMMAND_WORD \u003d \"info\";","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays the details of the person identified \"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_SHOW_INFO_SUCCESS \u003d \"Person information displayed on window!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * Creates an InfoCommand to display the information of the person with the specified {@code Index}.","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public InfoCommand(Index targetIndex) {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        return new CommandResult(MESSAGE_SHOW_INFO_SUCCESS, false, false,","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"                Optional.of(targetIndex.getZeroBased()));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof InfoCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand e \u003d (InfoCommand) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        return targetIndex.equals(e.targetIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"                .toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":72}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Lists all persons in the contact list to the user.","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons!\";","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shuenj":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/OnDutyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.StaffOnDutyPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * Finds and lists all staff members in contact list who are on duty for the day.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class OnDutyCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    public static final String COMMAND_WORD \u003d \"onduty\";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all staff members who are currently on duty \"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    private final StaffOnDutyPredicate predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a {@code OnDutyCommand}. Predicate instantiated with one that targets the current day of the week.","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    public OnDutyCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"        this.predicate \u003d new StaffOnDutyPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a {@code OnDutyCommand} with a {@code StaffOnDutyPredicate}.","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public OnDutyCommand(StaffOnDutyPredicate predicate) {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof OnDutyCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand otherOnDutyCommand \u003d (OnDutyCommand) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        return predicate.equals(otherOnDutyCommand.predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"                .toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":66}},{"path":"src/main/java/seedu/address/logic/commands/RemoveAffiliationHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.AffiliationModifier;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":" * Clears the affiliation history of an existing person in the contact list.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"public class RemoveAffiliationHistoryCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    public static final String COMMAND_WORD \u003d \"removeah\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Affiliation history has been cleared!\\n%1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clear the affiliation history of the person \"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"            + \"identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"     * @param index of the person in the filtered person list to remove affiliation history.","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"    public RemoveAffiliationHistoryCommand(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        Person personToClearAffiliationHistory \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.removeAffiliationHistory(personToClearAffiliationHistory.getAffiliationHistory(),","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"                personToClearAffiliationHistory, model);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"        personToClearAffiliationHistory.clearAffiliationHistory();","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(personToClearAffiliationHistory)));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        if (!(other instanceof RemoveAffiliationHistoryCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"        RemoveAffiliationHistoryCommand otherRemoveAffiliationHistoryCommand \u003d (RemoveAffiliationHistoryCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"        return index.equals(otherRemoveAffiliationHistoryCommand.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"leezhanpeng":2,"Seonlo99":75}},{"path":"src/main/java/seedu/address/logic/commands/ShiftCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":" * Updates the shift days of an existing person in the contact list.","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"public class ShiftCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"shift\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the shift days of the \"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"            + \"person identified with the given index number.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            + \"SHIFT_DAYS (from 1, Monday to 7, Sunday, typed with no spaces)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"            + \"2\" + \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"            + \"1346\";","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Shift days modified!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Shift Command Logger\");","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"    private final Index index;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    private final Set\u003cInteger\u003e shiftDayNumbers;","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"     * Creates an ShiftCommand to set the shift dates for the specified {@code Index}","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    public ShiftCommand(Index index, Set\u003cInteger\u003e shiftDayNumbers) {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(shiftDayNumbers);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"        this.shiftDayNumbers \u003d shiftDayNumbers;","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"        Person personToSetShiftDatesOf \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        if (!(personToSetShiftDatesOf instanceof Staff)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"            logger.log(Level.WARNING, \"Error: wrong role\");","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ROLE);","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        Staff staffToSetShiftDatesOf \u003d (Staff) personToSetShiftDatesOf; // checked cast","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"        ShiftDays shiftDays \u003d new ShiftDays(shiftDayNumbers);","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        staffToSetShiftDatesOf.setShiftDays(shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"        if (!(other instanceof ShiftCommand)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"        ShiftCommand e \u003d (ShiftCommand) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"        return index.equals(e.index) \u0026\u0026 shiftDayNumbers.equals(e.shiftDayNumbers);","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"leezhanpeng":7,"EricXiong420":81}},{"path":"src/main/java/seedu/address/logic/commands/SpecialisationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":" * Modifies the specialisations of an existing doctor in the contact list.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"public class SpecialisationCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    public static final String COMMAND_WORD \u003d \"spec\";","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Modify the specialisation to the person identified\"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        + \" by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"        + \"Clear the specialisation by not providing any specialisation.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        + \"SPEC (must be a valid specialisation)\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        + \"ENT, Orthopaedic\";","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Specialisation modified!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Specialisation Command Logger\");","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    private final Index index;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    private final Set\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * Creates a SpecialisationCommand to modify the specified {@code Specialisation}","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     * @param index of the person in the filtered person list to modify","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"     * @param specialisations of the person to be modified to","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"    public SpecialisationCommand(Index index, Set\u003cSpecialisation\u003e specialisations) {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        requireNonNull(specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        this.specialisations \u003d specialisations;","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"        Person personToModify \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"        if (!(personToModify instanceof Doctor)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ROLE);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"        Doctor modifiedPerson \u003d (Doctor) personToModify;","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"        modifiedPerson.setSpecialisations(specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(modifiedPerson)));","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        if (!(other instanceof SpecialisationCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"        // state check","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand e \u003d (SpecialisationCommand) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"                \u0026\u0026 specialisations.equals(e.specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":2,"shuenj":83}},{"path":"src/main/java/seedu/address/logic/parser/AddAffiliationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.AddAffiliationCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" * Parses input arguments and creates a new AddAffiliationCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"public class AddAffiliationCommandParser implements Parser\u003cAddAffiliationCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAffiliationCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     * and returns an AddAffiliationCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    public AddAffiliationCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"                ArgumentTokenizer","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"                        .tokenize(args, PREFIX_AFFILIATION);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        Index index;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"                    AddAffiliationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e affiliationListToAdd \u003d ParserUtil","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"                .parseAffiliations(argMultimap.getAllValues(PREFIX_AFFILIATION));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        if (affiliationListToAdd.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"            throw new ParseException(AddAffiliationCommand.MESSAGE_NO_AFFILIATION_INPUT);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        return new AddAffiliationCommand(index, affiliationListToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Seonlo99":45}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"                ArgumentTokenizer","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                        .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE, PREFIX_AFFILIATION);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ROLE, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliationList \u003d ParserUtil","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"            .parseAffiliations(argMultimap.getAllValues(PREFIX_AFFILIATION));","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliationHistory \u003d ParserUtil","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"            .parseAffiliations(argMultimap.getAllValues(PREFIX_AFFILIATION));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"        Person person \u003d role.generatePerson(name, phone, email, affiliationList, affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"leezhanpeng":6,"EricXiong420":12,"shuenj":5,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.AddAffiliationCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.AffiliationCommand;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.AffiliationHistoryCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.commands.InfoCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.commands.OnDutyCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.RemoveAffiliationHistoryCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.ShiftCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.SpecialisationCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"        case AffiliationCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"            return new AffiliationCommandParser().parse(arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        case AffiliationHistoryCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"            return new AffiliationHistoryCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"        case AddAffiliationCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"            return new AddAffiliationCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"EricXiong420"},"content":"        case ShiftCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"EricXiong420"},"content":"            return new ShiftCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"        case RemoveAffiliationHistoryCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"            return new RemoveAffiliationHistoryCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        case OnDutyCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"            return new OnDutyCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"        case SpecialisationCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"            return new SpecialisationCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"        case InfoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"            return new InfoCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":8,"Seonlo99":8,"EricXiong420":8,"shuenj":8,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/AffiliationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.AffiliationCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":" * Parses input arguments and creates a new AffiliationCommand object","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"public class AffiliationCommandParser implements Parser\u003cAffiliationCommand\u003e {","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"     * Parses the given {@code String} of arguments in the context of the AffiliationCommand","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"     * and returns a AffiliationCommand object for execution.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    public AffiliationCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"            return new AffiliationCommand(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"            throw new ParseException(","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AffiliationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"EricXiong420":32}},{"path":"src/main/java/seedu/address/logic/parser/AffiliationHistoryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.AffiliationHistoryCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":" * Parses input arguments and creates a new AffiliationCommand object","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"public class AffiliationHistoryCommandParser implements Parser\u003cAffiliationHistoryCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * Parses the given {@code String} of arguments in the context of the AffiliationCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * and returns a AffiliationCommand object for execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    public AffiliationHistoryCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"            return new AffiliationHistoryCommand(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"            logger.finer(\"This user input caused a ParseException: \"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"                    + AffiliationHistoryCommand.COMMAND_WORD + args);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AffiliationHistoryCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Seonlo99":7,"shuenj":32}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"    public static final Prefix PREFIX_AFFILIATION \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"leezhanpeng":1,"Seonlo99":1,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"                ArgumentTokenizer","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"                        .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE, PREFIX_AFFILIATION);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"            throw new ParseException(EditCommand.MESSAGE_EDIT_ROLE_NOT_ALLOW);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"        parseAffiliationsForEdit(argMultimap.getAllValues(PREFIX_AFFILIATION))","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"                .ifPresent(editPersonDescriptor::setAffiliations);","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"        parseAffiliationsForEdit(argMultimap.getAllValues(PREFIX_AFFILIATION))","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"                .ifPresent(editPersonDescriptor::addAffiliationsToHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"     * Parses {@code Collection\u003cString\u003e affiliations} into a {@code Set\u003cAffiliation\u003e}","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"     * if {@code affiliations} is non-empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"     * If {@code affiliations} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"     * {@code Set\u003cAffiliation\u003e} containing zero affiliations.","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"    private Optional\u003cSet\u003cAffiliation\u003e\u003e parseAffiliationsForEdit(Collection\u003cString\u003e affiliations) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"        assert affiliations !\u003d null;","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"        if (affiliations.isEmpty()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"        Collection\u003cString\u003e affiliationSet \u003d affiliations.size() \u003d\u003d 1","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"                \u0026\u0026 affiliations.contains(\"\") ? Collections.emptySet() : affiliations;","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"        return Optional.of(ParserUtil.parseAffiliations(affiliationSet));","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"leezhanpeng":2,"Seonlo99":6,"EricXiong420":16,"shuenj":2,"-":68}},{"path":"src/main/java/seedu/address/logic/parser/InfoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.commands.InfoCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * Parses input arguments and creates a new InfoCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class InfoCommandParser implements Parser\u003cInfoCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the given {@code String} of arguments in the context of the InfoCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * and returns a InfoCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    public InfoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"            return new InfoCommand(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, InfoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":30}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"     * Parses a {@code String role} into a {@code Role}.","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"     * Parses a {@code String affiliation} into a {@code Affiliation}.","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"     * @throws ParseException if the given {@code affiliation} is invalid.","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"EricXiong420"},"content":"    public static Affiliation parseAffiliation(String affiliation) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(affiliation);","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"EricXiong420"},"content":"        String trimmedAffiliation \u003d affiliation.trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"EricXiong420"},"content":"        if (!Affiliation.isValidAffiliationName(trimmedAffiliation)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"EricXiong420"},"content":"            throw new ParseException(Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"EricXiong420"},"content":"        return new Affiliation(trimmedAffiliation);","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"EricXiong420"},"content":"     * Parses {@code Collection\u003cString\u003e affiliations} into a {@code Set\u003cAffiliation\u003e}.","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"EricXiong420"},"content":"    public static Set\u003cAffiliation\u003e parseAffiliations(Collection\u003cString\u003e affiliations) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(affiliations);","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"EricXiong420"},"content":"        final Set\u003cAffiliation\u003e affiliationSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"EricXiong420"},"content":"        for (String affiliationName : affiliations) {","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"EricXiong420"},"content":"            affiliationSet.add(parseAffiliation(affiliationName));","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"EricXiong420"},"content":"        return affiliationSet;","lastModifiedDate":"2023-09-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"EricXiong420"},"content":"     * Parses a {@code String shiftDayString} into a {@code ShiftDays}.","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"EricXiong420"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"EricXiong420"},"content":"     * @throws ParseException if the given {@code shiftDayString} is invalid.","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"shuenj"},"content":"    public static Set\u003cInteger\u003e parseShiftDays(String shiftDayString) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(shiftDayString);","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"shuenj"},"content":"        // converts string into CharStream, then into IntStream","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"shuenj"},"content":"        Set\u003cInteger\u003e shiftDaysSet \u003d shiftDayString.trim().chars().map(x -\u003e x - \u00270\u0027)","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"EricXiong420"},"content":"                .boxed().collect(Collectors.toSet());","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"shuenj"},"content":"        if (!ShiftDays.isValidShiftDays(shiftDaysSet)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"shuenj"},"content":"            throw new ParseException(ShiftDays.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"shuenj"},"content":"        return shiftDaysSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"shuenj"},"content":"     * Parses {@code String specialisations} into a {@code Set\u003cSpecialisation\u003e}.","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"shuenj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"shuenj"},"content":"     * @throws ParseException if the given {@code specialisations} is invalid.","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"shuenj"},"content":"    public static Set\u003cSpecialisation\u003e parseSpecialisations(String specialisations)","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"shuenj"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"shuenj"},"content":"        requireNonNull(specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"shuenj"},"content":"        String trimmedSpecialisations \u003d specialisations.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"shuenj"},"content":"        if (trimmedSpecialisations.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"shuenj"},"content":"            return new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"shuenj"},"content":"        String[] specialisationNames \u003d trimmedSpecialisations.split(\",\");","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"shuenj"},"content":"        Set\u003cSpecialisation\u003e specialisationSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"shuenj"},"content":"        for (String specialisationName : specialisationNames) {","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"shuenj"},"content":"            String specialisationNameTrimmed \u003d specialisationName.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"shuenj"},"content":"            if (!Specialisation.isValidSpecialisationName(specialisationNameTrimmed)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"shuenj"},"content":"                throw new ParseException(Specialisation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"shuenj"},"content":"            specialisationSet.add(new Specialisation(specialisationNameTrimmed));","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"shuenj"},"content":"        return specialisationSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":171,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"leezhanpeng":9,"EricXiong420":26,"shuenj":34,"-":104}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":" * E.g. \u0027p/\u0027 in \u0027add James p/93824612\u0027.","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"leezhanpeng":1,"-":41}},{"path":"src/main/java/seedu/address/logic/parser/RemoveAffiliationHistoryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.RemoveAffiliationHistoryCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" * Parses input arguments and creates a new ClearAffiliationHistoryCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"public class RemoveAffiliationHistoryCommandParser implements Parser\u003cRemoveAffiliationHistoryCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearAffiliationHistoryCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     * and returns a ClearAffiliationHistoryCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    public RemoveAffiliationHistoryCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"            return new RemoveAffiliationHistoryCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveAffiliationHistoryCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Seonlo99":30}},{"path":"src/main/java/seedu/address/logic/parser/ShiftCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.ShiftCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":" * Parses input arguments and creates a new ShiftCommand object","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"public class ShiftCommandParser implements Parser\u003cShiftCommand\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     * Parses the given {@code String} of arguments in the context of the ShiftCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * and returns a ShiftCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    public ShiftCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            String[] splitArgs \u003d args.trim().split(\" \", 2);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            Set\u003cInteger\u003e shiftDayNumbers;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"            // check if there are any arguments after the index","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"            if (splitArgs.length \u003e 1 \u0026\u0026 !splitArgs[1].isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"                shiftDayNumbers \u003d ParserUtil.parseShiftDays(splitArgs[1]);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"                shiftDayNumbers \u003d ParserUtil.parseShiftDays(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"            return new ShiftCommand(index, shiftDayNumbers);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShiftCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"leezhanpeng":2,"EricXiong420":34,"shuenj":8}},{"path":"src/main/java/seedu/address/logic/parser/SpecialisationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.SpecialisationCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":" * Parses input arguments and creates a new SpecialisationCommand object","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"public class SpecialisationCommandParser implements Parser\u003cSpecialisationCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * Parses the given {@code String} of arguments in the context of the SpecialisationCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * and returns a SpecialisationCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    public SpecialisationCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            // Limit set to -1 to include empty strings in the array","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"            String[] splitArgs \u003d args.trim().split(\"\\\\s+\", -1);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"            // Parse the index from the first part of the arguments.","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            Set\u003cSpecialisation\u003e specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"            // Check if there are any arguments after the index.","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"            if (splitArgs.length \u003e 1 \u0026\u0026 !splitArgs[1].isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"                String specialisationString \u003d String.join(\" \", Arrays.copyOfRange(splitArgs, 1, splitArgs.length));","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"                specialisations \u003d ParserUtil.parseSpecialisations(specialisationString);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"            return new SpecialisationCommand(index, specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SpecialisationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"shuenj":49}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"     * Adds a person to the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"     * The person must not already exist in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"     * {@code target} must exist in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"     * {@code key} must exist in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shuenj":6,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * Returns the user prefs\u0027 contact list file path.","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"     * Sets the user prefs\u0027 contact list file path.","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"     * Replaces contact list data with the data in {@code addressBook}.","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"     * The person must exist in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"     * {@code person} must not already exist in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"     * {@code target} must exist in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shuenj":8,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":" * Represents the in-memory model of the contact list data.","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"        logger.fine(\"Initializing with contact list: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shuenj":2,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":" * Unmodifiable view of an contact list","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shuenj":1,"-":16}},{"path":"src/main/java/seedu/address/model/affiliation/Affiliation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.model.affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":" * Represents an Affiliation in the contact list.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidAffiliationName(String)}","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"public class Affiliation {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Affiliations names should be alphanumeric and \"","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"            + \"spaces\";","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    public final String affiliationName;","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * Constructs a {@code Affiliation}.","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param affiliationName A valid affiliation name.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    public Affiliation(String affiliationName) {","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"        requireNonNull(affiliationName);","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        checkArgument(isValidAffiliationName(affiliationName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        this.affiliationName \u003d affiliationName;","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"     * Returns true if a given string is a valid affiliation name.","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    public static boolean isValidAffiliationName(String test) {","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        if (!(other instanceof Affiliation)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        Affiliation otherAffiliation \u003d (Affiliation) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"        return affiliationName.equals(otherAffiliation.affiliationName);","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        return affiliationName.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        return affiliationName;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"leezhanpeng":1,"Seonlo99":1,"EricXiong420":61}},{"path":"src/main/java/seedu/address/model/affiliation/AffiliationModifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.affiliation;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" * AffiliationModifier modifies affiliation.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"public class AffiliationModifier {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     * Adds the affiliated person to the affiliations for every","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * person\u0027s affiliation in the affiliation set provided.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @param affiliationSet The affiliation set that contains all person that needs to add the affiliated person.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     * @param affiliatedPerson The affiliated person to add to every person in the affiliation set.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @param model The current model that is running.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public static void addAffiliations(Set\u003cAffiliation\u003e affiliationSet, Person affiliatedPerson, Model model) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        requireAllNonNull(affiliationSet, affiliatedPerson, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        for (Affiliation affiliation: affiliationSet) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            Person otherAffiliatedPerson \u003d AuthenticateAffiliation.findAffiliatedPerson(affiliation, addressBook);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"            assert otherAffiliatedPerson !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"            otherAffiliatedPerson.getAffiliations().add(new Affiliation(affiliatedPerson.getName().fullName));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * Adds the affiliated person to the affiliation history for every","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * person\u0027s affiliation history in the affiliation set provided.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"     * @param affiliationSet The affiliation set that contains all person that needs to add the affiliated person.","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"     * @param affiliatedPerson The affiliated person to add to every person in the affiliation set.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"     * @param model The current model that is running.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"    public static void addAffiliationHistory(Set\u003cAffiliation\u003e affiliationSet, Person affiliatedPerson, Model model) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"        requireAllNonNull(affiliationSet, affiliatedPerson, model);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        for (Affiliation affiliation: affiliationSet) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"            Person otherAffiliatedPerson \u003d AuthenticateAffiliation.findAffiliatedPerson(affiliation, addressBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"            assert otherAffiliatedPerson !\u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"            otherAffiliatedPerson.getAffiliationHistory().add(new Affiliation(affiliatedPerson.getName().fullName));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"     * Removes the affiliated person from the affiliations for every","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"     * person\u0027s affiliation in the affiliation set provided.","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"     * @param affiliationSet The affiliation set that contains all person that needs to remove the affiliated person.","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"     * @param affiliatedPerson The affiliated person to remove from every person in the affiliation set.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"     * @param model The current model that is running.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"    public static void removeAffiliations(Set\u003cAffiliation\u003e affiliationSet, Person affiliatedPerson, Model model) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"        requireAllNonNull(affiliationSet, affiliatedPerson, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"        for (Affiliation affiliation: affiliationSet) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"            Person otherAffiliatedPerson \u003d AuthenticateAffiliation.findAffiliatedPerson(affiliation, addressBook);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"            assert otherAffiliatedPerson !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"            otherAffiliatedPerson.getAffiliations().remove(new Affiliation(affiliatedPerson.getName().fullName));","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"     * Removes the affiliated person from the affiliation history for every","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"     * person\u0027s affiliation history in the affiliation set provided.","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"     * @param affiliationSet","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"     * @param affiliatedPerson","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"     * @param model","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    public static void removeAffiliationHistory(Set\u003cAffiliation\u003e affiliationSet, Person affiliatedPerson, Model model) {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"        requireAllNonNull(affiliationSet, affiliatedPerson, model);","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"        for (Affiliation affiliation: affiliationSet) {","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"            Person otherAffiliatedPerson \u003d AuthenticateAffiliation.findAffiliatedPerson(affiliation, addressBook);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"            assert otherAffiliatedPerson !\u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"            otherAffiliatedPerson.getAffiliationHistory().remove(new Affiliation(affiliatedPerson.getName().fullName));","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"     * Changes the affiliated person\u0027s name to a new name for every","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"     * person\u0027s affiliation in the affiliation set provided.","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"     * @param affiliationSet The affiliation set that contains all person that needs to change the affiliated","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"     *                       person from old name to new name.","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"     * @param oldName The old name that identify the person.","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"     * @param newName The new name to identify the person.","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"     * @param model The current model that is running.","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"Seonlo99"},"content":"    public static void nameChangeAffiliations(Set\u003cAffiliation\u003e affiliationSet,","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"Seonlo99"},"content":"                                              Name oldName, Name newName, Model model) {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Seonlo99"},"content":"        requireAllNonNull(affiliationSet, oldName, newName, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"Seonlo99"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"        for (Affiliation affiliation: affiliationSet) {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"Seonlo99"},"content":"            Person otherAffiliatedPerson \u003d AuthenticateAffiliation.findAffiliatedPerson(affiliation, addressBook);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"Seonlo99"},"content":"            assert otherAffiliatedPerson !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"Seonlo99"},"content":"            Set\u003cAffiliation\u003e otherAffiliatedSet \u003d otherAffiliatedPerson.getAffiliations();","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"Seonlo99"},"content":"            for (Affiliation affiliation1: otherAffiliatedSet) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"Seonlo99"},"content":"                if (affiliation1.affiliationName.equals(oldName.fullName)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"Seonlo99"},"content":"                    otherAffiliatedSet.remove(affiliation1);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"Seonlo99"},"content":"                    otherAffiliatedSet.add(new Affiliation(newName.fullName));","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"Seonlo99"},"content":"                    break;","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"Seonlo99"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"shuenj"},"content":"     * Changes the affiliated person\u0027s name to a new name for every","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"shuenj"},"content":"     * person\u0027s affiliation history in the affiliation set provided.","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"shuenj"},"content":"     * @param affiliationSet The affiliation set that contains all person that needs to change the affiliated","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"shuenj"},"content":"     *                      person from old name to new name.","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"     * @param oldName The old name that identify the person.","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"shuenj"},"content":"     * @param newName The new name to identify the person.","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"shuenj"},"content":"     * @param model The current model that is running.","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"shuenj"},"content":"    public static void nameChangeAffiliationHistory(Set\u003cAffiliation\u003e affiliationSet,","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"shuenj"},"content":"                                                     Name oldName, Name newName, Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"shuenj"},"content":"        requireAllNonNull(affiliationSet, oldName, newName, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"shuenj"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"shuenj"},"content":"        for (Affiliation affiliation: affiliationSet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"shuenj"},"content":"            Person otherAffiliatedPerson \u003d AuthenticateAffiliation.findAffiliatedPerson(affiliation, addressBook);","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"shuenj"},"content":"            if (otherAffiliatedPerson \u003d\u003d null) { // ignore deleted person in history for now","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"shuenj"},"content":"                continue;","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"shuenj"},"content":"            Set\u003cAffiliation\u003e otherAffiliatedSet \u003d otherAffiliatedPerson.getAffiliationHistory();","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"shuenj"},"content":"            for (Affiliation affiliation1: otherAffiliatedSet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"shuenj"},"content":"                if (affiliation1.affiliationName.equals(oldName.fullName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"shuenj"},"content":"                    otherAffiliatedSet.remove(affiliation1);","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"shuenj"},"content":"                    otherAffiliatedSet.add(new Affiliation(newName.fullName));","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"shuenj"},"content":"                    break;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"shuenj"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Seonlo99":85,"shuenj":71}},{"path":"src/main/java/seedu/address/model/affiliation/AuthenticateAffiliation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.affiliation;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.exceptions.AffiliationPersonNotFoundException;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.exceptions.SamePersonAffiliationException;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.exceptions.SameRoleAffiliationException;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":" * AffiliationChecker checks if affiliation is valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"public class AuthenticateAffiliation {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     * Returns true if affiliation list pass the check, throws an exception otherwise.","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"     * @param model The current model that is running.","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"     * @throws CommandException If affiliation list fails the check.","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    public static Boolean check(Set\u003cAffiliation\u003e affiliationSet, Person personAddingAffiliation, Model model)","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        requireAllNonNull(affiliationSet, personAddingAffiliation, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        if (affiliationSet.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        for (Affiliation affiliation: affiliationSet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"            Person affiliatedPerson \u003d findAffiliatedPerson(affiliation, addressBook);","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"            if (affiliatedPerson \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"                throw new AffiliationPersonNotFoundException(affiliation.affiliationName);","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"            if (affiliatedPerson.getName().equals(personAddingAffiliation.getName())) {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"                throw new SamePersonAffiliationException(affiliatedPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"            if ((affiliatedPerson instanceof Staff \u0026\u0026 personAddingAffiliation instanceof Staff)","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"                    || (affiliatedPerson instanceof Patient \u0026\u0026 personAddingAffiliation instanceof Patient)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"                throw new SameRoleAffiliationException(affiliatedPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"        return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"     * Returns the person if affiliation person exist in address book, null otherwise.","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"     * @param affiliation The affiliation contains the affiliation person.","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"     * @param addressBook The address book to check for the affiliation person.","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"    public static Person findAffiliatedPerson(Affiliation affiliation, ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(affiliation);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"        for (Person p: addressBook.getPersonList()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"            if (p.getName().fullName.equals(affiliation.affiliationName)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"                return p;","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"        return null;","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"leezhanpeng":5,"Seonlo99":68}},{"path":"src/main/java/seedu/address/model/affiliation/exceptions/AffiliationPersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.affiliation.exceptions;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":" * Throws a AffiliationPersonNotFoundException exception which is a CommmandException","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" * when the affiliation person is not found in address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"public class AffiliationPersonNotFoundException extends CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"     * Constructs a AffiliationPersonNotFoundException.","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"     * @param nameOfPersonNotFound The name of person that is not found in address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    public AffiliationPersonNotFoundException(String nameOfPersonNotFound) {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"        super(nameOfPersonNotFound + \" cannot be added as an affiliation as it does not exist \"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"                + \"in the contact list.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"Seonlo99":19}},{"path":"src/main/java/seedu/address/model/affiliation/exceptions/SamePersonAffiliationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.affiliation.exceptions;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" * Throws a SamePersonAffiliationException exception which is a CommmandException","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * when the affiliation person is the same as person adding affiliation.","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"public class SamePersonAffiliationException extends CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"     * Constructs a SamePersonAffiliationException.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"     * @param personNotAdded The person that fails to add in affiliation.","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    public SamePersonAffiliationException(Person personNotAdded) {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"        super(personNotAdded.getName().toString() + \" cannot be added as an affiliation as it \"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"                + \"is the same person.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"Seonlo99":20}},{"path":"src/main/java/seedu/address/model/affiliation/exceptions/SameRoleAffiliationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.affiliation.exceptions;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" * Throws a SameRoleAffiliationException exception which is a CommmandException","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * when the affiliation person\u0027s role is the same as the role of the person adding affiliation.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"public class SameRoleAffiliationException extends CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"     * Constructs a SameRoleAffiliationException.","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"     * @param personNotAdded The person that fails to add in affiliation.","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    public SameRoleAffiliationException(Person personNotAdded) {","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"        super(personNotAdded.getName().toString() + \" cannot be added as an affiliation as \"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"                + \"they are both \"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"                + (personNotAdded instanceof Staff ? \"staff members\" : \"patients\") + \".\");","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"leezhanpeng":3,"Seonlo99":20}},{"path":"src/main/java/seedu/address/model/person/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":" * Represents a Doctor in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class Doctor extends Staff {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    private final HashSet\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * Every field must be present and not null, except affiliationHistory.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    public Doctor(Name name, Phone phone, Email email,","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"            Set\u003cAffiliation\u003e affiliations, Set\u003cAffiliation\u003e affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"        super(name, phone, email, new Role(\"Doctor\"), affiliations, affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"        specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    public Doctor(Name name, Phone phone, Email email, Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"        super(name, phone, email, new Role(\"Doctor\"), affiliations);","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"    public HashSet\u003cSpecialisation\u003e getSpecialisations() {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"        return specialisations;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    public void setSpecialisations(Set\u003cSpecialisation\u003e specialisations) {","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        this.specialisations.clear();","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        this.specialisations.addAll(specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"     * Returns true if both doctors have the same identity and data fields.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     * This defines a stronger notion of equality between two doctors.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        Doctor otherDoctor \u003d (Doctor) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        return getName().equals(otherDoctor.getName())","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getPhone().equals(otherDoctor.getPhone())","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getEmail().equals(otherDoctor.getEmail())","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getRole().equals(otherDoctor.getRole())","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getAffiliations().equals(otherDoctor.getAffiliations())","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getAffiliationHistory().equals(otherDoctor.getAffiliationHistory())","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"                \u0026\u0026 getShiftDays().equals(otherDoctor.getShiftDays())","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"                \u0026\u0026 getSpecialisations().equals(otherDoctor.getSpecialisations());","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getRole(), getAffiliations(),","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"                getAffiliationHistory(), getShiftDays());","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        return getStringBuilderRepresentation().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"    public ToStringBuilder getStringBuilderRepresentation() {","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        return super.getStringBuilderRepresentation().add(\"specialisations\", specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"leezhanpeng":55,"shuenj":29}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":" * Represents a Person\u0027s email in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shuenj":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":" * Represents a Person\u0027s name in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":1,"shuenj":1,"-":65}},{"path":"src/main/java/seedu/address/model/person/NameMatchesAffiliationPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"public class NameMatchesAffiliationPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    private final Set\u003cAffiliation\u003e affiliations;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    public NameMatchesAffiliationPredicate(Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"        this.affiliations \u003d affiliations;","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"        return affiliations.contains(new Affiliation(person.getName().fullName));","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        if (!(other instanceof NameMatchesAffiliationPredicate)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate otherNameMatchesAffiliationPredicate \u003d (NameMatchesAffiliationPredicate) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        return affiliations.equals(otherNameMatchesAffiliationPredicate.affiliations);","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"                .add(\"affiliations\", affiliations).toString();","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"EricXiong420":44}},{"path":"src/main/java/seedu/address/model/person/NextOfKin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * Represents a Patient\u0027s Next of Kin in the contact list.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"public class NextOfKin {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    public final Name name;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    public final Phone phone;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    public final Relationship relationship;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    public NextOfKin(Name name, Phone phone, Relationship relationship) {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"        requireAllNonNull(name, phone, relationship);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"        this.relationship \u003d relationship;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"     * Constructs a NextOfKin with no parameters.","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    public NextOfKin() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"        this.relationship \u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        return this.name;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        return this.phone;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"    public Relationship getRelationship() {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        return this.relationship;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"    public boolean isPresent() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        return this.name !\u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"        if (!(other instanceof NextOfKin)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        NextOfKin otherNextOfKin \u003d (NextOfKin) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"        if (this.isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"            return getName().equals(otherNextOfKin.getName())","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"                    \u0026\u0026 getPhone().equals(otherNextOfKin.getPhone())","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"                    \u0026\u0026 getRelationship().equals(otherNextOfKin.getRelationship());","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"            return !otherNextOfKin.isPresent();","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"    public ToStringBuilder getStringBuilderRepresentation() {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"                .add(\"relationship\", relationship);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"        return Objects.hash(getName(), getPhone(), getRelationship());","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"        return getStringBuilderRepresentation().toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Seonlo99":90}},{"path":"src/main/java/seedu/address/model/person/Nurse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * Represents a Nurse in the contact list.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"public class Nurse extends Staff {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"     * Every field must be present and not null, except affiliationHistory.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    public Nurse(Name name, Phone phone, Email email,","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"                  Set\u003cAffiliation\u003e affiliations, Set\u003cAffiliation\u003e affiliationHistory) {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"        super(name, phone, email, new Role(\"Nurse\"), affiliations, affiliationHistory);","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public Nurse(Name name, Phone phone, Email email, Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        super(name, phone, email, new Role(\"Nurse\"), affiliations);","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * Returns true if both nurses have the same identity and data fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     * This defines a stronger notion of equality between two nurses.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof Nurse)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        Nurse otherNurse \u003d (Nurse) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        return getName().equals(otherNurse.getName())","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getPhone().equals(otherNurse.getPhone())","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getEmail().equals(otherNurse.getEmail())","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getRole().equals(otherNurse.getRole())","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getAffiliations().equals(otherNurse.getAffiliations())","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getAffiliationHistory().equals(otherNurse.getAffiliationHistory())","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getShiftDays().equals(otherNurse.getShiftDays());","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getRole(), getAffiliations(),","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"                getAffiliationHistory(), getShiftDays());","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        return getStringBuilderRepresentation().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":64}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" * Represents a Patient in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_NEXT_OF_KIN_NOT_EXIST \u003d \"This person does not have a Next-of-Kin\";","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    private NextOfKin nextOfKin;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    public Patient(Name name, Phone phone, Email email,","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliations, Set\u003cAffiliation\u003e affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"        super(name, phone, email, new Role(\"Patient\"), affiliations, affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        this.nextOfKin \u003d new NextOfKin();","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public Patient(Name name, Phone phone, Email email, Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        super(name, phone, email, new Role(\"Patient\"), affiliations);","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"        this.nextOfKin \u003d new NextOfKin();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        return getName().equals(otherPatient.getName())","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"                \u0026\u0026 getPhone().equals(otherPatient.getPhone())","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"                \u0026\u0026 getEmail().equals(otherPatient.getEmail())","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"                \u0026\u0026 getRole().equals(otherPatient.getRole())","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"                \u0026\u0026 getAffiliations().equals(otherPatient.getAffiliations())","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"                \u0026\u0026 getAffiliationHistory().equals(otherPatient.getAffiliationHistory())","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"                \u0026\u0026 getNextOfKin().equals(otherPatient.getNextOfKin());","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    public ToStringBuilder getStringBuilderRepresentation() {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        if (!nextOfKin.isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"            return super.getStringBuilderRepresentation().add(\"nextOfKin\", MESSAGE_NEXT_OF_KIN_NOT_EXIST);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"        return super.getStringBuilderRepresentation().add(\"nextOfKin\", getNextOfKin());","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getRole(), getAffiliations(),","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"                getAffiliationHistory(), getNextOfKin());","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"    public NextOfKin getNextOfKin() {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"        return this.nextOfKin;","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"    public void setNextOfKin(NextOfKin newNextOfKin) {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"        this.nextOfKin \u003d newNextOfKin;","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"    public void clearNextOfKins() {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"        this.nextOfKin \u003d new NextOfKin();","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"        return getStringBuilderRepresentation().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"leezhanpeng":21,"Seonlo99":58,"shuenj":8}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":" * Represents a Person in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private final Role role;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    private final Set\u003cAffiliation\u003e affiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    private final Set\u003cAffiliation\u003e affiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"     * Every field must be present and not null, except affiliationHistory.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public Person(Name name, Phone phone, Email email, Role role, Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        requireAllNonNull(name, phone, email, role, affiliations);","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        this.affiliations.addAll(affiliations);","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        this.affiliationHistory.addAll(affiliations);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"    public Person(Name name, Phone phone, Email email, Role role,","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliations, Set\u003cAffiliation\u003e affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        requireAllNonNull(name, phone, email, role, affiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        this.affiliations.addAll(affiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        this.affiliationHistory.addAll(affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    public Role getRole() {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        return role;","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"     * Returns an affiliation set.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"    public Set\u003cAffiliation\u003e getAffiliations() {","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"        return affiliations;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"     * Returns an affiliation history set.","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"     * @return affiliationHistory","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"    public Set\u003cAffiliation\u003e getAffiliationHistory() {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"        return affiliationHistory;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"     * Clear current affiliation history and add current affiliations to history.","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"    public void clearAffiliationHistory() {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"        this.affiliationHistory.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"        this.affiliationHistory.addAll(this.affiliations);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 role.equals(otherPerson.role)","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"shuenj"},"content":"                \u0026\u0026 affiliations.equals(otherPerson.affiliations)","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"shuenj"},"content":"                \u0026\u0026 affiliationHistory.equals(otherPerson.affiliationHistory);","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"        return Objects.hash(name, phone, email, role, affiliations, affiliationHistory);","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"Seonlo99"},"content":"    public ToStringBuilder getStringBuilderRepresentation() {","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"Seonlo99"},"content":"                .add(\"role\", role)","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"shuenj"},"content":"                .add(\"affiliations\", affiliations)","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"shuenj"},"content":"                .add(\"affiliationHistory\", affiliationHistory);","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"Seonlo99"},"content":"        return getStringBuilderRepresentation().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhanpeng":7,"Seonlo99":13,"EricXiong420":4,"shuenj":21,"-":107}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":" * Represents a Person\u0027s phone number in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shuenj":1,"-":60}},{"path":"src/main/java/seedu/address/model/person/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" * Represents a Person\u0027s relationship in the contact list.","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRelationship(String)}","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"public class Relationship {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"            \"Relationship should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    /*","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"     * The first character of the Relationship must not be a whitespace,","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    public final String relationship;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     * Constructs a {@code Relationship}.","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"     * @param relationship A valid relationship.","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    public Relationship(String relationship) {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        checkArgument(isValidRelationship(relationship), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        this.relationship \u003d relationship;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     * Returns true if a given string is a valid relationship.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public static boolean isValidRelationship(String test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        if (!(other instanceof Relationship)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"        Relationship otherRelationship \u003d (Relationship) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"        return relationship.equals(otherRelationship.relationship);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        return relationship.hashCode();","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        return relationship;","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Seonlo99":65}},{"path":"src/main/java/seedu/address/model/person/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":" * Represents a Person\u0027s role in the contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"public class Role {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * Represents different types of role in MediSync.","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    public enum Type {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"        DOCTOR,","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"        NURSE,","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        PATIENT","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     * Role must be exactly one of the types. It is case-insensitive.","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?i)\" + Arrays.stream(Type.values()).map(Enum::name)","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"            .collect(Collectors.joining(\"|\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Role can only be Doctor, Nurse or Patient, \"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"            + \"and it should not be blank\";","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"     * @param role A valid role.","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    public Role(String role) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        checkArgument(isValidRole(role), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        value \u003d role.substring(0, 1).toUpperCase() + role.substring(1).toLowerCase();","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"     * Returns true if a given string is a valid role.","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"     * Returns person with its particular type based on the role.","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"     * @param name Name of person.","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"     * @param phone Phone of person.","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"     * @param email Email of person.","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"     * @param affiliationList Affiliations of person.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"    public Person generatePerson(Name name, Phone phone, Email email,","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliationList, Set\u003cAffiliation\u003e affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        assert value.toUpperCase().equals(Type.DOCTOR.name())","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"                || value.toUpperCase().equals(Type.NURSE.name())","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"                || value.toUpperCase().equals(Type.PATIENT.name());","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        if (value.toUpperCase().equals(Type.DOCTOR.name())) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"            return new Doctor(name, phone, email, affiliationList, affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        } else if (value.toUpperCase().equals(Type.NURSE.name())) {","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"            return new Nurse(name, phone, email, affiliationList, affiliationHistory);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"        } else if (value.toUpperCase().equals(Type.PATIENT.name())) {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"            return new Patient(name, phone, email, affiliationList, affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"            return null;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"     * Returns person with its particular type based on the role.","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"     * @param name Name of person.","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"     * @param phone Phone of person.","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"     * @param email Email of person.","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"     * @param affiliationList Affiliations of person.","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"    public Person generatePerson(Name name, Phone phone, Email email, Set\u003cAffiliation\u003e affiliationList) {","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"        assert value.toUpperCase().equals(Type.DOCTOR.name())","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"                || value.toUpperCase().equals(Type.NURSE.name())","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"                || value.toUpperCase().equals(Type.PATIENT.name());","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"        if (value.toUpperCase().equals(Type.DOCTOR.name())) {","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"            return new Doctor(name, phone, email, affiliationList);","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"        } else if (value.toUpperCase().equals(Type.NURSE.name())) {","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"            return new Nurse(name, phone, email, affiliationList);","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"        } else if (value.toUpperCase().equals(Type.PATIENT.name())) {","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"            return new Patient(name, phone, email, affiliationList);","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"            return null;","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof Role)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"        Role otherRole \u003d (Role) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"        return value.equals(otherRole.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"leezhanpeng":112,"shuenj":20}},{"path":"src/main/java/seedu/address/model/person/ShiftDays.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * Represents a set of ShiftDays in the contact list.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"public class ShiftDays implements Iterable\u003cInteger\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public static final int SMALLEST_DAY_REPRESENTATION \u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    public static final int NUMBER_OF_DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public static final Map\u003cInteger, String\u003e DAY_OF_WEEK_MAP \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"            put(1, \"Mon\");","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"            put(2, \"Tue\");","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            put(3, \"Wed\");","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            put(4, \"Thu\");","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            put(5, \"Fri\");","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            put(6, \"Sat\");","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"            put(7, \"Sun\");","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"        }};","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Indication of shift days should be integers \"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"            + \"between 1 to 7 inclusive.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    public final Set\u003cInteger\u003e shiftDays;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a default {@code ShiftDays} with no shifts.","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    public ShiftDays() {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a {@code ShiftDays}.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     * @param shiftDays A valid set of shift day integers.","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    public ShiftDays(Set\u003cInteger\u003e shiftDays) {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(shiftDays);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        checkArgument(isValidShiftDays(shiftDays), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays \u003d shiftDays;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"     * Returns true if a given set contains valid shift day integers.","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    public static boolean isValidShiftDays(Set\u003cInteger\u003e test) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        return test","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"                .stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"                .allMatch(shiftDay -\u003e shiftDay \u003e\u003d SMALLEST_DAY_REPRESENTATION \u0026\u0026 shiftDay \u003c\u003d NUMBER_OF_DAYS_IN_WEEK);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     * Returns the set of shiftDays.","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    public Set\u003cInteger\u003e getShiftDays() {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays;","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"     * Modifies the set of shift days.","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"     * @param shiftDays The set of integers representing the shift days.","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    public ShiftDays modifyShiftDays(Set\u003cInteger\u003e shiftDays) {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays.clear();","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays.addAll(shiftDays);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"     * Checks whether the set of shiftdays contains a particular day of the week represented in integer.","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"     * @param day The day of the week in integer.","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"    public boolean contains(int day) {","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays.contains(day);","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof ShiftDays)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        ShiftDays otherShiftDays \u003d (ShiftDays) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays.equals(otherShiftDays.shiftDays);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"     * Formats state as text for viewing.","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"        ArrayList\u003cInteger\u003e sortedShiftDays \u003d new ArrayList\u003c\u003e(shiftDays);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"        Collections.sort(sortedShiftDays);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"        ArrayList\u003cString\u003e daysOfWeek \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"        for (int shiftDay : sortedShiftDays) {","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"            daysOfWeek.add(DAY_OF_WEEK_MAP.get(shiftDay));","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"        return \"[\" + String.join(\", \", daysOfWeek) + \"]\";","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"     * Enables an iterator to loop through shift days.","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"    public Iterator\u003cInteger\u003e iterator() {","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays.iterator();","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"leezhanpeng":134}},{"path":"src/main/java/seedu/address/model/person/Specialisation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":" * Represents a Doctor\u0027s specialisation in the address book.","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"public class Specialisation {","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"            \"Specialisations should only contain alphanumeric characters and spaces.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    public final String specialisationName;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     * Constructs a {@code Specialisation}.","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"     * @param specialisationName A valid specialisation name.","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    public Specialisation(String specialisationName) {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"        requireNonNull(specialisationName);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"        checkArgument(isValidSpecialisationName(specialisationName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"        this.specialisationName \u003d specialisationName;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"     * Returns true if a given string is a valid specialisation name.","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    public static boolean isValidSpecialisationName(String test) {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"        return specialisationName;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        if (!(other instanceof Specialisation)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        Specialisation otherSpecialisation \u003d (Specialisation) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        return specialisationName.equals(otherSpecialisation.specialisationName);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        return specialisationName.hashCode();","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"shuenj":59}},{"path":"src/main/java/seedu/address/model/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * Represents a Staff in the contact list.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public class Staff extends Person {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    private final ShiftDays shiftDays;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * Every field must be present and not null, except affiliationHistory.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public Staff(Name name, Phone phone, Email email, Role role,","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"            Set\u003cAffiliation\u003e affiliations, Set\u003cAffiliation\u003e affiliationHistory) {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"        super(name, phone, email, role, affiliations, affiliationHistory);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"        // Instantiation of Staff should always begin with empty shift days.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d new ShiftDays();","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public Staff(Name name, Phone phone, Email email, Role role, Set\u003cAffiliation\u003e affiliations) {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        super(name, phone, email, role, affiliations);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        // Instantiation of Staff should always begin with empty shift days.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d new ShiftDays();","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    public ShiftDays getShiftDays() {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    public Staff setShiftDays(ShiftDays shiftDays) {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays.modifyShiftDays(shiftDays.getShiftDays());","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     * Checks if the staff is on duty on a particular day of the week.","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"     * @param day The day of the week in integer.","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    public boolean isWorkingOn(int day) {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays.contains(day);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    public ToStringBuilder getStringBuilderRepresentation() {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        return super.getStringBuilderRepresentation().add(\"shiftDays\", shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"     * Returns true if both staff have the same identity and data fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"     * This defines a stronger notion of equality between two staff members.","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof Staff)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        Staff otherStaff \u003d (Staff) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        return getName().equals(otherStaff.getName())","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getPhone().equals(otherStaff.getPhone())","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getEmail().equals(otherStaff.getEmail())","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getRole().equals(otherStaff.getRole())","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getAffiliations().equals(otherStaff.getAffiliations())","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 getAffiliationHistory().equals(otherStaff.getAffiliationHistory())","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"                \u0026\u0026 shiftDays.equals(otherStaff.getShiftDays());","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getRole(), getAffiliations(),","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"                getAffiliationHistory(), shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        return getStringBuilderRepresentation().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":97}},{"path":"src/main/java/seedu/address/model/person/StaffOnDutyPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * Tests that a {@code Person} is an instance of a {@code Staff} and that its {@code ShiftDays}","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * contains a particular day of the week.","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public class StaffOnDutyPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    public final int dayOfWeek;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a {@code StaffOnDutyPredicate} with the current day of the week indicated as target day.","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public StaffOnDutyPredicate() {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        this.dayOfWeek \u003d LocalDate.now().getDayOfWeek().getValue();","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a {@code StaffOnDutyPredicate} with an indicated day of the week.","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    public StaffOnDutyPredicate(int dayOfWeek) {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        if (!(person instanceof Staff)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        return ((Staff) person).isWorkingOn(dayOfWeek);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        if (!(other instanceof StaffOnDutyPredicate)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate otherStaffOnDutyPredicate \u003d (StaffOnDutyPredicate) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        return dayOfWeek \u003d\u003d otherStaffOnDutyPredicate.dayOfWeek;","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        return new ToStringBuilder(this).add(\"dayOfWeek\", dayOfWeek).toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":58}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            new Doctor(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"                    getAffiliationSet(\"Bernice Yu\", \"Charlotte Oliveiro\"))","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"                    .setShiftDays(getShiftDays(1, 3, 6)),","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"                    getAffiliationSet(\"Alex Yeoh\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"            new Nurse(new Name(\"May Ho\"), new Phone(\"94437233\"), new Email(\"homimay@example.com\"),","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"                        getAffiliationSet(\"Irfan Ibrahim\"))","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"                    .setShiftDays(getShiftDays(3, 4, 5)),","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"                    getAffiliationSet(\"Alex Yeoh\", \"Evelyn Ng\")),","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"            new Doctor(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"                    getAffiliationSet(\"Irfan Ibrahim\"))","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"                    .setShiftDays(getShiftDays(2, 5, 7)),","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"                    getAffiliationSet(\"David Li\", \"May Ho\")),","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"            new Nurse(new Name(\"Evelyn Ng\"), new Phone(\"92624417\"), new Email(\"eveng@example.com\"),","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"                    getAffiliationSet(\"Charlotte Oliveiro\"))","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                    .setShiftDays(getShiftDays(1, 2, 4, 6))","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"     * Returns an affiliation set containing the list of strings given.","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"    public static Set\u003cAffiliation\u003e getAffiliationSet(String... strings) {","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"                .map(Affiliation::new)","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"     * Returns a @code{ShiftDays} containing the list of days given as integers from 1 to 7.","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"    public static ShiftDays getShiftDays(Integer... days) {","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        return new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(days)));","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"     * Returns a @code{Specialisation} containing the list of specialisations given as strings.","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"    public static HashSet\u003cSpecialisation\u003e getSpecialisationSet(Set\u003cString\u003e strings) {","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        return strings.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"                .map(Specialisation::new)","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"                .collect(Collectors.toCollection(HashSet::new));","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"leezhanpeng":30,"Seonlo99":2,"EricXiong420":3,"shuenj":9,"-":37}},{"path":"src/main/java/seedu/address/storage/CustomJsonAdaptedPersonSerializer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.databind.JsonSerializer;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * Custom JSON serializer for converting a {@link JsonAdaptedPerson} object into JSON format.","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * \u003cp\u003eThe serialization process includes converting fields such as name, phone, email, role, affiliations,","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" * and affiliation history to JSON fields. Additionally, it conditionally includes the shiftDays","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" * field in the JSON output based on the person\u0027s role. If the role is \"Doctor\" or \"Nurse\", the shiftDays field is","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * included; otherwise, it is excluded.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"public class CustomJsonAdaptedPersonSerializer extends JsonSerializer\u003cJsonAdaptedPerson\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * Serializes the {@code JsonAdaptedPerson} object into JSON format.","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     * @param person The {@code JsonAdaptedPerson} object to be serialized.","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"     * @param gen The JSON generator to write the serialized data to.","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"     * @param serializers The serializer provider for handling serializers.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IOException If there is an I/O error during the serialization process.","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    public void serialize(JsonAdaptedPerson person, JsonGenerator gen,","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"            SerializerProvider serializers) throws IOException {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeStartObject();","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeStringField(\"name\", person.getName());","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeStringField(\"phone\", person.getPhone());","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeStringField(\"email\", person.getEmail());","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeStringField(\"role\", person.getRole());","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        if (\"Doctor\".equals(person.getRole()) || \"Nurse\".equals(person.getRole())) {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"            gen.writeArrayFieldStart(\"shiftDays\");","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"            for (Integer shiftDay : person.getShiftDays()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"                gen.writeNumber(shiftDay);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"            gen.writeEndArray();","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        if (\"Doctor\".equals(person.getRole())) {","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"            gen.writeArrayFieldStart(\"specialisations\");","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"            for (String specialisation : person.getSpecialisations()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"                gen.writeString(specialisation);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"            gen.writeEndArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeArrayFieldStart(\"affiliations\");","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        for (JsonAdaptedAffiliation affiliation : person.getAffiliations()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"            gen.writeObject(affiliation);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeEndArray();","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeArrayFieldStart(\"affiliationHistory\");","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        for (JsonAdaptedAffiliation affiliation : person.getAffiliationHistory()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"            gen.writeObject(affiliation);","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeEndArray();","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        gen.writeEndObject();","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"leezhanpeng":61,"shuenj":8}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAffiliation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" * Jackson-friendly version of {@link Affiliation}.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"class JsonAdaptedAffiliation {","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private final String affiliationName;","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"     * Constructs a {@code JsonAdaptedAffiliation} with the given {@code affiliationName}.","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    @JsonCreator","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    public JsonAdaptedAffiliation(String affiliationName) {","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"        this.affiliationName \u003d affiliationName;","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"     * Converts a given {@code Affiliation} into this class for Jackson use.","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    public JsonAdaptedAffiliation(Affiliation source) {","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        affiliationName \u003d source.affiliationName;","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    @JsonValue","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    public String getAffiliationName() {","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        return affiliationName;","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"     * Converts this Jackson-friendly adapted affiliation object into the model\u0027s {@code Affiliation} object.","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted affiliation.","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"    public Affiliation toModelType() throws IllegalValueException {","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        if (!Affiliation.isValidAffiliationName(affiliationName)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"            throw new IllegalValueException(Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        return new Affiliation(affiliationName);","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"EricXiong420":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.annotation.JsonIgnore;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonSerialize;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"@JsonSerialize(using \u003d CustomJsonAdaptedPersonSerializer.class)","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    private final String role;","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    private final List\u003cJsonAdaptedAffiliation\u003e affiliations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    private final List\u003cJsonAdaptedAffiliation\u003e affiliationHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    @JsonIgnore","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    private final Set\u003cInteger\u003e shiftDays \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"    @JsonIgnore","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    private final Set\u003cString\u003e specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"role\") String role,","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"                             @JsonProperty(\"affiliations\") List\u003cJsonAdaptedAffiliation\u003e affiliations,","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"                             @JsonProperty(\"affiliationHistory\") List\u003cJsonAdaptedAffiliation\u003e affiliationHistory,","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"                             @JsonProperty(\"shiftDays\") List\u003cInteger\u003e shiftDays,","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"                             @JsonProperty(\"specialisations\") List\u003cString\u003e specialisations) {","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"        if (affiliations !\u003d null) {","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"            this.affiliations.addAll(affiliations);","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"        if (affiliationHistory !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"            this.affiliationHistory.addAll(affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        if (shiftDays !\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"            this.shiftDays.addAll(shiftDays);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"        if (specialisations !\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"            this.specialisations.addAll(specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        role \u003d source.getRole().value;","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"        affiliations.addAll(source.getAffiliations().stream()","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"                .map(JsonAdaptedAffiliation::new)","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"        affiliationHistory.addAll(source.getAffiliationHistory().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"                .map(JsonAdaptedAffiliation::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        if (source instanceof Staff) {","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"            shiftDays.addAll(((Staff) source).getShiftDays().shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        if (source instanceof Doctor) {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"            specialisations.addAll(((Doctor) source).getSpecialisations().stream()","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"                    .map(specialisation -\u003e specialisation.toString())","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"    public String getName() {","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"        return name;","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"    public String getPhone() {","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"        return phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"    public String getEmail() {","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"        return email;","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"    public String getRole() {","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"        return role;","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"    public List\u003cJsonAdaptedAffiliation\u003e getAffiliations() {","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"        return affiliations;","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"    public List\u003cJsonAdaptedAffiliation\u003e getAffiliationHistory() {","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"        return affiliationHistory;","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"    public Set\u003cInteger\u003e getShiftDays() {","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"        return shiftDays;","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"shuenj"},"content":"    public Set\u003cString\u003e getSpecialisations() {","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"        return specialisations;","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"     * Generates a list of affiliations from the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"     * @return A list of {@link Affiliation} objects based on the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the affiliations.","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"    private List\u003cAffiliation\u003e generateAffiliationList() throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"EricXiong420"},"content":"        final List\u003cAffiliation\u003e personAffiliations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"EricXiong420"},"content":"        for (JsonAdaptedAffiliation affiliation : affiliations) {","lastModifiedDate":"2023-09-27"},{"lineNumber":131,"author":{"gitId":"EricXiong420"},"content":"            personAffiliations.add(affiliation.toModelType());","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"        return personAffiliations;","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"     * Generates a list of affiliation history from the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"leezhanpeng"},"content":"     * @return A list of {@link Affiliation} objects based on the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the affiliation history.","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"leezhanpeng"},"content":"    private List\u003cAffiliation\u003e generateAffiliationHistoryList() throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"shuenj"},"content":"        final List\u003cAffiliation\u003e personAffiliationHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"shuenj"},"content":"        for (JsonAdaptedAffiliation affiliation : affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"shuenj"},"content":"            personAffiliationHistory.add(affiliation.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"leezhanpeng"},"content":"        return personAffiliationHistory;","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"leezhanpeng"},"content":"     * Generates a {@link Name} object from the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"leezhanpeng"},"content":"     * @param name The person\u0027s name.","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"leezhanpeng"},"content":"     * @return A {@link Name} object based on the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException If the stored name is null or does not meet the constraints.","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"leezhanpeng"},"content":"    private Name generateName(String name) throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"leezhanpeng"},"content":"        return new Name(name);","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"leezhanpeng"},"content":"     * Generates a {@link Phone} object from the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"leezhanpeng"},"content":"     * @param phone The person\u0027s phone number.","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"leezhanpeng"},"content":"     * @return A {@link Phone} object based on the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException If the stored phone is null or does not meet the constraints.","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"leezhanpeng"},"content":"    private Phone generatePhone(String phone) throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"leezhanpeng"},"content":"        return new Phone(phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"leezhanpeng"},"content":"     * Generates an {@link Email} object from the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"leezhanpeng"},"content":"     * @param email The person\u0027s email address.","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"leezhanpeng"},"content":"     * @return An {@link Email} object based on the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException If the stored email is null or does not meet the constraints.","lastModifiedDate":"2023-10-22"},{"lineNumber":191,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"leezhanpeng"},"content":"    private Email generateEmail(String email) throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":199,"author":{"gitId":"leezhanpeng"},"content":"        return new Email(email);","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":202,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"leezhanpeng"},"content":"     * Generates a {@link Role} object from the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"leezhanpeng"},"content":"     * @param role The person\u0027s role (e.g., Doctor).","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"leezhanpeng"},"content":"     * @return A {@link Role} object based on the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException If the stored role is null or does not meet the constraints.","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"leezhanpeng"},"content":"    private Role generateRole(String role) throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"leezhanpeng"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"leezhanpeng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2023-10-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":213,"author":{"gitId":"leezhanpeng"},"content":"        if (!Role.isValidRole(role)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":214,"author":{"gitId":"leezhanpeng"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":216,"author":{"gitId":"leezhanpeng"},"content":"        return new Role(role);","lastModifiedDate":"2023-10-22"},{"lineNumber":217,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"leezhanpeng"},"content":"     * Generates a {@link ShiftDays} object from the stored JSON data (only for Staffs).","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":222,"author":{"gitId":"leezhanpeng"},"content":"     * @param shiftDays The person\u0027s shift days.","lastModifiedDate":"2023-10-22"},{"lineNumber":223,"author":{"gitId":"leezhanpeng"},"content":"     * @return A {@link ShiftDays} object based on the stored JSON data.","lastModifiedDate":"2023-10-22"},{"lineNumber":224,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException If the role is \"Doctor\" or \"Nurse","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"leezhanpeng"},"content":"     *     and shiftDays are null or do not meet the constraints.","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"leezhanpeng"},"content":"    private ShiftDays generateShiftDays(Set\u003cInteger\u003e shiftDays) throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"leezhanpeng"},"content":"        if ((role.equals(\"Doctor\") || role.equals(\"Nurse\")) \u0026\u0026 shiftDays \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"leezhanpeng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-22"},{"lineNumber":230,"author":{"gitId":"leezhanpeng"},"content":"                    ShiftDays.class.getSimpleName()));","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":232,"author":{"gitId":"leezhanpeng"},"content":"        if (!ShiftDays.isValidShiftDays(shiftDays)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"leezhanpeng"},"content":"            throw new IllegalValueException(ShiftDays.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"leezhanpeng"},"content":"        return new ShiftDays(shiftDays);","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"shuenj"},"content":"     * Generates a set of {@link Specialisation} object from the stored JSON data (only for Doctors).","lastModifiedDate":"2023-10-30"},{"lineNumber":240,"author":{"gitId":"shuenj"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"shuenj"},"content":"     * @param specialisations The person\u0027s specialisations.","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"shuenj"},"content":"     * @return A set of {@link Specialisation} object based on the stored JSON data.","lastModifiedDate":"2023-10-30"},{"lineNumber":243,"author":{"gitId":"shuenj"},"content":"     * @throws IllegalValueException If the role is not \"Doctor\" or specialisations are null or do not meet the","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"shuenj"},"content":"     *      constraints.","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"shuenj"},"content":"    private Set\u003cSpecialisation\u003e generateSpecialisations(Set\u003cString\u003e specialisations) throws IllegalValueException {","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"shuenj"},"content":"        if (role.equals(\"Doctor\") \u0026\u0026 specialisations \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":248,"author":{"gitId":"shuenj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"shuenj"},"content":"                    \"Specialisations\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"shuenj"},"content":"        Set\u003cSpecialisation\u003e specialisationSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"shuenj"},"content":"        for (String specialisation : specialisations) {","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"shuenj"},"content":"            if (!Specialisation.isValidSpecialisationName(specialisation)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"shuenj"},"content":"                throw new IllegalValueException(Specialisation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"shuenj"},"content":"            specialisationSet.add(new Specialisation(specialisation));","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"shuenj"},"content":"        return specialisationSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":259,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":260,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"leezhanpeng"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"leezhanpeng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"leezhanpeng"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"leezhanpeng"},"content":"        final Name modelName \u003d generateName(name);","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"leezhanpeng"},"content":"        final Phone modelPhone \u003d generatePhone(phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"leezhanpeng"},"content":"        final Email modelEmail \u003d generateEmail(email);","lastModifiedDate":"2023-10-22"},{"lineNumber":270,"author":{"gitId":"leezhanpeng"},"content":"        final Role modelRole \u003d generateRole(role);","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"leezhanpeng"},"content":"        final ShiftDays modelShiftDays \u003d generateShiftDays(shiftDays);","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"shuenj"},"content":"        final Set\u003cSpecialisation\u003e modelSpecialisations \u003d generateSpecialisations(specialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":273,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"leezhanpeng"},"content":"        final List\u003cAffiliation\u003e personAffiliations \u003d generateAffiliationList();","lastModifiedDate":"2023-10-22"},{"lineNumber":275,"author":{"gitId":"leezhanpeng"},"content":"        final List\u003cAffiliation\u003e personAffiliationHistory \u003d generateAffiliationHistoryList();","lastModifiedDate":"2023-10-22"},{"lineNumber":276,"author":{"gitId":"EricXiong420"},"content":"        final Set\u003cAffiliation\u003e modelAffiliations \u003d new HashSet\u003c\u003e(personAffiliations);","lastModifiedDate":"2023-09-27"},{"lineNumber":277,"author":{"gitId":"shuenj"},"content":"        final Set\u003cAffiliation\u003e modelAffiliationHistory \u003d new HashSet\u003c\u003e(personAffiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":279,"author":{"gitId":"leezhanpeng"},"content":"        Person generatedPerson \u003d modelRole.generatePerson(modelName,","lastModifiedDate":"2023-10-22"},{"lineNumber":280,"author":{"gitId":"leezhanpeng"},"content":"                modelPhone, modelEmail, modelAffiliations, modelAffiliationHistory);","lastModifiedDate":"2023-10-22"},{"lineNumber":281,"author":{"gitId":"shuenj"},"content":"        if (generatedPerson instanceof Doctor) {","lastModifiedDate":"2023-10-29"},{"lineNumber":282,"author":{"gitId":"shuenj"},"content":"            Doctor doctor \u003d (Doctor) generatedPerson;","lastModifiedDate":"2023-10-29"},{"lineNumber":283,"author":{"gitId":"shuenj"},"content":"            doctor.setSpecialisations(modelSpecialisations);","lastModifiedDate":"2023-10-29"},{"lineNumber":284,"author":{"gitId":"shuenj"},"content":"            return doctor.setShiftDays(modelShiftDays);","lastModifiedDate":"2023-10-30"},{"lineNumber":285,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":286,"author":{"gitId":"leezhanpeng"},"content":"        if (generatedPerson instanceof Staff) {","lastModifiedDate":"2023-10-24"},{"lineNumber":287,"author":{"gitId":"leezhanpeng"},"content":"            return ((Staff) generatedPerson).setShiftDays(modelShiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":290,"author":{"gitId":"leezhanpeng"},"content":"        return generatedPerson;","lastModifiedDate":"2023-10-22"},{"lineNumber":291,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"leezhanpeng":141,"EricXiong420":10,"shuenj":55,"-":86}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"     * Converts this contact list into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shuenj":1,"-":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103-t16-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"leezhanpeng":1,"-":101}},{"path":"src/main/java/seedu/address/ui/InformationWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"public class InformationWindow extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private static final String FXML \u003d \"InformationWindow.fxml\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InformationWindow.class);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    private VBox fullWindow;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    private Label name;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    private Label role;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    private Label email;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    private VBox shiftBlock;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftHeader;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftMon;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftTue;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftWed;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftThu;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftFri;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftSat;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    private Label shiftSun;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    private Label[] shiftDays;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    private VBox affnBlock;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    private Label affnCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    private VBox affnListBlock;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     * Initialises the {@code InformationWindow}.","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    public InformationWindow() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        super(FXML);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d new Label[]{shiftMon, shiftTue, shiftWed, shiftThu, shiftFri, shiftSat, shiftSun};","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        // The initialisation should not render the information window","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        resetWindow();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"     * Displays information of the given {@code Person}.","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"     * @param person The intended person for display. It is expected that {@code Person} passed is its subclass only.","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    public void displayInformation(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"        assert (person instanceof Staff || person instanceof Patient);","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        // Display window will not be updated if it is for the same person being displayed","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        if (name.getText().equals(person.getName().fullName)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"        logger.info(\"Displaying person: \" + person);","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        role.setText(person.getRole().value);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"        if (person instanceof Staff) {","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"            displayStaffInformation((Staff) person);","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"        } else if (person instanceof Patient) {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"            displayPatientInformation((Patient) person);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        showWindow();","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"     * Displays information of the given {@code Staff}.","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"     * @param staff The intended staff for display. It is expected that the {@code Staff} passed is its subclass only.","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"    private void displayStaffInformation(Staff staff) {","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"        assert (staff instanceof Doctor || staff instanceof Nurse);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"        if (staff instanceof Doctor) {","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"            role.setStyle(\"-fx-background-color: #89CFF0; -fx-font-weight: bold; -fx-text-fill: #0047AB\");","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"        } else if (staff instanceof Nurse) {","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"            role.setStyle(\"-fx-background-color: #FFC0CB; -fx-font-weight: bold; -fx-text-fill: #E0115F\");","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"        setShiftDays(staff);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"        setAffiliations(staff);","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"        affnCount.setText(\"Tending to:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"        affnBlock.setStyle(\"-fx-border-color: #BBBBBB; -fx-border-width: 2 0 0 0;\");","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"     * Displays information of the given {@code Patient}.","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"     * @param patient The intended patient for display.","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"    private void displayPatientInformation(Patient patient) {","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"        role.setStyle(\"-fx-background-color: #E97451; -fx-font-weight: bold; -fx-text-fill: #8B4000\");","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"        clearShiftDays();","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"        setAffiliations(patient);","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"        affnCount.setText(\"Attended by:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"        affnBlock.setStyle(\"-fx-border-color: #BBBBBB; -fx-border-width: 2 0 0 0;\");","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the shift days information of the given {@code Staff}.","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"     * @param staff The intended person for display.","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"leezhanpeng"},"content":"    private void setShiftDays(Staff staff) {","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"leezhanpeng"},"content":"        clearShiftDays();","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"leezhanpeng"},"content":"        shiftBlock.setVisible(true);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"leezhanpeng"},"content":"        shiftBlock.setManaged(true);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"leezhanpeng"},"content":"        shiftBlock.setStyle(\"-fx-border-color: #BBBBBB; -fx-border-width: 2 0 0 0;\");","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"leezhanpeng"},"content":"        shiftHeader.setText(\"Shift days:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"leezhanpeng"},"content":"        for (int shiftDay : staff.getShiftDays()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"leezhanpeng"},"content":"            shiftDays[shiftDay - 1]","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"leezhanpeng"},"content":"                    .setStyle(\"-fx-background-color: #AFE1AF; -fx-font-weight: bold; -fx-text-fill: #008000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the list of affiliation names into the information window.","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"leezhanpeng"},"content":"     * @param person The intended Person to display the affiliations of.","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"leezhanpeng"},"content":"    private void setAffiliations(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"leezhanpeng"},"content":"        clearAffiliations();","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"leezhanpeng"},"content":"        for (Affiliation affiliation : person.getAffiliations()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"leezhanpeng"},"content":"            String name \u003d affiliation.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"leezhanpeng"},"content":"            Label label \u003d new Label(\"- \" + name);","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"leezhanpeng"},"content":"            label.getStyleClass().add(\"information-affn-list\");","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"leezhanpeng"},"content":"            affnListBlock.getChildren().add(label);","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"leezhanpeng"},"content":"        if (affnListBlock.getChildren().size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"leezhanpeng"},"content":"            Label label \u003d new Label(\"[EMPTY]\");","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"leezhanpeng"},"content":"            label.getStyleClass().add(\"information-affn-list\");","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"leezhanpeng"},"content":"            affnListBlock.getChildren().add(label);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"leezhanpeng"},"content":"     * Removes all affiliation names from the information window.","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"leezhanpeng"},"content":"    private void clearAffiliations() {","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"leezhanpeng"},"content":"        affnListBlock.getChildren().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"leezhanpeng"},"content":"     * Removes the shift days information from the information window.","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"leezhanpeng"},"content":"    private void clearShiftDays() {","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"leezhanpeng"},"content":"        for (Label shiftDay : shiftDays) {","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"leezhanpeng"},"content":"            shiftDay.setStyle(\"-fx-background-color: transparent; -fx-font-weight: normal; -fx-text-fill: black\");;","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"leezhanpeng"},"content":"        shiftBlock.setVisible(false);","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"leezhanpeng"},"content":"        shiftBlock.setManaged(false);","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"leezhanpeng"},"content":"     * Displays the whole window.","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"leezhanpeng"},"content":"    public void showWindow() {","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"leezhanpeng"},"content":"        fullWindow.setVisible(true);","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"leezhanpeng"},"content":"        fullWindow.setManaged(true);","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"leezhanpeng"},"content":"        fullWindow.setMinSize(Region.USE_COMPUTED_SIZE, Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"leezhanpeng"},"content":"     * Clears the whole window.","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"leezhanpeng"},"content":"    public void resetWindow() {","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"leezhanpeng"},"content":"        name.setText(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"leezhanpeng"},"content":"        fullWindow.setVisible(false);","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"leezhanpeng"},"content":"        fullWindow.setManaged(false);","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"leezhanpeng"},"content":"        fullWindow.setMinSize(0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"leezhanpeng":214}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    private InformationWindow informationWindow;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    private ImageView cliImage;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    private StackPane informationPlaceholder;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"        informationWindow \u003d new InformationWindow();","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"        informationPlaceholder.getChildren().add(informationWindow.getRoot());","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), informationWindow);","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"        cliImage.setImage(new Image(MainApp.class.getResourceAsStream(\"/images/cli.png\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"leezhanpeng"},"content":"        primaryStage.setMinWidth(900);","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"leezhanpeng"},"content":"            // Every command successfully executed will reset the information window","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"leezhanpeng"},"content":"            informationWindow.resetWindow();","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"leezhanpeng"},"content":"            // Clear selection of any PersonCard","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"leezhanpeng"},"content":"            personListPanel.unselectPersonCard();","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"leezhanpeng"},"content":"            // Displays information of Person if info command is potentially called","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"leezhanpeng"},"content":"            personListPanel.displayPotentialInformation(commandResult.getShowInfoIndex());","lastModifiedDate":"2023-10-29"},{"lineNumber":211,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"leezhanpeng":24,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    private Label role;","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    private Image doctorImage \u003d new Image(MainApp.class.getResourceAsStream(\"/images/doctor.png\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    private Image nurseImage \u003d new Image(MainApp.class.getResourceAsStream(\"/images/nurse.png\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    private Image patientImage \u003d new Image(MainApp.class.getResourceAsStream(\"/images/patient.png\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        assert person instanceof Doctor || person instanceof Nurse || person instanceof Patient;","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        role.setText(person.getRole().value);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        if (person instanceof Doctor) {","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"            displayPicture.setImage(doctorImage);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"            role.setStyle(\"-fx-background-color: #89CFF0; -fx-font-weight: bold; -fx-text-fill: #0047AB\");","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        } else if (person instanceof Nurse) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"            displayPicture.setImage(nurseImage);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"            role.setStyle(\"-fx-background-color: #FFC0CB; -fx-font-weight: bold; -fx-text-fill: #E0115F\");","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        } else if (person instanceof Patient) {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"            displayPicture.setImage(patientImage);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"            role.setStyle(\"-fx-background-color: #E97451; -fx-font-weight: bold; -fx-text-fill: #8B4000\");","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"leezhanpeng":29,"-":46}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private InformationWindow informationWindow;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, InformationWindow informationWindow) {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        this.informationWindow \u003d informationWindow;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     * Clears any selection of {@code PersonCard}.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public void unselectPersonCard() {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        personListView.getSelectionModel().clearSelection();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     * Displays the information of {@code Person} with the given index referred from the displayed contact list","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     * potentially.","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     * @param showInfoIndex An optional index indicating the position of the {@code Person} to display information for.","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"     *                      If present, the {@code Person} at the specified index will be displayed in the information","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"     *                      window.","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    public void displayPotentialInformation(Optional\u003cInteger\u003e showInfoIndex) {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        if (showInfoIndex.isPresent()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"            personListView.requestFocus();","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"            // Selects the indicated Person","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"            personListView.getSelectionModel().select(showInfoIndex.get());","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"            // Displays the information","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"            informationWindow.displayInformation(personListView.getSelectionModel().getSelectedItem());","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"            // Scrolls the Person list to the selected Person","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"            personListView.scrollTo(showInfoIndex.get());","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        public PersonListViewCell() {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"            // Handles an on-click of a PersonCard","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"            setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                if (event.getClickCount() \u003d\u003d 1) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"                    Person selectedPerson \u003d getItem();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"                    if (selectedPerson !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"                        informationWindow.displayInformation(selectedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"                    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"            });","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"            // Handles up and down arrow key selection of PersonCard","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"            personListView.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"                Person focusedPerson \u003d personListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"                informationWindow.displayInformation(focusedPerson);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"            });","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"leezhanpeng":53,"-":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/medisync_32.png\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/Theme.css\");","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"leezhanpeng":2,"-":86}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"    -fx-text-fill: red !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"    /* Empty cells will not have segregating lines */","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leezhanpeng":4,"-":17}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"leezhanpeng":2,"-":43}},{"path":"src/main/resources/view/InformationWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"\u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"            style\u003d\"-fx-background-color: transparent; -fx-border-width: 0; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.5), 10, 0, 0, 0);\"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"            styleClass\u003d\"scroll-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"    \u003ccontent\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"        \u003cVBox fx:id\u003d\"fullWindow\" minHeight\u003d\"0.0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"                \u003cLabel fx:id\u003d\"name\" minWidth\u003d\"350.0\" prefWidth\u003d\"350.0\" styleClass\u003d\"information-name\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets left\u003d\"20.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"                \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"information-role\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets left\u003d\"20.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"information-email\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets left\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"                \u003cVBox fx:id\u003d\"shiftBlock\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cLabel fx:id\u003d\"shiftHeader\" styleClass\u003d\"information-shift\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"                            \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cInsets/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"                            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cHBox spacing\u003d\"5.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel fx:id\u003d\"shiftMon\" styleClass\u003d\"information-shift\" text\u003d\"Mon\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel fx:id\u003d\"shiftTue\" styleClass\u003d\"information-shift\" text\u003d\"Tue\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel fx:id\u003d\"shiftWed\" styleClass\u003d\"information-shift\" text\u003d\"Wed\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel fx:id\u003d\"shiftThu\" styleClass\u003d\"information-shift\" text\u003d\"Thu\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel fx:id\u003d\"shiftFri\" styleClass\u003d\"information-shift\" text\u003d\"Fri\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel fx:id\u003d\"shiftSat\" styleClass\u003d\"information-shift\" text\u003d\"Sat\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel fx:id\u003d\"shiftSun\" styleClass\u003d\"information-shift\" text\u003d\"Sun\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"                            \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"                            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"                \u003cVBox fx:id\u003d\"affnBlock\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cLabel fx:id\u003d\"affnCount\" styleClass\u003d\"information-affn\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cVBox fx:id\u003d\"affnListBlock\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/content\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"leezhanpeng":108}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"MediSync\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        \u003cImage url\u003d\"@/images/medisync_32.png\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"                \u003cURL value\u003d\"@Theme.css\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"                \u003cHBox alignment\u003d\"CENTER_LEFT\" style\u003d\"-fx-background-color: derive(#DDDDDD, 20%);\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cImageView fx:id\u003d\"cliImage\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"                                   preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cInsets bottom\u003d\"20.0\" left\u003d\"8.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cInsets bottom\u003d\"20.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"120.0\" minHeight\u003d\"120.0\" prefHeight\u003d\"120.0\"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"                           styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"                \u003cHBox minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"170.0\" prefWidth\u003d\"170.0\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"                              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cVBox fx:id\u003d\"Information\" minWidth\u003d\"170.0\" prefWidth\u003d\"170.0\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"                              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cLabel styleClass\u003d\"list-header\" text\u003d\"INFORMATION\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"                                        \u003cInsets bottom\u003d\"5.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"                                \u003cStackPane fx:id\u003d\"informationPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"leezhanpeng":46,"-":46}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" alignment\u003d\"CENTER_LEFT\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"    \u003cLabel fx:id\u003d\"id\" minWidth\u003d\"30.0\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"            \u003cInsets left\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"               style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.5), 10, 0, 0, 0);\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"            \u003cInsets bottom\u003d\"20.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            \u003cLabel fx:id\u003d\"name\" maxWidth\u003d\"160.0\" minWidth\u003d\"160.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"                   wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"            \u003cLabel fx:id\u003d\"role\" alignment\u003d\"CENTER\" minWidth\u003d\"70.0\"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"                   style\u003d\"-fx-background-color: #DDDDDD; -fx-background-radius: 8px; -fx-text-fill: #333333; -fx-font-weight: bold;\"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"                   styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cInsets bottom\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"            \u003cInsets left\u003d\"8.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    \u003cLabel fx:id\u003d\"phone\" alignment\u003d\"TOP_LEFT\" maxWidth\u003d\"80.0\" minWidth\u003d\"80.0\" text\u003d\"\\$phone\" wrapText\u003d\"true\"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"           HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        \u003cstyleClass\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"            \u003cString fx:value\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"            \u003cString fx:value\u003d\"phone-number\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/styleClass\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"30.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leezhanpeng":44,"-":12}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    \u003cHBox prefHeight\u003d\"30.0\" spacing\u003d\"20.0\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"            \u003cLabel styleClass\u003d\"list-header\" text\u003d\"NAME\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"                \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cInsets left\u003d\"120.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"                \u003cfont\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cFont size\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/font\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"            \u003cLabel styleClass\u003d\"list-header\" text\u003d\"PHONE NO.\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"                \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cInsets left\u003d\"122.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"                \u003cfont\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"                    \u003cFont size\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"                \u003c/font\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leezhanpeng":24,"-":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" alignment\u003d\"TOP_LEFT\"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"           style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.5), 10, 0, 0, 0);\"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"           xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"            \u003cInsets top\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/TextArea\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    \u003cLabel text\u003d\"OUTPUT\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"        \u003cStackPane.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"            \u003cInsets left\u003d\"10.0\" top\u003d\"3.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"leezhanpeng":15,"-":6}},{"path":"src/main/resources/view/Theme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":".list-header {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"    -fx-border-color: #CCCCCC;","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    -fx-border-width: 0 0 2 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: #ADD8E6;","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-radius: 8px;","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":".phone-number {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"leezhanpeng"},"content":".information-name {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-size: 35px;","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"leezhanpeng"},"content":".information-role {","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"leezhanpeng"},"content":".information-email {","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"leezhanpeng"},"content":".information-shift {","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"leezhanpeng"},"content":".information-affn {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"leezhanpeng"},"content":".information-affn-list {","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"leezhanpeng"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"leezhanpeng"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"leezhanpeng"},"content":"   -fx-background-radius: 5px;","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"leezhanpeng"},"content":"   -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":175,"author":{"gitId":"leezhanpeng"},"content":"     -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":179,"author":{"gitId":"leezhanpeng"},"content":"     -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":190,"author":{"gitId":"leezhanpeng"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-16"},{"lineNumber":323,"author":{"gitId":"leezhanpeng"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"leezhanpeng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-16"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"leezhanpeng"},"content":"    -fx-background-color: transparent, derive(#DDDDDD, 20%), transparent, derive(#DDDDDD, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"leezhanpeng":59,"-":325}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"        assertNotNull(AppUtil.getImage(\"/images/medisync_32.png\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"leezhanpeng":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"leezhanpeng"},"content":"                + EMAIL_DESC_AMY + ROLE_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"EricXiong420"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withAffiliations().build();","lastModifiedDate":"2023-09-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"leezhanpeng":2,"EricXiong420":1,"-":172}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"public class MessagesTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"    public void display_duplicatePrefix_printCorrectMessage() {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(Messages.MESSAGE_DUPLICATE_FIELDS + \"p\",","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(new Prefix(\"p\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public void generate_userDisplay_printCorrectDisplay() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(\"Benson Meier; Phone: 98765432; Email: johnd@example.com; Role: Patient; \"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"                + \"Affiliations: {Alice Pauline, Carl Kurz}; Affiliation History: {Alice Pauline, Carl Kurz}\",","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"                Messages.format(BENSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"leezhanpeng":24}},{"path":"src/test/java/seedu/address/logic/commands/AddAffiliationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddAffiliationCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"public class AddAffiliationCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"                new AddAffiliationCommand(indexLastPerson, null));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"                new AddAffiliationCommand(null, lastPerson.getAffiliations()));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"                new AddAffiliationCommand(null, null));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"    public void execute_allFieldsValid_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        Person staff \u003d model.getFilteredPersonList().get(Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        Person patient \u003d model.getFilteredPersonList().get(Index.fromZeroBased(3).getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e toAddAffiliation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        toAddAffiliation.add(new Affiliation(patient.getName().fullName));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"        AddAffiliationCommand addAffiliationCommand \u003d new AddAffiliationCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"                Index.fromZeroBased(0), toAddAffiliation);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        Person expectedStaff \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"                .withRole(\"Doctor\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"                .withPhone(\"94351253\")","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliations(\"Benson Meier\", patient.getName().fullName)","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliationHistory(\"Benson Meier\", patient.getName().fullName).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"        Person expectedPatient \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"                .withEmail(\"cornelia@example.com\").withRole(\"Patient\")","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliations(staff.getName().fullName)","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliationHistory(staff.getName().fullName).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedStaff);","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(3), expectedPatient);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"        String expectedMessage \u003d String.format(AddAffiliationCommand.MESSAGE_ADD_AFFILIATION_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"                Messages.format(expectedStaff));","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"        assertCommandSuccess(addAffiliationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"        Person patient \u003d model.getFilteredPersonList().get(Index.fromZeroBased(3).getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e toAddAffiliation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"        toAddAffiliation.add(new Affiliation(patient.getName().fullName));","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"        AddAffiliationCommand addAffiliationCommand \u003d new AddAffiliationCommand(outOfBoundIndex, toAddAffiliation);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"        assertCommandFailure(addAffiliationCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e toAddAffiliation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"        toAddAffiliation.add(new Affiliation(VALID_NAME_AMY));","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"        final AddAffiliationCommand standardCommand \u003d new AddAffiliationCommand(INDEX_FIRST_PERSON, toAddAffiliation);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e otherToAddAffiliation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"        otherToAddAffiliation.add(new Affiliation(VALID_NAME_AMY));","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Seonlo99"},"content":"        AddAffiliationCommand commandWithSameValues \u003d new AddAffiliationCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Seonlo99"},"content":"                INDEX_FIRST_PERSON, otherToAddAffiliation);","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Seonlo99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Seonlo99"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(new AddAffiliationCommand(INDEX_SECOND_PERSON, toAddAffiliation)));","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Seonlo99"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Seonlo99"},"content":"        otherToAddAffiliation.add(new Affiliation(VALID_NAME_BOB));","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(new AddAffiliationCommand(INDEX_FIRST_PERSON, otherToAddAffiliation)));","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Seonlo99"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Seonlo99"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e toAddAffiliation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"Seonlo99"},"content":"        toAddAffiliation.add(new Affiliation(VALID_NAME_AMY));","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Seonlo99"},"content":"        final AddAffiliationCommand addAffiliationCommand \u003d new AddAffiliationCommand(index, toAddAffiliation);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Seonlo99"},"content":"        String expected \u003d AddAffiliationCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", affiliationListToAdd\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"Seonlo99"},"content":"                + toAddAffiliation + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"Seonlo99"},"content":"        assertEquals(expected, addAffiliationCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"leezhanpeng":6,"Seonlo99":131}},{"path":"src/test/java/seedu/address/logic/commands/AffiliationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.person.NameMatchesAffiliationPredicate;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AffiliationCommand.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"public class AffiliationCommandTest {","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    public void execute() {","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate predicate \u003d new NameMatchesAffiliationPredicate(","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"                Set.of(new Affiliation(\"Benson Meier\")));","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        AffiliationCommand command \u003d new AffiliationCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"    public void equals() {","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        final AffiliationCommand standardCommand \u003d new AffiliationCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        final AffiliationCommand commandWithSameValues \u003d new AffiliationCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(standardCommand.equals(new AffiliationCommand(Index.fromOneBased(2))));","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"EricXiong420":59}},{"path":"src/test/java/seedu/address/logic/commands/AffiliationHistoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.NameMatchesAffiliationPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AffiliationHistoryCommand.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"public class AffiliationHistoryCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    public void execute() {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        NameMatchesAffiliationPredicate predicate \u003d new NameMatchesAffiliationPredicate(","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"                Set.of(new Affiliation(\"Benson Meier\"), new Affiliation(\"Daniel Meier\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        AffiliationHistoryCommand command \u003d new AffiliationHistoryCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        final AffiliationHistoryCommand standardCommand \u003d new AffiliationHistoryCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        final AffiliationHistoryCommand commandWithSameValues \u003d new AffiliationHistoryCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(new AffiliationHistoryCommand(Index.fromOneBased(2))));","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"Seonlo99":2,"shuenj":57}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"                false, false, Optional.empty())));","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"                true, false, Optional.empty())));","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"                false, true, Optional.empty())));","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        // different showInfoIndex value -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                false, false, Optional.of(1))));","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"                true, false, Optional.empty()).hashCode());","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"                false, true, Optional.empty()).hashCode());","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        // different showInfoIndex value -\u003e returns different hashcode","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"                false, false, Optional.of(1)).hashCode());","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", showInfoIndex\u003d\" + commandResult.getShowInfoIndex() + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"leezhanpeng":21,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALID_NAME_CAT \u003d \"Cat Meow\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALID_PHONE_CAT \u003d \"33333333\";","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALID_EMAIL_CAT \u003d \"cat@example.com\";","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALID_ROLE_AMY \u003d \"Doctor\";","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALID_ROLE_BOB \u003d \"Patient\";","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALID_ROLE_CAT \u003d \"Nurse\";","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"    public static final String VALID_AFFILIATION_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"    public static final String VALID_AFFILIATION_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    public static final String VALID_AFFILIATION_CAT \u003d \"Cat Meow\";","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    public static final Set\u003cInteger\u003e VALID_SHIFTDAYS_AMY \u003d new HashSet\u003c\u003e(Arrays.asList(1, 2, 3, 4, 5));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"    public static final Set\u003cString\u003e VALID_SPECIALISATION_AMY \u003d new HashSet\u003c\u003e(Arrays.asList(\"Heart\", \"Lungs\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"    public static final Set\u003cString\u003e VALID_SPECIALISATION_BOB \u003d new HashSet\u003c\u003e(Arrays.asList(\"Kidney\", \"Lungs\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"    public static final Set\u003cString\u003e VALID_SPECIALISATION_EMPTY \u003d new HashSet\u003c\u003e(Arrays.asList());","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    public static final Relationship VALID_RELATIONSHIP_AMY \u003d new Relationship(\"Parents\");","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"    public static final Relationship VALID_RELATIONSHIP_BOB \u003d new Relationship(\"Spouse\");","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"    public static final NextOfKin VALID_NEXT_OF_KIN_AMY \u003d new NextOfKin(new Name(\"Tom\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"            new Phone(\"11111111\"), new Relationship(\"Parents\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"    public static final NextOfKin VALID_NEXT_OF_KIN_BOB \u003d new NextOfKin(new Name(\"Jerry\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"            new Phone(\"33333333\"), new Relationship(\"Spouse\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"    public static final String ROLE_DESC_AMY \u003d \" \" + PREFIX_ROLE + VALID_ROLE_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"    public static final String ROLE_DESC_BOB \u003d \" \" + PREFIX_ROLE + VALID_ROLE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"    public static final String AFFILIATION_DESC_BOB \u003d \" \" + PREFIX_AFFILIATION + VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"    public static final String AFFILIATION_DESC_AMY \u003d \" \" + PREFIX_AFFILIATION + VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE; // empty string not allowed for roles","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"    public static final String INVALID_AFFILIATION_DESC \u003d \" \" + PREFIX_AFFILIATION + \"Jack*\";","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"    // \u0027*\u0027 not allowed in affiliations","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"                .withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"                .withShiftDays(VALID_SHIFTDAYS_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"     * - the contact list, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"shuenj"},"content":"     * {@code model}\u0027s contact list.","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"leezhanpeng":17,"Seonlo99":14,"EricXiong420":8,"shuenj":8,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"leezhanpeng":1,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_CAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalDoctorAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    private Model model \u003d new ModelManager(getTypicalDoctorAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"    private Model personModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        Doctor editedPerson \u003d new DoctorBuilder().withAffiliationHistory(\"Thomas Mink\", \"Benson Meier\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalDoctorAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        StaffBuilder personInList \u003d new DoctorBuilder((Doctor) lastPerson);","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        Staff editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"    public void execute_affiliationFieldSpecified_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"        Index indexFirstPerson \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"        Person firstPerson \u003d personModel.getFilteredPersonList().get(indexFirstPerson.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withAffiliations(\"Alice Pauline\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withAffiliations(\"Alice Pauline\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"Seonlo99"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"Seonlo99"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"Seonlo99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Seonlo99"},"content":"        assertCommandSuccess(editCommand, personModel, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"        Staff editedStaff \u003d new DoctorBuilder((Doctor) personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedStaff));","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedStaff);","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"shuenj"},"content":"        // edit person in filtered list into a duplicate in contact list","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"shuenj"},"content":"     * but smaller than size of contact list","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"EricXiong420"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"Seonlo99"},"content":"        // different affiliation history -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"Seonlo99"},"content":"        EditPersonDescriptor differentAffiliationHistoryDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e differentAffiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"Seonlo99"},"content":"        differentAffiliationHistory.add(new Affiliation(VALID_AFFILIATION_CAT));","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"Seonlo99"},"content":"        differentAffiliationHistoryDescriptor.setAffiliationHistory(differentAffiliationHistory);","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, differentAffiliationHistoryDescriptor)));","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"Seonlo99"},"content":"        // different shiftDay -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"Seonlo99"},"content":"        EditPersonDescriptor differentShiftDayDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"Seonlo99"},"content":"        ShiftDays differentShiftDay \u003d new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(2, 3, 4)));","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"Seonlo99"},"content":"        differentShiftDayDescriptor.setShiftDays(differentShiftDay);","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, differentAffiliationHistoryDescriptor)));","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":208,"author":{"gitId":"shuenj"},"content":"        //different specialisation -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":209,"author":{"gitId":"shuenj"},"content":"        EditPersonDescriptor differentSpecialisationDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-30"},{"lineNumber":210,"author":{"gitId":"shuenj"},"content":"        Set\u003cSpecialisation\u003e differentSpecialisation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":211,"author":{"gitId":"shuenj"},"content":"        differentSpecialisation.add(new Specialisation(\"Cardiology\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"shuenj"},"content":"        differentSpecialisationDescriptor.setSpecialisations(differentSpecialisation);","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, differentSpecialisationDescriptor)));","lastModifiedDate":"2023-10-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"leezhanpeng":10,"Seonlo99":40,"EricXiong420":1,"shuenj":12,"-":163}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRole(VALID_ROLE_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"        // different affiliations -\u003e returns false","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"        .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"    public void setAffiliationHistory_validAffiliationHistory_setsHistoryCorrectly() {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"        Affiliation affiliation1 \u003d new Affiliation(\"Affiliation1\");","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"        Affiliation affiliation2 \u003d new Affiliation(\"Affiliation2\");","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        affiliations.add(affiliation1);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"        affiliations.add(affiliation2);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        descriptor.setAffiliationHistory(affiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"        assertTrue(descriptor.getAffiliationHistory().isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        assertEquals(affiliations, descriptor.getAffiliationHistory().get());","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        Affiliation affiliation3 \u003d new Affiliation(\"Affiliation3\");","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"        affiliations.add(affiliation3);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"        descriptor.setAffiliationHistory(affiliations, affiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        assertTrue(descriptor.getAffiliationHistory().isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        assertEquals(affiliations, descriptor.getAffiliationHistory().get());","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"    public void addAffiliationsToHistory_validAffiliations_addsToHistoryCorrectly() {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"        Affiliation affiliation1 \u003d new Affiliation(\"Affiliation1\");","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"        Affiliation affiliation2 \u003d new Affiliation(\"Affiliation2\");","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e initialHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        initialHistory.add(affiliation1);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"        initialHistory.add(affiliation2);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"        descriptor.setAffiliationHistory(initialHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"        Affiliation affiliation3 \u003d new Affiliation(\"Affiliation3\");","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"        Affiliation affiliation4 \u003d new Affiliation(\"Affiliation4\");","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e newAffiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"        newAffiliations.add(affiliation3);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"        newAffiliations.add(affiliation4);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"        descriptor.addAffiliationsToHistory(newAffiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"        assertTrue(descriptor.getAffiliationHistory().isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e expectedHistory \u003d new HashSet\u003c\u003e(initialHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"        expectedHistory.addAll(newAffiliations);","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"        assertEquals(expectedHistory, descriptor.getAffiliationHistory().get());","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", role\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"                + editPersonDescriptor.getRole().orElse(null) + \", affiliations\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"shuenj"},"content":"                + editPersonDescriptor.getAffiliations().orElse(null) + \", affiliationHistory\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"                + editPersonDescriptor.getAffiliationHistory().orElse(null) + \", shiftDays\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"                + editPersonDescriptor.getShiftDays().orElse(null) + \", specialisations\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"                + editPersonDescriptor.getSpecialisation().orElse(null) + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"leezhanpeng":6,"EricXiong420":2,"shuenj":49,"-":63}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"                false, true, Optional.empty());","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"leezhanpeng":4,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE,","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"                true, false, Optional.empty());","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"leezhanpeng":4,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/InfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.InfoCommand.MESSAGE_SHOW_INFO_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":" * {@code InfoCommand}.","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"public class InfoCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoCommand \u003d new InfoCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SHOW_INFO_SUCCESS,","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"                false, false, Optional.of(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        assertCommandSuccess(infoCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoCommand \u003d new InfoCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        assertCommandFailure(infoCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoCommand \u003d new InfoCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SHOW_INFO_SUCCESS,","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"                false, false, Optional.of(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        assertCommandSuccess(infoCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoCommand \u003d new InfoCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        assertCommandFailure(infoCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoFirstCommand \u003d new InfoCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoSecondCommand \u003d new InfoCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(infoFirstCommand.equals(infoFirstCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoFirstCommandCopy \u003d new InfoCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(infoFirstCommand.equals(infoFirstCommandCopy));","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(infoFirstCommand.equals(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(infoFirstCommand.equals(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(infoFirstCommand.equals(infoSecondCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand infoCommand \u003d new InfoCommand(targetIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        String expected \u003d InfoCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expected, infoCommand.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":106}},{"path":"src/test/java/seedu/address/logic/commands/OnDutyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.CARL;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.ELLE;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.FIONA;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.getTypicalStaffAddressBook;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.StaffOnDutyPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"public class OnDutyCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStaffAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand defaultOnDutyCommand \u003d new OnDutyCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate firstPredicate \u003d new StaffOnDutyPredicate(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate secondPredicate \u003d new StaffOnDutyPredicate(2);","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand onDutyFirstCommand \u003d new OnDutyCommand(firstPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand onDutySecondCommand \u003d new OnDutyCommand(secondPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(defaultOnDutyCommand.equals(defaultOnDutyCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand onDutyFirstCommandCopy \u003d new OnDutyCommand(firstPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(onDutyFirstCommand.equals(onDutyFirstCommandCopy));","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(defaultOnDutyCommand.equals(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(defaultOnDutyCommand.equals(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        // different indicated predicate -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(onDutyFirstCommand.equals(onDutySecondCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    public void execute_multipleStaffFound() {","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate predicate \u003d new StaffOnDutyPredicate(3);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand command \u003d new OnDutyCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate predicate \u003d new StaffOnDutyPredicate(2);","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand onDutyCommand \u003d new OnDutyCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        String expected \u003d OnDutyCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expected, onDutyCommand.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":74}},{"path":"src/test/java/seedu/address/logic/commands/RemoveAffiliationHistoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"public class RemoveAffiliationHistoryCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"                new RemoveAffiliationHistoryCommand(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"        RemoveAffiliationHistoryCommand removeAffiliationHistoryCommand \u003d new RemoveAffiliationHistoryCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"                Index.fromZeroBased(0));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        Person expectedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(0))","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliationHistory(\"Benson Meier\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        String expectedMessage \u003d String.format(RemoveAffiliationHistoryCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        assertCommandSuccess(removeAffiliationHistoryCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"        assertCommandFailure(new RemoveAffiliationHistoryCommand(outOfBoundIndex), model,","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        final RemoveAffiliationHistoryCommand standardCommand \u003d new RemoveAffiliationHistoryCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"        RemoveAffiliationHistoryCommand commandWithSameValues \u003d new RemoveAffiliationHistoryCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(standardCommand.equals(new RemoveAffiliationHistoryCommand(INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"        final RemoveAffiliationHistoryCommand removeAffiliationHistoryCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"                new RemoveAffiliationHistoryCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"        String expected \u003d RemoveAffiliationHistoryCommand.class.getCanonicalName() + \"{index\u003d\" + index + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"        assertEquals(expected, removeAffiliationHistoryCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Seonlo99":87}},{"path":"src/test/java/seedu/address/logic/commands/ShiftCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.getTypicalStaffAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"public class ShiftCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    public void execute_roleIsStaff_success() throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cInteger\u003e typicalShiftDaysString \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(2);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(7);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        StaffBuilder personInList \u003d new StaffBuilder((Staff) lastPerson);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        Staff shiftDaysChangedPerson \u003d personInList.withShiftDays(typicalShiftDaysString).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        ShiftCommand shiftCommand \u003d new ShiftCommand(indexLastPerson, typicalShiftDaysString);","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"        String expectedMessage \u003d ShiftCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"        expectedModel.setPerson(lastPerson, shiftDaysChangedPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        assertCommandSuccess(shiftCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"        ShiftCommand unmodifyShiftCommand \u003d new ShiftCommand(indexLastPerson, new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        unmodifyShiftCommand.execute(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"    public void execute_roleIsPatient_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cInteger\u003e typicalShiftDaysString \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(2);","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(7);","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"        ShiftCommand shiftCommand \u003d new ShiftCommand(INDEX_FIRST_PERSON, typicalShiftDaysString);","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"        Index indexFirstPerson \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"        Person firstPerson \u003d expectedModel.getFilteredPersonList().get(indexFirstPerson.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"        expectedModel.setPerson(firstPerson, patient);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"        assertCommandFailure(shiftCommand, expectedModel, Messages.MESSAGE_INVALID_ROLE);","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cInteger\u003e typicalShiftDaysString \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(2);","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(7);","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"        ShiftCommand shiftCommand \u003d new ShiftCommand(outOfBoundIndex, typicalShiftDaysString);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"        assertCommandFailure(shiftCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"     * but smaller than size of contact list","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cInteger\u003e typicalShiftDaysString \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(2);","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(7);","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"        ShiftCommand shiftCommand \u003d new ShiftCommand(outOfBoundIndex, typicalShiftDaysString);","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"        assertCommandFailure(shiftCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"    void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cInteger\u003e typicalShiftDaysString \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(2);","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"EricXiong420"},"content":"        typicalShiftDaysString.add(7);","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"EricXiong420"},"content":"        final ShiftCommand standardCommand \u003d new ShiftCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"EricXiong420"},"content":"                typicalShiftDaysString);","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"EricXiong420"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"EricXiong420"},"content":"        final ShiftCommand commandWithSameValues \u003d new ShiftCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"EricXiong420"},"content":"                typicalShiftDaysString);","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"EricXiong420"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"EricXiong420"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"EricXiong420"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"EricXiong420"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(standardCommand.equals(new ShiftCommand(Index.fromOneBased(2),","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"EricXiong420"},"content":"                typicalShiftDaysString)));","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"leezhanpeng":7,"EricXiong420":124}},{"path":"src/test/java/seedu/address/logic/commands/SpecialisationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalDoctorAddressBook;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"public class SpecialisationCommandTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    private Model model \u003d new ModelManager(getTypicalDoctorAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    public void execute_roleIsDoctor_success() throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cString\u003e typicalSpecialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Kidney\");","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Bones\");","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e typicalSpecialisationsSet \u003d typicalSpecialisations.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"                .map(Specialisation::new)","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"                .collect(java.util.stream.Collectors.toCollection(HashSet::new));","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        DoctorBuilder personInList \u003d new DoctorBuilder((Doctor) lastPerson);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        Doctor specialisationsChangedPerson \u003d personInList.withSpecialisations(typicalSpecialisations).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand specialisationCommand \u003d new SpecialisationCommand(indexLastPerson,","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"                typicalSpecialisationsSet);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        String expectedMessage \u003d SpecialisationCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"        expectedModel.setPerson(lastPerson, specialisationsChangedPerson);","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        assertCommandSuccess(specialisationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand unmodifySpecialisationCommand \u003d new SpecialisationCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"                indexLastPerson, new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"        unmodifySpecialisationCommand.execute(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"    public void execute_roleIsPatient_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cString\u003e typicalSpecialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Kidney\");","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Bones\");","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e typicalSpecialisationsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisationsSet.add(new Specialisation(\"Heart\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisationsSet.add(new Specialisation(\"Kidney\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisationsSet.add(new Specialisation(\"Bones\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand specialisationCommand \u003d new SpecialisationCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"                typicalSpecialisationsSet);","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        Index indexFirstPerson \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"        Person firstPerson \u003d expectedModel.getFilteredPersonList().get(indexFirstPerson.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"        expectedModel.setPerson(firstPerson, patient);","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        assertCommandFailure(specialisationCommand, expectedModel, Messages.MESSAGE_INVALID_ROLE);","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cString\u003e typicalSpecialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Kidney\");","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Bones\");","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e typicalSpecialisationsSet \u003d typicalSpecialisations.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"                .map(Specialisation::new)","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"                .collect(java.util.stream.Collectors.toCollection(HashSet::new));","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand specialisationCommand \u003d new SpecialisationCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"                outOfBoundIndex, typicalSpecialisationsSet);","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"        assertCommandFailure(specialisationCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"     * but smaller than size of contact list","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cString\u003e typicalSpecialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Kidney\");","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Bones\");","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e typicalSpecialisationsSet \u003d typicalSpecialisations.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"shuenj"},"content":"                .map(Specialisation::new)","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"                .collect(java.util.stream.Collectors.toCollection(HashSet::new));","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand specialisationCommand \u003d new SpecialisationCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"shuenj"},"content":"                typicalSpecialisationsSet);","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"shuenj"},"content":"        assertCommandFailure(specialisationCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"shuenj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cString\u003e typicalSpecialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Kidney\");","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisations.add(\"Bones\");","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e typicalSpecialisationsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisationsSet.add(new Specialisation(\"Heart\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisationsSet.add(new Specialisation(\"Kidney\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"shuenj"},"content":"        typicalSpecialisationsSet.add(new Specialisation(\"Bones\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"shuenj"},"content":"        final SpecialisationCommand standardCommand \u003d new SpecialisationCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"shuenj"},"content":"                Index.fromOneBased(1), typicalSpecialisationsSet);","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"shuenj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cString\u003e copyTypicalSpecialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"shuenj"},"content":"        copyTypicalSpecialisations.add(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"shuenj"},"content":"        copyTypicalSpecialisations.add(\"Kidney\");","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"shuenj"},"content":"        copyTypicalSpecialisations.add(\"Bones\");","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e copyTypicalSpecialisationsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"shuenj"},"content":"        copyTypicalSpecialisationsSet.add(new Specialisation(\"Heart\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"shuenj"},"content":"        copyTypicalSpecialisationsSet.add(new Specialisation(\"Kidney\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"shuenj"},"content":"        copyTypicalSpecialisationsSet.add(new Specialisation(\"Bones\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand commandWithSameValues \u003d new SpecialisationCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"shuenj"},"content":"                copyTypicalSpecialisationsSet);","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"shuenj"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"shuenj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"shuenj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"shuenj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"shuenj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"shuenj"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(new SpecialisationCommand(Index.fromOneBased(2),","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"shuenj"},"content":"                typicalSpecialisationsSet)));","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"shuenj"},"content":"        // different specialisations -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cString\u003e differentSpecialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"shuenj"},"content":"        differentSpecialisations.add(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"shuenj"},"content":"        differentSpecialisations.add(\"Kidney\");","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"shuenj"},"content":"        differentSpecialisations.add(\"Bones\");","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"shuenj"},"content":"        differentSpecialisations.add(\"Lungs\");","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e differentSpecialisationsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"shuenj"},"content":"        differentSpecialisationsSet.add(new Specialisation(\"Heart\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"shuenj"},"content":"        differentSpecialisationsSet.add(new Specialisation(\"Kidney\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"shuenj"},"content":"        differentSpecialisationsSet.add(new Specialisation(\"Bones\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"shuenj"},"content":"        differentSpecialisationsSet.add(new Specialisation(\"Lungs\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"shuenj"},"content":"        assertFalse(standardCommand.equals(new SpecialisationCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"shuenj"},"content":"                differentSpecialisationsSet)));","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"shuenj":186}},{"path":"src/test/java/seedu/address/logic/parser/AddAffiliationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AFFILIATION_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AFFILIATION_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AFFILIATION_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.AddAffiliationCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"public class AddAffiliationCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    private static final String AFFILIATION_EMPTY \u003d \" \" + PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAffiliationCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"    private AddAffiliationCommandParser parser \u003d new AddAffiliationCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"        // no index specified","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, VALID_AFFILIATION_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        // no field specified","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1\", AddAffiliationCommand.MESSAGE_NO_AFFILIATION_INPUT);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        // negative index","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"-5\" + AFFILIATION_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"        // zero index","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"0\" + AFFILIATION_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"    public void parse_invalidAffiliation_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_AFFILIATION_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"                Affiliation.MESSAGE_CONSTRAINTS); // invalid affiliation","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"        // invalid affiliation followed by valid affiliation","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_AFFILIATION_DESC + VALID_AFFILIATION_AMY,","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"                Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"        // while parsing {@code PREFIX_AFFILIATION} alone will reset the affiliations of","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"        // the {@code Person} being edited,","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"        // parsing it together with a valid affiliation results in error","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1\" + AFFILIATION_DESC_BOB + AFFILIATION_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"                + AFFILIATION_EMPTY, Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1\" + AFFILIATION_DESC_BOB + AFFILIATION_EMPTY","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"                + AFFILIATION_DESC_AMY, Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1\" + AFFILIATION_EMPTY + AFFILIATION_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"                + AFFILIATION_DESC_AMY, Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"    public void parse_oneAffiliationSpecified_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"        String userInput \u003d targetIndex.getOneBased() + AFFILIATION_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e expectedAffiliation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"        expectedAffiliation.add(new Affiliation(VALID_NAME_AMY));","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"        AddAffiliationCommand expectedCommand \u003d new AddAffiliationCommand(targetIndex, expectedAffiliation);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"    public void parse_multipleAffiliationSpecified_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"        String userInput \u003d targetIndex.getOneBased() + AFFILIATION_DESC_AMY + AFFILIATION_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"        Set\u003cAffiliation\u003e expectedAffiliation \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"        expectedAffiliation.add(new Affiliation(VALID_NAME_AMY));","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"        expectedAffiliation.add(new Affiliation(VALID_NAME_BOB));","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"        AddAffiliationCommand expectedCommand \u003d new AddAffiliationCommand(targetIndex, expectedAffiliation);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Seonlo99":105}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AFFILIATION_DESC_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AFFILIATION_DESC_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AFFILIATION_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"                + ROLE_DESC_BOB + AFFILIATION_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"        // multiple affiliations - all accepted","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"        Person expectedPersonMultipleAffiliations \u003d new PersonBuilder(BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"                .withAffiliations(VALID_AFFILIATION_BOB, VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_BOB, VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"                        + ROLE_DESC_BOB + AFFILIATION_DESC_AMY + AFFILIATION_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"                new AddCommand(expectedPersonMultipleAffiliations));","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"    public void parse_repeatedNonAffiliationValue_failure() {","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                + ROLE_DESC_BOB + AFFILIATION_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        // multiple roles","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, ROLE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ROLE_DESC_AMY","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ROLE, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"        // invalid role","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, INVALID_ROLE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"        // invalid role","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ROLE_DESC,","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"EricXiong420"},"content":"        // zero affiliations","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"EricXiong420"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withAffiliations().build();","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ROLE_DESC_AMY,","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"leezhanpeng"},"content":"        // missing role prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ROLE_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ROLE_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"EricXiong420"},"content":"                + AFFILIATION_DESC_AMY + AFFILIATION_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"EricXiong420"},"content":"                + AFFILIATION_DESC_AMY + AFFILIATION_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ROLE_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"EricXiong420"},"content":"                + AFFILIATION_DESC_AMY + AFFILIATION_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"leezhanpeng"},"content":"        // invalid role","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ROLE_DESC","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"leezhanpeng"},"content":"                + AFFILIATION_DESC_AMY + AFFILIATION_DESC_BOB, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"EricXiong420"},"content":"        // invalid affiliation","lastModifiedDate":"2023-09-27"},{"lineNumber":188,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"EricXiong420"},"content":"                + INVALID_AFFILIATION_DESC + VALID_AFFILIATION_BOB, Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ROLE_DESC,","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"leezhanpeng"},"content":"                        + ROLE_DESC_BOB + AFFILIATION_DESC_AMY + AFFILIATION_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"leezhanpeng":36,"EricXiong420":19,"shuenj":3,"-":142}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.AffiliationCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.commands.InfoCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.commands.OnDutyCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.RemoveAffiliationHistoryCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.ShiftCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.SpecialisationCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"    public void parseCommand_affiliation() throws Exception {","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"        assertEquals(parser.parseCommand(AffiliationCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"                + \"1\"), new AffiliationCommand(Index.fromOneBased(1)));","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"    public void parseCommand_removeAffiliationHistory() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Seonlo99"},"content":"        assertEquals(parser.parseCommand(RemoveAffiliationHistoryCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Seonlo99"},"content":"                + \"1\"), new RemoveAffiliationHistoryCommand(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"EricXiong420"},"content":"    public void parseCommand_shift() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cInteger\u003e shiftDaysSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"EricXiong420"},"content":"        shiftDaysSet.add(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"EricXiong420"},"content":"        shiftDaysSet.add(2);","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"EricXiong420"},"content":"        shiftDaysSet.add(7);","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"EricXiong420"},"content":"        assertEquals(parser.parseCommand(ShiftCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"EricXiong420"},"content":"                + \"1\" + \" \" + \"127\"), new ShiftCommand(Index.fromOneBased(1), shiftDaysSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"    public void parseCommand_onDuty() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"        OnDutyCommand command \u003d (OnDutyCommand) parser.parseCommand(OnDutyCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(command, new OnDutyCommand());","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"shuenj"},"content":"    public void parseCommand_specialisation() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"        Set\u003cSpecialisation\u003e specialisationsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"shuenj"},"content":"        specialisationsSet.add(new Specialisation(\"ENT\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"shuenj"},"content":"        specialisationsSet.add(new Specialisation(\"cardiology\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"        assertEquals(parser.parseCommand(SpecialisationCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"shuenj"},"content":"                + \"1\" + \" \" + \"ENT,cardiology\"), new SpecialisationCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"shuenj"},"content":"                specialisationsSet));","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"    public void parseCommand_info() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"leezhanpeng"},"content":"        InfoCommand command \u003d (InfoCommand) parser.parseCommand(","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"leezhanpeng"},"content":"                InfoCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new InfoCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"leezhanpeng":15,"Seonlo99":9,"EricXiong420":19,"shuenj":12,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/AffiliationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.logic.commands.AffiliationCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"public class AffiliationCommandParserTest {","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private AffiliationCommandParser parser \u003d new AffiliationCommandParser();","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"                AffiliationCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    public void parse_validArgs_returnsAffiliationCommand() {","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        AffiliationCommand expectedAffiliationCommand \u003d","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"                new AffiliationCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        assertParseSuccess(parser, \"1\", expectedAffiliationCommand);","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"EricXiong420":31}},{"path":"src/test/java/seedu/address/logic/parser/AffiliationHistoryCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.AffiliationHistoryCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"public class AffiliationHistoryCommandParserTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    private AffiliationHistoryCommandParser parser \u003d new AffiliationHistoryCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"                AffiliationHistoryCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    public void parse_validArgs_returnsAffiliationCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"        AffiliationHistoryCommand expectedAffiliationHistoryCommand \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"                new AffiliationHistoryCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        assertParseSuccess(parser, \"1\", expectedAffiliationHistoryCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"shuenj":31}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"        String argsString \u003d \"  some random string /t affiliation with leading and trailing spaces \";","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"EricXiong420":1,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AFFILIATION_DESC_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AFFILIATION_DESC_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AFFILIATION_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"    private static final String AFFILIATION_EMPTY \u003d \" \" + PREFIX_AFFILIATION;","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    public void parse_changeRole_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        // Edit of Role not allowed","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"1 r/Patient\", EditCommand.MESSAGE_EDIT_ROLE_NOT_ALLOW);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"        assertParseFailure(parser, \"1\" + INVALID_AFFILIATION_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"                Affiliation.MESSAGE_CONSTRAINTS); // invalid affiliation","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"        // while parsing {@code PREFIX_AFFILIATION} alone will reset the affiliations of","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"        // the {@code Person} being edited,","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"        // parsing it together with a valid affiliation results in error","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"        assertParseFailure(parser, \"1\" + AFFILIATION_DESC_BOB + AFFILIATION_DESC_AMY","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"                + AFFILIATION_EMPTY, Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"        assertParseFailure(parser, \"1\" + AFFILIATION_DESC_BOB + AFFILIATION_EMPTY","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"                + AFFILIATION_DESC_AMY, Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"        assertParseFailure(parser, \"1\" + AFFILIATION_EMPTY + AFFILIATION_DESC_BOB","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"                + AFFILIATION_DESC_AMY, Affiliation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ROLE_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"EricXiong420"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + AFFILIATION_DESC_AMY","lastModifiedDate":"2023-09-27"},{"lineNumber":118,"author":{"gitId":"Seonlo99"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + AFFILIATION_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"Seonlo99"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"shuenj"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"EricXiong420"},"content":"        // affiliations","lastModifiedDate":"2023-09-27"},{"lineNumber":163,"author":{"gitId":"EricXiong420"},"content":"        userInput \u003d targetIndex.getOneBased() + AFFILIATION_DESC_BOB;","lastModifiedDate":"2023-09-27"},{"lineNumber":164,"author":{"gitId":"shuenj"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"shuenj"},"content":"        .withAffiliationHistory(VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"EricXiong420"},"content":"        // AddCommandParserTest#parse_repeatedNonAffiliationValue_failure()","lastModifiedDate":"2023-09-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"leezhanpeng"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ROLE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"leezhanpeng"},"content":"                + AFFILIATION_DESC_BOB + PHONE_DESC_AMY + ROLE_DESC_AMY + EMAIL_DESC_AMY + AFFILIATION_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"leezhanpeng"},"content":"                + PHONE_DESC_BOB + ROLE_DESC_BOB + EMAIL_DESC_BOB + AFFILIATION_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"Seonlo99"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE));","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"Seonlo99"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"Seonlo99"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"Seonlo99"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"EricXiong420"},"content":"    public void parse_resetAffiliations_success() {","lastModifiedDate":"2023-09-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"EricXiong420"},"content":"        String userInput \u003d targetIndex.getOneBased() + AFFILIATION_EMPTY;","lastModifiedDate":"2023-09-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"EricXiong420"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withAffiliations().build();","lastModifiedDate":"2023-09-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"leezhanpeng":7,"Seonlo99":13,"EricXiong420":26,"shuenj":4,"-":162}},{"path":"src/test/java/seedu/address/logic/parser/InfoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.logic.commands.InfoCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" * outside the InfoCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * same path through the InfoCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"public class InfoCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    private InfoCommandParser parser \u003d new InfoCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public void parse_validArgs_returnsInfoCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        assertParseSuccess(parser, \"1\", new InfoCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"                InfoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    private static final String INVALID_ROLE \u003d \" \";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    private static final String INVALID_AFFILIATION \u003d \"#friend\";","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    private static final String VALID_ROLE \u003d \"Doctor\";","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    private static final String VALID_AFFILIATION_1 \u003d \"friend\";","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"    private static final String VALID_AFFILIATION_2 \u003d \"neighbour\";","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"    public void parseRole_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRole((String) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    public void parseRole_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(INVALID_ROLE));","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"    public void parseRole_validValueWithoutWhitespace_returnsRole() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(VALID_ROLE));","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"    public void parseRole_validValueWithWhitespace_returnsTrimmedRole() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"        String roleWithWhitespace \u003d WHITESPACE + VALID_ROLE + WHITESPACE;","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE);","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(roleWithWhitespace));","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliation_null_throwsNullPointerException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":153,"author":{"gitId":"EricXiong420"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAffiliation(null));","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"EricXiong420"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAffiliation(INVALID_AFFILIATION));","lastModifiedDate":"2023-09-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliation_validValueWithoutWhitespace_returnsAffiliation() throws Exception {","lastModifiedDate":"2023-09-27"},{"lineNumber":163,"author":{"gitId":"EricXiong420"},"content":"        Affiliation expectedAffiliation \u003d new Affiliation(VALID_AFFILIATION_1);","lastModifiedDate":"2023-09-27"},{"lineNumber":164,"author":{"gitId":"EricXiong420"},"content":"        assertEquals(expectedAffiliation, ParserUtil.parseAffiliation(VALID_AFFILIATION_1));","lastModifiedDate":"2023-09-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliation_validValueWithWhitespace_returnsTrimmedAffiliation() throws Exception {","lastModifiedDate":"2023-09-27"},{"lineNumber":169,"author":{"gitId":"EricXiong420"},"content":"        String affiliationWithWhitespace \u003d WHITESPACE + VALID_AFFILIATION_1 + WHITESPACE;","lastModifiedDate":"2023-09-27"},{"lineNumber":170,"author":{"gitId":"EricXiong420"},"content":"        Affiliation expectedAffiliation \u003d new Affiliation(VALID_AFFILIATION_1);","lastModifiedDate":"2023-09-27"},{"lineNumber":171,"author":{"gitId":"EricXiong420"},"content":"        assertEquals(expectedAffiliation, ParserUtil.parseAffiliation(affiliationWithWhitespace));","lastModifiedDate":"2023-09-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliations_null_throwsNullPointerException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":176,"author":{"gitId":"EricXiong420"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAffiliations(null));","lastModifiedDate":"2023-09-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliations_collectionWithInvalidAffiliations_throwsParseException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":181,"author":{"gitId":"EricXiong420"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAffiliations(","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"EricXiong420"},"content":"                Arrays.asList(VALID_AFFILIATION_1, INVALID_AFFILIATION)));","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliations_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-09-27"},{"lineNumber":187,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(ParserUtil.parseAffiliations(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-09-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"EricXiong420"},"content":"    public void parseAffiliations_collectionWithValidAffiliations_returnsAffiliationSet() throws Exception {","lastModifiedDate":"2023-09-27"},{"lineNumber":192,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cAffiliation\u003e actualAffiliationSet \u003d ParserUtil","lastModifiedDate":"2023-10-04"},{"lineNumber":193,"author":{"gitId":"EricXiong420"},"content":"                .parseAffiliations(Arrays.asList(VALID_AFFILIATION_1, VALID_AFFILIATION_2));","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cAffiliation\u003e expectedAffiliationSet \u003d new HashSet\u003cAffiliation\u003e(","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"EricXiong420"},"content":"                Arrays.asList(new Affiliation(VALID_AFFILIATION_1), new Affiliation(VALID_AFFILIATION_2)));","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"EricXiong420"},"content":"        assertEquals(expectedAffiliationSet, actualAffiliationSet);","lastModifiedDate":"2023-09-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"leezhanpeng":14,"EricXiong420":28,"-":157}},{"path":"src/test/java/seedu/address/logic/parser/RemoveAffiliationHistoryCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.RemoveAffiliationHistoryCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"public class RemoveAffiliationHistoryCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"    private RemoveAffiliationHistoryCommandParser parser \u003d new RemoveAffiliationHistoryCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveAffiliationHistoryCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        RemoveAffiliationHistoryCommand expectedRemoveAffiliationHistoryCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"                new RemoveAffiliationHistoryCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        assertParseSuccess(parser, \"1\", expectedRemoveAffiliationHistoryCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        assertParseSuccess(parser, \" \\n  1   \\n\", expectedRemoveAffiliationHistoryCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Seonlo99":31}},{"path":"src/test/java/seedu/address/logic/parser/SpecialisationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import seedu.address.logic.commands.SpecialisationCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"public class SpecialisationCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    private static final String VALID_SPECIALISATION \u003d \"Cardiology\";","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    private static final String VALID_SPECIALISATION_2 \u003d \"Oncology\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    private static final String VALID_SPECIALISATION_3 \u003d \"Neurology\";","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    private static final String VALID_SPECIALISATION_EMPTY \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    private static final String INVALID_SPECIALISATION \u003d \"Cardiology*\";","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, SpecialisationCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    private SpecialisationCommandParser parser \u003d new SpecialisationCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"        // no index specified","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, VALID_SPECIALISATION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    public void parse_emptySpecialisation_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        // no specialisation specified means clear specialisation","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        assertParseSuccess(parser, \"1 \" + VALID_SPECIALISATION_EMPTY,","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"            new SpecialisationCommand(INDEX_FIRST_PERSON, new HashSet\u003c\u003e()));","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"        // negative index","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, \"-5\" + VALID_SPECIALISATION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        // zero index","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, \"0\" + VALID_SPECIALISATION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, \"1some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, \"1i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"    public void parse_invalidSpecialisation_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_SPECIALISATION,","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"            MESSAGE_INVALID_FORMAT); // invalid specialisation","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"        // invalid specialisation followed by valid specialisation","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_SPECIALISATION + VALID_SPECIALISATION,","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"            MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_SPECIALISATION + \",\"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"            + VALID_SPECIALISATION_2;","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION));","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION_2));","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand expectedCommand \u003d new SpecialisationCommand(targetIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"            specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"    public void parse_oneSpecialisationSpecified_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_SPECIALISATION;","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION));","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand expectedCommand \u003d new SpecialisationCommand(targetIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"            specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"    public void parse_multipleSpecialisationSpecified_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_SPECIALISATION + \",\"","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"            + VALID_SPECIALISATION_2 + \",\";","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION));","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION_2));","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand expectedCommand \u003d new SpecialisationCommand(targetIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"            specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"shuenj"},"content":"    public void parse_multipleRepeatedSpecialisationSpecified_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"shuenj"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_SPECIALISATION + \", \" + VALID_SPECIALISATION_2","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"            + \", \" + VALID_SPECIALISATION + \", \" + VALID_SPECIALISATION;","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION));","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION_2));","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION));","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(VALID_SPECIALISATION));","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"shuenj"},"content":"        SpecialisationCommand expectedCommand \u003d new SpecialisationCommand(targetIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"shuenj"},"content":"            specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"shuenj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"shuenj":131}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"leezhanpeng":3,"EricXiong420":3,"shuenj":2,"-":104}},{"path":"src/test/java/seedu/address/model/affiliation/AffiliationModifierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.affiliation;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"public class AffiliationModifierTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    public void addAffiliation_validParam_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"        Person staffA \u003d new StaffBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        Person patientB \u003d new PatientBuilder().withName(\"Bob\").withAffiliations(\"Alice\")","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Alice\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffA);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        model.addPerson(patientB);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.addAffiliations(patientB.getAffiliations(), patientB, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(staffA.getAffiliations().contains(new Affiliation(patientB.getName().fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"    public void addAffiliationHistory_validParam_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        Person staffAlice \u003d new StaffBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        Person staffCharlie \u003d new StaffBuilder().withName(\"Charlie\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        Person patientBob \u003d new PatientBuilder().withName(\"Bob\")","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"            .withAffiliations(\"Alice\", \"Charlie\")","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Alice\", \"Charlie\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffAlice);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffCharlie);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        model.addPerson(patientBob);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliationSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Affiliation(\"Alice\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"            new Affiliation(\"Charlie\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        AffiliationModifier.addAffiliationHistory(affiliationSet, patientBob, model);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(staffAlice.getAffiliationHistory().contains(new Affiliation(patientBob.getName().fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(staffCharlie.getAffiliationHistory().contains(new Affiliation(patientBob.getName().fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    public void removeAffiliation_validParam_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        Person staffA \u003d new StaffBuilder().withName(\"Alice\").withAffiliations(\"Bob\")","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Bob\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"        Person patientB \u003d new PatientBuilder().withName(\"Bob\").withAffiliations(\"Alice\")","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Alice\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffA);","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        model.addPerson(patientB);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.removeAffiliations(patientB.getAffiliations(), patientB, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(staffA.getAffiliations().contains(new Affiliation(patientB.getName().fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"    public void removeAffiliationHistory_validParam_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        Person doctorAlice \u003d new DoctorBuilder().withName(\"Alice\")","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Bob\", \"Thomas\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        Person patientBob \u003d new PatientBuilder().withName(\"Bob\")","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"            .withAffiliations(\"Alice\")","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Alice\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        model.addPerson(doctorAlice);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"        model.addPerson(patientBob);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"        AffiliationModifier.removeAffiliationHistory(patientBob.getAffiliationHistory(), patientBob, model);","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"        assertFalse(doctorAlice.getAffiliationHistory().contains(new Affiliation(patientBob.getName().fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"    public void nameChangeAffiliation_validParam_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        Person staffA \u003d new StaffBuilder().withName(\"Alice\").withAffiliations(\"Bob\")","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Bob\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"        Person patientB \u003d new PatientBuilder().withName(\"Bob\").withAffiliations(\"Alice\")","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Alice\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffA);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"        model.addPerson(patientB);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"        Name newName \u003d new Name(\"Ben\");","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"        AffiliationModifier.nameChangeAffiliations(patientB.getAffiliations(),","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"                patientB.getName(), newName, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(staffA.getAffiliations().contains(new Affiliation(newName.fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"    public void nameChangeAffiliationHistory_validParam_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"        Person staffAlice \u003d new StaffBuilder().withName(\"Alice\")","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Bob\", \"Thomas\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        Person staffCharlie \u003d new StaffBuilder().withName(\"Charlie\")","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Bob\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"        Staff staffDonald \u003d new StaffBuilder().withName(\"Donald\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"        Person patientBob \u003d new PatientBuilder().withName(\"Bob\")","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"            .withAffiliations(\"Alice\", \"Charlie\")","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Alice\",","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"                \"Charlie\", \"Donald\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffAlice);","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffCharlie);","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"        model.addPerson(patientBob);","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"        model.addPerson(staffDonald);","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"shuenj"},"content":"        Name newName \u003d new Name(\"Ben\");","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"shuenj"},"content":"        AffiliationModifier.nameChangeAffiliationHistory(patientBob.getAffiliationHistory(), patientBob.getName(),","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"shuenj"},"content":"                newName, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(staffAlice.getAffiliationHistory().contains(new Affiliation(newName.fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(staffCharlie.getAffiliationHistory().contains(new Affiliation(newName.fullName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"leezhanpeng":26,"Seonlo99":42,"shuenj":51}},{"path":"src/test/java/seedu/address/model/affiliation/AffiliationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.model.affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"public class AffiliationTest {","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Affiliation(null));","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    public void constructor_invalidAffiliationName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"        String invalidAffiliationName \u003d \"\";","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Affiliation(invalidAffiliationName));","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    public void isValidAffiliationName() {","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"        // null affiliation name","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"        assertThrows(NullPointerException.class, () -\u003e Affiliation.isValidAffiliationName(null));","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"EricXiong420":26}},{"path":"src/test/java/seedu/address/model/affiliation/AuthenticateAffiliationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.affiliation;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalDoctorAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.exceptions.AffiliationPersonNotFoundException;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.exceptions.SamePersonAffiliationException;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.exceptions.SameRoleAffiliationException;","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.NurseBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"public class AuthenticateAffiliationTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    private final Model personModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    private final Model doctorModel \u003d new ModelManager(getTypicalDoctorAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    public void check_withAffiliationPersonNotExist_affiliationPersonNotFoundException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        Person person \u003d new PersonBuilder()","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"                .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"                .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(AffiliationPersonNotFoundException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                AuthenticateAffiliation.check(person.getAffiliations(), person, personModel));","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    public void check_withAffiliationPersonSameAsPersonAdding_samePersonAffiliationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        Person person \u003d new PersonBuilder()","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"                .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliations(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"                .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(SamePersonAffiliationException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"                AuthenticateAffiliation.check(person.getAffiliations(), person, personModel));","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"    public void check_withAffiliationPersonSameRoleAsPersonAdding_sameRoleAffiliationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        Doctor doctor \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliations(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"                .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(SameRoleAffiliationException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"                AuthenticateAffiliation.check(doctor.getAffiliations(), doctor, doctorModel));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        Nurse nurse \u003d new NurseBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliations(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliationHistory(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(SameRoleAffiliationException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                AuthenticateAffiliation.check(nurse.getAffiliations(), nurse, doctorModel));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"    public void check_validAffiliation_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"        Person person \u003d new PersonBuilder()","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"                .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliations(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_NAME_ALICE)","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"                .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(AuthenticateAffiliation.check(person.getAffiliations(), person, personModel));","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"            fail();","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"leezhanpeng":21,"Seonlo99":67,"shuenj":4}},{"path":"src/test/java/seedu/address/model/person/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHIFTDAYS_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALISATION_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalDoctors.BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"public class DoctorTest {","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    public void asObservableList_modifyList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        doctor.getAffiliations().add(new Affiliation(VALID_AFFILIATION_AMY));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(doctor.getAffiliations().contains(new Affiliation(VALID_AFFILIATION_AMY)));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        Doctor editedBob \u003d new DoctorBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        editedBob \u003d new DoctorBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        Doctor aliceCopy \u003d new DoctorBuilder(ALICE).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(BOB.equals(BOB));","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        // different affiliations -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        // different shift days -\u003e return false","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withShiftDays(VALID_SHIFTDAYS_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"        // different specialisations -\u003e return false","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withSpecialisations(VALID_SPECIALISATION_AMY).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        //different class instances -\u003e return false","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(TypicalPersons.ALICE.hashCode() \u003d\u003d aliceCopy.hashCode());","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"        System.out.println(ALICE.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"        String expected \u003d Doctor.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", role\u003d\" + ALICE.getRole() + \", affiliations\u003d\"","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"                + ALICE.getAffiliations() + \", affiliationHistory\u003d\" + ALICE.getAffiliationHistory()","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"shuenj"},"content":"                + \", shiftDays\u003d\" + ALICE.getShiftDays()","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"shuenj"},"content":"                + \", specialisations\u003d\" + ALICE.getSpecialisations() + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"leezhanpeng":101,"Seonlo99":4,"shuenj":11}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        // Keywords match phone, email and role, but does not match name","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Doctor\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Doctor\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"leezhanpeng":3,"-":82}},{"path":"src/test/java/seedu/address/model/person/NameMatchesAffiliationPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"public class NameMatchesAffiliationPredicateTest {","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    public void equals() {","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cAffiliation\u003e firstAffiliationSet \u003d Set.of(new Affiliation(\"John Doe\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cAffiliation\u003e secondAffiliationSet \u003d Set.of(new Affiliation(\"John Doe\"),","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"                new Affiliation(\"Jill Wagon\"));","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate firstPredicate \u003d new NameMatchesAffiliationPredicate(firstAffiliationSet);","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate secondPredicate \u003d new NameMatchesAffiliationPredicate(secondAffiliationSet);","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate firstPredicateCopy \u003d new NameMatchesAffiliationPredicate(firstAffiliationSet);","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"    public void test_affiliationsSetContainsName_returnsTrue() {","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate predicate \u003d new NameMatchesAffiliationPredicate(","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"                Collections.singleton(new Affiliation(\"John Doe\")));","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"John Doe\").build()));","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"    public void test_affiliationsSetDoesNotContainName_returnsFalse() {","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate predicate \u003d new NameMatchesAffiliationPredicate(","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"                Collections.singleton(new Affiliation(\"John Doe\")));","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Jill Wagon\").build()));","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"        Set\u003cAffiliation\u003e affiliations \u003d Collections.singleton(new Affiliation(\"John Doe\"));","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"        NameMatchesAffiliationPredicate predicate \u003d new NameMatchesAffiliationPredicate(affiliations);","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"        String expected \u003d NameMatchesAffiliationPredicate.class.getCanonicalName()","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"                + \"{affiliations\u003d\" + affiliations + \"}\";","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"EricXiong420":67}},{"path":"src/test/java/seedu/address/model/person/NextOfKinTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RELATIONSHIP_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"public class NextOfKinTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"                new NextOfKin(null, new Phone(VALID_PHONE_AMY), VALID_RELATIONSHIP_AMY));","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"                new NextOfKin(new Name(VALID_NAME_AMY), null, VALID_RELATIONSHIP_AMY));","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"                new NextOfKin(new Name(VALID_NAME_AMY), new Phone(VALID_PHONE_AMY), null));","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        NextOfKin nextOfKin \u003d VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(nextOfKin.equals(new NextOfKin(new Name(\"Tom\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"                new Phone(\"11111111\"), new Relationship(\"Parents\"))));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(nextOfKin.equals(nextOfKin));","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(nextOfKin.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(nextOfKin.equals(5.0f));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(nextOfKin.equals(new NextOfKin(new Name(\"Tom\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"                new Phone(\"11111111\"), new Relationship(\"Spouse\"))));","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        //different class instance, same value -\u003e return true","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        NextOfKin nextOfKin1 \u003d new NextOfKin(new Name(\"Tom\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"                new Phone(\"11111111\"), new Relationship(\"Parents\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(nextOfKin.hashCode() \u003d\u003d nextOfKin1.hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        NextOfKin nextOfKin \u003d VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        String expected \u003d NextOfKin.class.getCanonicalName() + \"{\"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"                + \"name\u003dTom, phone\u003d11111111, relationship\u003dParents\" + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        assertEquals(expected, nextOfKin.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Seonlo99":62}},{"path":"src/test/java/seedu/address/model/person/NurseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHIFTDAYS_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalNurses.ALICE;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalNurses.BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.NurseBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"public class NurseTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    public void asObservableList_modifyList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        Nurse nurse \u003d new NurseBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        nurse.getAffiliations().add(new Affiliation(VALID_AFFILIATION_AMY));","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(nurse.getAffiliations().contains(new Affiliation(VALID_AFFILIATION_AMY)));","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        Nurse editedAlice \u003d new NurseBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new NurseBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        Nurse editedBob \u003d new NurseBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        editedBob \u003d new NurseBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        Nurse aliceCopy \u003d new NurseBuilder(ALICE).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(BOB.equals(BOB));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        // different nurse -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        Nurse editedAlice \u003d new NurseBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new NurseBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new NurseBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        // different affiliations -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new NurseBuilder(ALICE).withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        // different shift days -\u003e return false","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new NurseBuilder(ALICE).withShiftDays(VALID_SHIFTDAYS_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"        //different class instances -\u003e return false","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(TypicalPersons.ALICE.hashCode() \u003d\u003d aliceCopy.hashCode());","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        String expected \u003d Nurse.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", role\u003d\" + ALICE.getRole() + \", affiliations\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"                + ALICE.getAffiliations() + \", affiliationHistory\u003d\" + ALICE.getAffiliationHistory()","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"                + \", shiftDays\u003d\" + ALICE.getShiftDays() + \"}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":109}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"public class PatientTest {","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public void asObservableList_modifyList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"        patient.getAffiliations().add(new Affiliation(VALID_AFFILIATION_AMY));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(patient.getAffiliations().contains(new Affiliation(VALID_AFFILIATION_AMY)));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        patient.setNextOfKin(VALID_NEXT_OF_KIN_AMY);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        assertEquals(patient.getNextOfKin(), VALID_NEXT_OF_KIN_AMY);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"                .withNextOfKin(VALID_NEXT_OF_KIN_AMY).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        Patient editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"        // different affiliations -\u003e returns false","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"        .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"        //difference next of kins -\u003e return false","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withNextOfKin(VALID_NEXT_OF_KIN_AMY).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"        //different class instance -\u003e return false","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(TypicalPersons.ALICE.hashCode() \u003d\u003d aliceCopy.hashCode());","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", role\u003d\" + ALICE.getRole() + \", affiliations\u003d\"","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"                + ALICE.getAffiliations() + \", affiliationHistory\u003d\" + ALICE.getAffiliationHistory()","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Seonlo99"},"content":"                + \", nextOfKin\u003d\" + Patient.MESSAGE_NEXT_OF_KIN_NOT_EXIST + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"leezhanpeng":93,"Seonlo99":16,"shuenj":3}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public void asObservableList_modifyList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"        person.getAffiliations().add(new Affiliation(VALID_AFFILIATION_AMY));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(person.getAffiliations().contains(new Affiliation(VALID_AFFILIATION_AMY)));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"                .withRole(VALID_ROLE_BOB).withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        //same Person instances -\u003e return true","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(TypicalPersons.ALICE.hashCode() \u003d\u003d aliceCopy.hashCode());","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRole(VALID_ROLE_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"        // different affiliation -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"        .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", role\u003d\" + ALICE.getRole() + \", affiliations\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"                + ALICE.getAffiliations() + \", affiliationHistory\u003d\" + ALICE.getAffiliationHistory() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"leezhanpeng":8,"Seonlo99":4,"EricXiong420":1,"shuenj":6,"-":88}},{"path":"src/test/java/seedu/address/model/person/RelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"public class RelationshipTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Relationship(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    public void constructor_invalidRelationship_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"        String invalidRelationship \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(invalidRelationship));","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public void isValidRelationship() {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        // null relationship","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e Relationship.isValidRelationship(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        // invalid relationship","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(Relationship.isValidRelationship(\"\")); // empty string","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(Relationship.isValidRelationship(\" \")); // spaces only","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(Relationship.isValidRelationship(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(Relationship.isValidRelationship(\"spouse*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        // valid relationship","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(Relationship.isValidRelationship(\"spouse\")); // alphabets only","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(Relationship.isValidRelationship(\"123123\")); // numbers only","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(Relationship.isValidRelationship(\"spouse12\")); // alphanumeric characters","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(Relationship.isValidRelationship(\"Spouse\")); // with capital letters","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        Relationship relationship \u003d new Relationship(\"Valid Relationship\");","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(relationship.equals(new Relationship(\"Valid Relationship\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        assertTrue(relationship.equals(relationship));","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(relationship.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(relationship.equals(5.0f));","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        assertFalse(relationship.equals(new Relationship(\"Other Valid Relationship\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Seonlo99":59}},{"path":"src/test/java/seedu/address/model/person/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_CAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.ParserUtil.parseAffiliations;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.NurseBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"public class RoleTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Role(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public void constructor_invalidRole_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        String invalidRole \u003d \"\";","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Role(invalidRole));","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    public void isValidRole() {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        // null role","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRole(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        // invalid roles","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(Role.isValidRole(\"\")); // empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(Role.isValidRole(\" \")); // spaces only","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        // valid roles","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(Role.isValidRole(\"Nurse\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(Role.isValidRole(\"Doctor\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(Role.isValidRole(\"Patient\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(Role.isValidRole(\"DoCtOR\")); // mixed case role","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(Role.isValidRole(\"nUrSe\")); // mixed case role","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(Role.isValidRole(\"PaTIEnt\")); // mixed case role","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        Role role \u003d new Role(\"Doctor\");","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(role.equals(new Role(\"Doctor\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(role.equals(role));","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(role.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(role.equals(5.0f));","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(role.equals(new Role(\"Patient\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"    public void generate_staffRole_correctTypeReturned() {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        Role doctorRole \u003d new Role(VALID_ROLE_AMY);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(doctor.getClass(),","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"                    doctorRole.generatePerson(new Name(VALID_NAME_AMY),","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"                            new Phone(VALID_PHONE_AMY),","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"                            new Email(VALID_EMAIL_AMY),","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"                            parseAffiliations(new ArrayList\u003c\u003e())).getClass());","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(doctor.getClass(),","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"                    doctorRole.generatePerson(new Name(VALID_NAME_AMY),","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"                            new Phone(VALID_PHONE_AMY),","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"                            new Email(VALID_EMAIL_AMY),","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"                            parseAffiliations(new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"                            parseAffiliations(new ArrayList\u003c\u003e())).getClass());","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        Nurse nurse \u003d new NurseBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"        Role nurseRole \u003d new Role(VALID_ROLE_CAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(nurse.getClass(),","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"                    nurseRole.generatePerson(new Name(VALID_NAME_CAT),","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"                            new Phone(VALID_PHONE_CAT),","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"                            new Email(VALID_EMAIL_CAT),","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"                            parseAffiliations(new ArrayList\u003c\u003e())).getClass());","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(nurse.getClass(),","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"                    nurseRole.generatePerson(new Name(VALID_NAME_CAT),","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"                            new Phone(VALID_PHONE_CAT),","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"                            new Email(VALID_EMAIL_CAT),","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"                            parseAffiliations(new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"                            parseAffiliations(new ArrayList\u003c\u003e())).getClass());","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"    public void generate_patientRole_correctTypeReturned() {","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"        Role role \u003d new Role(VALID_ROLE_BOB);","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(patient.getClass(),","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"                    role.generatePerson(new Name(VALID_NAME_BOB),","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"                            new Phone(VALID_PHONE_BOB),","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"                            new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"                            parseAffiliations(new ArrayList\u003c\u003e())).getClass());","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"leezhanpeng":137}},{"path":"src/test/java/seedu/address/model/person/ShiftDaysTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"public class ShiftDaysTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ShiftDays(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public void constructor_invalidShiftDays_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"        Set\u003cInteger\u003e invalidShiftDays \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        invalidShiftDays.add(9);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ShiftDays(invalidShiftDays));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public void isValidShiftDays() {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        // null shift days set","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(NullPointerException.class, () -\u003e ShiftDays.isValidShiftDays(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        Set\u003cInteger\u003e invalidShiftDays \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        // invalid shift days","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        invalidShiftDays.add(12);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ShiftDays.isValidShiftDays(invalidShiftDays)); // number larger than 7","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        invalidShiftDays.remove(12);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        invalidShiftDays.add(0);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ShiftDays.isValidShiftDays(invalidShiftDays)); // number smaller than 1","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        invalidShiftDays.add(15);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ShiftDays.isValidShiftDays(invalidShiftDays)); // both number smaller than 1 and larger than 7","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        Set\u003cInteger\u003e validShiftDays \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        // valid shift days","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ShiftDays.isValidShiftDays(validShiftDays)); // Empty Shift Days","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        validShiftDays.add(6);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ShiftDays.isValidShiftDays(validShiftDays)); // Saturday(6)","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        validShiftDays.add(2);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ShiftDays.isValidShiftDays(validShiftDays)); // Tuesday(2) and Saturday(6)","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        ShiftDays shiftDays \u003d new ShiftDays(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(shiftDays.equals(new ShiftDays(new HashSet\u003c\u003e())));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(shiftDays.equals(shiftDays));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(shiftDays.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(shiftDays.equals(5.0f));","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        Set\u003cInteger\u003e otherShiftDaysSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        otherShiftDaysSet.add(5);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(shiftDays.equals(new ShiftDays(otherShiftDaysSet)));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    public void toString_compareAdjustedShiftDays_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(\"[Mon, Tue]\", new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(1, 2))).toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"    public void contains_checkshiftDayInSet_returnsCorrectBoolean() {","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"        // day in shiftdays","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(1, 2))).contains(2));","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        // day not in shiftdays","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(1, 2))).contains(7));","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(1, 2))).contains(49));","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(1, 2))).contains(-12));","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"leezhanpeng":90}},{"path":"src/test/java/seedu/address/model/person/SpecialisationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"public class SpecialisationTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Specialisation(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    public void constructor_invalidSpecialisationName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"        String invalidSpecialisationName \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Specialisation(invalidSpecialisationName));","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    public void isValidSpecialisationName() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"        String validSpecialisationName \u003d \"Heart\";","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"        assertTrue(Specialisation.isValidSpecialisationName(validSpecialisationName));","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    public void isValidSpecialisationName_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Specialisation.isValidSpecialisationName(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"        Specialisation specialisation \u003d new Specialisation(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        assertTrue(specialisation.equals(new Specialisation(\"Heart\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"        assertTrue(specialisation.equals(specialisation));","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        assertFalse(specialisation.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        assertFalse(specialisation.equals(5.0f));","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        assertFalse(specialisation.equals(new Specialisation(\"Lung\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        Specialisation specialisation \u003d new Specialisation(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"        assertEquals(specialisation.toString(), \"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"        Specialisation specialisation \u003d new Specialisation(\"Heart\");","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"        assertEquals(specialisation.hashCode(), \"Heart\".hashCode());","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"shuenj":64}},{"path":"src/test/java/seedu/address/model/person/StaffOnDutyPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.CARL;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.ELLE;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public class StaffOnDutyPredicateTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate defaultPredicate \u003d new StaffOnDutyPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate firstPredicate \u003d new StaffOnDutyPredicate(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate secondPredicate \u003d new StaffOnDutyPredicate(2);","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(defaultPredicate.equals(defaultPredicate));","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate firstPredicateCopy \u003d new StaffOnDutyPredicate(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        // different day of the week -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public void test_staffShiftDaysContainsIndicatedDay_returnsTrue() {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate predicate \u003d new StaffOnDutyPredicate(3);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(predicate.test(CARL));","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    public void test_staffShiftDaysDoesNotContainIndicatedDay_returnsFalse() {","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate predicate \u003d new StaffOnDutyPredicate(2);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(predicate.test(ELLE));","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    public void test_personNotStaff_returnsFalse() {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate predicate \u003d new StaffOnDutyPredicate(2);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(predicate.test(FIONA));","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        StaffOnDutyPredicate predicate \u003d new StaffOnDutyPredicate(7);","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        String expected \u003d StaffOnDutyPredicate.class.getCanonicalName() + \"{dayOfWeek\u003d\" + 7 + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"leezhanpeng":63}},{"path":"src/test/java/seedu/address/model/person/StaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SHIFTDAYS_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.ALICE;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.testutil.TypicalStaff.CARL;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"public class StaffTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public void asObservableList_modifyList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        Staff staff \u003d new StaffBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        staff.getAffiliations().add(new Affiliation(VALID_AFFILIATION_AMY));","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(staff.getAffiliations().contains(new Affiliation(VALID_AFFILIATION_AMY)));","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        Staff editedAlice \u003d new StaffBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new StaffBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        Staff editedBob \u003d new StaffBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        editedBob \u003d new StaffBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    public void isWorkingOn_checkDayInShiftDays_returnsCorrectBoolean() {","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        // day in shiftdays","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(CARL.isWorkingOn(3));","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        // day not in shiftdays","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(CARL.isWorkingOn(6));","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(CARL.isWorkingOn(42));","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(CARL.isWorkingOn(-12));","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        Staff aliceCopy \u003d new StaffBuilder(ALICE).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(BOB.equals(BOB));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        // different staff -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        Staff editedAlice \u003d new StaffBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new StaffBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new StaffBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"        // different affiliations -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new StaffBuilder(ALICE).withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        .withAffiliationHistory(VALID_AFFILIATION_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"        // different shift days -\u003e return false","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        editedAlice \u003d new StaffBuilder(ALICE).withShiftDays(VALID_SHIFTDAYS_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"        //different class instance -\u003e return false","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(TypicalPersons.ALICE.hashCode() \u003d\u003d aliceCopy.hashCode());","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"        String expected \u003d Staff.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", role\u003d\" + ALICE.getRole() + \", affiliations\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"                + ALICE.getAffiliations() + \", affiliationHistory\u003d\" + ALICE.getAffiliationHistory()","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"                + \", shiftDays\u003d\" + ALICE.getShiftDays() + \"}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":121}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"                .withAffiliations(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(VALID_AFFILIATION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"leezhanpeng":3,"EricXiong420":3,"shuenj":2,"-":171}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    public void retrieveData_compareAttributes_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"        Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new Name(\"Alex Yeoh\"), samplePersons[0].getName());","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new Name(\"Bernice Yu\"), samplePersons[1].getName());","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new Email(\"homimay@example.com\"), samplePersons[2].getEmail());","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new Phone(\"93210283\"), samplePersons[3].getPhone());","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new Email(\"lidavid@example.com\"), samplePersons[4].getEmail());","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new Name(\"Irfan Ibrahim\"), samplePersons[5].getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(new Phone(\"92624417\"), samplePersons[6].getPhone());","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"leezhanpeng":27}},{"path":"src/test/java/seedu/address/storage/CustomJsonAdaptedPersonSerializerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import java.io.StringWriter;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.core.JsonFactory;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalDoctors;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalNurses;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalPatients;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"public class CustomJsonAdaptedPersonSerializerTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public void serialize_doctorPersonWithShiftDays_success() throws IOException {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper(new JsonFactory());","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        CustomJsonAdaptedPersonSerializer serializer \u003d new CustomJsonAdaptedPersonSerializer();","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        Doctor doctor \u003d TypicalDoctors.ALICE;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        ShiftDays shiftDays \u003d new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(1, 2, 3)));","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        doctor.setShiftDays(shiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        StringWriter writer \u003d new StringWriter();","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        JsonGenerator jsonGenerator \u003d objectMapper.getFactory().createGenerator(writer);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        SerializerProvider serializerProvider \u003d objectMapper.getSerializerProvider();","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        serializer.serialize(new JsonAdaptedPerson(doctor), jsonGenerator, serializerProvider);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        String jsonOutput \u003d writer.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(jsonOutput.contains(\"shiftDays\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        ShiftDays undoShiftDays \u003d new ShiftDays(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        doctor.setShiftDays(undoShiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    public void serialize_nursePersonWithShiftDays_success() throws IOException {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper(new JsonFactory());","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        CustomJsonAdaptedPersonSerializer serializer \u003d new CustomJsonAdaptedPersonSerializer();","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        Nurse nurse \u003d TypicalNurses.ALICE;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        ShiftDays shiftDays \u003d new ShiftDays(new HashSet\u003c\u003e(Arrays.asList(1, 2, 3)));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        nurse.setShiftDays(shiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        StringWriter writer \u003d new StringWriter();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        JsonGenerator jsonGenerator \u003d objectMapper.getFactory().createGenerator(writer);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        SerializerProvider serializerProvider \u003d objectMapper.getSerializerProvider();","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        serializer.serialize(new JsonAdaptedPerson(nurse), jsonGenerator, serializerProvider);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        String jsonOutput \u003d writer.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(jsonOutput.contains(\"shiftDays\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        ShiftDays undoShiftDays \u003d new ShiftDays(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        nurse.setShiftDays(undoShiftDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"    public void serialize_nonStaffPersonWithoutShiftDays_success() throws IOException {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper(new JsonFactory());","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        CustomJsonAdaptedPersonSerializer serializer \u003d new CustomJsonAdaptedPersonSerializer();","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        Patient nonStaff \u003d TypicalPatients.ALICE;","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        StringWriter writer \u003d new StringWriter();","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        JsonGenerator jsonGenerator \u003d objectMapper.getFactory().createGenerator(writer);","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        SerializerProvider serializerProvider \u003d objectMapper.getSerializerProvider();","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        serializer.serialize(new JsonAdaptedPerson(nonStaff), jsonGenerator, serializerProvider);","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        String jsonOutput \u003d writer.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(jsonOutput.contains(\"shiftDays\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"    public void serialize_doctorPersonWithSpecialisations_success() throws IOException {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper(new JsonFactory());","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"        CustomJsonAdaptedPersonSerializer serializer \u003d new CustomJsonAdaptedPersonSerializer();","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        Doctor doctor \u003d TypicalDoctors.ALICE;","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"        HashSet\u003cSpecialisation\u003e specialisations \u003d new HashSet\u003cSpecialisation\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(\"ENT\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"        specialisations.add(new Specialisation(\"cardiology\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"        doctor.setSpecialisations(specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"        StringWriter writer \u003d new StringWriter();","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"        JsonGenerator jsonGenerator \u003d objectMapper.getFactory().createGenerator(writer);","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"        SerializerProvider serializerProvider \u003d objectMapper.getSerializerProvider();","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"        serializer.serialize(new JsonAdaptedPerson(doctor), jsonGenerator, serializerProvider);","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"        String jsonOutput \u003d writer.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"        assertTrue(jsonOutput.contains(\"specialisations\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"        doctor.setSpecialisations(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"    public void serialize_nursePersonWithoutSpecialisations_success() throws IOException {","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper(new JsonFactory());","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"        CustomJsonAdaptedPersonSerializer serializer \u003d new CustomJsonAdaptedPersonSerializer();","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"shuenj"},"content":"        Nurse nurse \u003d TypicalNurses.ALICE;","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"shuenj"},"content":"        StringWriter writer \u003d new StringWriter();","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"shuenj"},"content":"        JsonGenerator jsonGenerator \u003d objectMapper.getFactory().createGenerator(writer);","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"        SerializerProvider serializerProvider \u003d objectMapper.getSerializerProvider();","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"        serializer.serialize(new JsonAdaptedPerson(nurse), jsonGenerator, serializerProvider);","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"        String jsonOutput \u003d writer.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"shuenj"},"content":"        assertFalse(jsonOutput.contains(\"specialisations\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"shuenj"},"content":"    public void serialize_nonStaffPersonWithoutSpecialisations_success() throws IOException {","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"shuenj"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper(new JsonFactory());","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"shuenj"},"content":"        CustomJsonAdaptedPersonSerializer serializer \u003d new CustomJsonAdaptedPersonSerializer();","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"shuenj"},"content":"        Patient nonStaff \u003d TypicalPatients.ALICE;","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"        StringWriter writer \u003d new StringWriter();","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"shuenj"},"content":"        JsonGenerator jsonGenerator \u003d objectMapper.getFactory().createGenerator(writer);","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"shuenj"},"content":"        SerializerProvider serializerProvider \u003d objectMapper.getSerializerProvider();","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"        serializer.serialize(new JsonAdaptedPerson(nonStaff), jsonGenerator, serializerProvider);","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"shuenj"},"content":"        String jsonOutput \u003d writer.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"shuenj"},"content":"        assertFalse(jsonOutput.contains(\"specialisations\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"leezhanpeng":84,"shuenj":56}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private static final String INVALID_ROLE \u003d \" \";","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    private static final String INVALID_AFFILIATION \u003d \"#friend\";","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    private static final List\u003cInteger\u003e INVALID_SHIFT_DAYS \u003d Arrays.asList(-1, 8);","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    private static final List\u003cString\u003e INVALID_SPECIALISATIONS \u003d Arrays.asList(\" \", \"#A\u0026E\");","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    private static final String VALID_ROLE \u003d BENSON.getRole().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"    private static final List\u003cJsonAdaptedAffiliation\u003e VALID_AFFILIATIONS \u003d BENSON.getAffiliations().stream()","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"            .map(JsonAdaptedAffiliation::new)","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    private static final List\u003cJsonAdaptedAffiliation\u003e VALID_AFFILIATION_HISTORY \u003d BENSON.getAffiliationHistory()","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"            .stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"            .map(JsonAdaptedAffiliation::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    private static final List\u003cInteger\u003e VALID_SHIFT_DAYS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    private static final List\u003cString\u003e VALID_SPECIALISATIONS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"                    VALID_ROLE, VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY, VALID_SHIFT_DAYS,","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"                    VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE,","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"                VALID_EMAIL, VALID_ROLE, VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY,","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"                VALID_SHIFT_DAYS, VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"                    VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY, VALID_SHIFT_DAYS,","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"                    VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null,","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"                VALID_EMAIL, VALID_ROLE, VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY, VALID_SHIFT_DAYS,","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"                VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"                    VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY, VALID_SHIFT_DAYS,","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"                    VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"                VALID_PHONE, null, VALID_ROLE, VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY,","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"                VALID_SHIFT_DAYS, VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ROLE,","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"                    VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY, VALID_SHIFT_DAYS,","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"                    VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"EricXiong420"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"                VALID_EMAIL, null, VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY,","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"shuenj"},"content":"                VALID_SHIFT_DAYS, VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"EricXiong420"},"content":"    public void toModelType_invalidAffiliations_throwsIllegalValueException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":127,"author":{"gitId":"EricXiong420"},"content":"        List\u003cJsonAdaptedAffiliation\u003e invalidAffiliations \u003d new ArrayList\u003c\u003e(VALID_AFFILIATIONS);","lastModifiedDate":"2023-09-27"},{"lineNumber":128,"author":{"gitId":"EricXiong420"},"content":"        invalidAffiliations.add(new JsonAdaptedAffiliation(INVALID_AFFILIATION));","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"shuenj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"                    invalidAffiliations, VALID_AFFILIATION_HISTORY, VALID_SHIFT_DAYS, VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"    public void toModelType_invalidShiftDays_throwsIllegalValueException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"leezhanpeng"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"shuenj"},"content":"                        VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY,","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"shuenj"},"content":"                        INVALID_SHIFT_DAYS, VALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"shuenj"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"shuenj"},"content":"    public void toModelType_invalidSpecialisations_throwsIllegalValueException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"shuenj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"shuenj"},"content":"                        VALID_AFFILIATIONS, VALID_AFFILIATION_HISTORY,","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"shuenj"},"content":"                        VALID_SHIFT_DAYS, INVALID_SPECIALISATIONS);","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"leezhanpeng":17,"EricXiong420":10,"shuenj":37,"-":89}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.testutil.TypicalDoctors;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalDoctors.getTypicalDoctorAddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"leezhanpeng":2,"-":45}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" * A utility class to help with building Doctor objects.","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"public class DoctorBuilder extends StaffBuilder {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_NAME \u003d \"Jennifer Chue\";","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_PHONE \u003d \"85552222\";","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_EMAIL \u003d \"jenchue@facemail.com\";","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private Name name;","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    private Phone phone;","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    private Email email;","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    private Set\u003cAffiliation\u003e affiliations;","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    private Set\u003cAffiliation\u003e affiliationHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    private ShiftDays shiftDays;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    private HashSet\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     * Creates a {@code DoctorBuilder} with the default details.","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d new ShiftDays();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        specialisations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     * Initializes the DoctorBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    public DoctorBuilder(Doctor doctorToCopy) {","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d doctorToCopy.getPhone();","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d doctorToCopy.getEmail();","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e(doctorToCopy.getAffiliations());","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e(doctorToCopy.getAffiliationHistory());","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d doctorToCopy.getShiftDays();","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"        specialisations \u003d new HashSet\u003c\u003e(doctorToCopy.getSpecialisations());","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Name} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the {@code affiliations} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Doctor} that","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"     * we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"    public DoctorBuilder withAffiliations(String ... affiliations) {","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        this.affiliations \u003d SampleDataUtil.getAffiliationSet(affiliations);","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"     * Parses the {@code affiliationHistory} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Doctor} that","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"     * we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"    public DoctorBuilder withAffiliationHistory(String ... affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        this.affiliationHistory \u003d SampleDataUtil.getAffiliationSet(affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Phone} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"    public DoctorBuilder withPhone(String phone) {","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Email} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"    public DoctorBuilder withEmail(String email) {","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code ShiftDays} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"    public DoctorBuilder withShiftDays(Set\u003cInteger\u003e shiftDays) {","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays \u003d new ShiftDays(shiftDays);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"     * Set the {@code Specialisation} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"shuenj"},"content":"    public DoctorBuilder withSpecialisations(Set\u003cString\u003e specialisations) {","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"shuenj"},"content":"        this.specialisations \u003d SampleDataUtil.getSpecialisationSet(specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"shuenj"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"    public Doctor build() {","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"        Doctor doctor \u003d new Doctor(name, phone, email, affiliations, affiliationHistory);","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"shuenj"},"content":"        doctor.setShiftDays(shiftDays);","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"shuenj"},"content":"        doctor.setSpecialisations(specialisations);","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"shuenj"},"content":"        return doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"leezhanpeng":94,"shuenj":30}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        descriptor.setAffiliations(person.getAffiliations());","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        descriptor.setAffiliationHistory(person.getAffiliationHistory());","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        if (person instanceof Staff) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"            descriptor.setShiftDays(((Staff) person).getShiftDays());","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        if (person instanceof Doctor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"            descriptor.setSpecialisations(((Doctor) person).getSpecialisations());","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Role} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"    public EditPersonDescriptorBuilder withRole(String role) {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        descriptor.setRole(new Role(role));","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the {@code affiliations} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"     * @param affiliations The affiliations to set.","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"    public EditPersonDescriptorBuilder withAffiliations(String... affiliations) {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliationSet \u003d Stream.of(affiliations).map(Affiliation::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"        descriptor.setAffiliations(affiliationSet);","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"     * Parses the {@code affiliationHistory} into a {@code Set\u003cAffiliation\u003e} and","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"     * set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"     * @param affiliationHistory The affiliation history to set.","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"     * @return EditPersonDescriptorBuilder","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"    public EditPersonDescriptorBuilder withAffiliationHistory(String... affiliationHistory) {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"        Set\u003cAffiliation\u003e affiliationSet \u003d Stream.of(affiliationHistory)","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"            .map(Affiliation::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"        descriptor.setAffiliationHistory(affiliationSet);","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code ShiftDays} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    public EditPersonDescriptorBuilder withShiftDays(Set\u003cInteger\u003e shiftDays) {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"        descriptor.setShiftDays(new ShiftDays(shiftDays));","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"     * Sets the {@code Specialisation} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"    public EditPersonDescriptorBuilder withSpecialisations(Set\u003cString\u003e specialisations) {","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"shuenj"},"content":"        descriptor.setSpecialisations(SampleDataUtil.getSpecialisationSet(specialisations));","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"leezhanpeng":18,"EricXiong420":3,"shuenj":27,"-":79}},{"path":"src/test/java/seedu/address/testutil/NurseBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * A utility class to help with building Nurse objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"public class NurseBuilder {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_NAME \u003d \"Jennifer Chue\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_PHONE \u003d \"85552222\";","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_EMAIL \u003d \"jenchue@facemail.com\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    private Name name;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    private Email email;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    private Set\u003cAffiliation\u003e affiliations;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    private Set\u003cAffiliation\u003e affiliationHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    private ShiftDays shiftDays;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * Creates a {@code NurseBuilder} with the default details.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d new ShiftDays();","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     * Initializes the NurseBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder(Nurse nurseToCopy) {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d nurseToCopy.getName();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d nurseToCopy.getPhone();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d nurseToCopy.getEmail();","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e(nurseToCopy.getAffiliations());","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e(nurseToCopy.getAffiliationHistory());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d nurseToCopy.getShiftDays();","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Name} of the {@code Nurse} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder withName(String name) {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the {@code affiliations} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Nurse} that","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     * we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder withAffiliations(String ... affiliations) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        this.affiliations \u003d SampleDataUtil.getAffiliationSet(affiliations);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the {@code affiliationHistory} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Nurse} that","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"     * we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder withAffiliationHistory(String ... affiliationHistory) {","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        this.affiliationHistory \u003d SampleDataUtil.getAffiliationSet(affiliationHistory);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Phone} of the {@code Nurse} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Email} of the {@code Nurse} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder withEmail(String email) {","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code ShiftDays} of the {@code Nurse} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"    public NurseBuilder withShiftDays(Set\u003cInteger\u003e shiftDays) {","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays \u003d new ShiftDays(shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    public Nurse build() {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        return (Nurse) new Nurse(name, phone, email, affiliations, affiliationHistory).setShiftDays(shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":108}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_NAME \u003d \"Patricia Tan\";","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_PHONE \u003d \"85526662\";","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_EMAIL \u003d \"pattan@facemail.com\";","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    private Name name;","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private Phone phone;","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    private Email email;","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    private Set\u003cAffiliation\u003e affiliations;","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    private Set\u003cAffiliation\u003e affiliationHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    private NextOfKin nextOfKin;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        nextOfKin \u003d new NextOfKin();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     * Initializes the PatientBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e(patientToCopy.getAffiliations());","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e(patientToCopy.getAffiliationHistory());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"        nextOfKin \u003d patientToCopy.getNextOfKin();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the {@code affiliations} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Patient} that","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     * we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    public PatientBuilder withAffiliations(String ... affiliations) {","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        this.affiliations \u003d SampleDataUtil.getAffiliationSet(affiliations);","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"     * Parses the {@code affiliationHistory} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Patient} that","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"     * we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"    public PatientBuilder withAffiliationHistory(String ... affiliationHistory) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"        this.affiliationHistory \u003d SampleDataUtil.getAffiliationSet(affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"     * Parses the {@code nextOfKin} into a {@code Set\u003cNextOfKin\u003e} and set it to the {@code Patient} that","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"     * we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"    public PatientBuilder withNextOfKin(NextOfKin nextOfKin) {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"        this.nextOfKin \u003d nextOfKin;","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"Seonlo99"},"content":"     * Rebuilds a Patient Object with the specified parameters.","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"    public Patient build() {","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"Seonlo99"},"content":"        Patient patient \u003d new Patient(name, phone, email, affiliations, affiliationHistory);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"        patient.setNextOfKin(nextOfKin);","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Seonlo99"},"content":"        return patient;","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"leezhanpeng":84,"Seonlo99":20,"shuenj":11}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_ROLE \u003d \"Patient\";","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    private Role role;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    private Set\u003cAffiliation\u003e affiliations;","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    private Set\u003cAffiliation\u003e affiliationHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        affiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        role \u003d personToCopy.getRole();","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        affiliations \u003d new HashSet\u003c\u003e(personToCopy.getAffiliations());","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e(personToCopy.getAffiliationHistory());","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"     * Parses the {@code affiliations} into a {@code Set\u003cAffiliation\u003e} and","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"     * set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"    public PersonBuilder withAffiliations(String... tags) {","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"        this.affiliations \u003d SampleDataUtil.getAffiliationSet(tags);","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"     * Parses the {@code affiliationHistory} into a {@code Set\u003cAffiliation\u003e} and","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"     * set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"    public PersonBuilder withAffiliationHistory(String... tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"        this.affiliationHistory \u003d SampleDataUtil.getAffiliationSet(tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Role} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"    public PersonBuilder withRole(String role) {","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"        return new Person(name, phone, email, role, affiliations, affiliationHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"leezhanpeng":8,"EricXiong420":8,"shuenj":11,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFFILIATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        sb.append(PREFIX_ROLE + person.getRole().value + \" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        person.getAffiliations().stream().forEach(","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"                s -\u003e sb.append(PREFIX_AFFILIATION + s.affiliationName + \" \")","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        if (descriptor.getAffiliations().isPresent()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"            Set\u003cAffiliation\u003e affiliations \u003d descriptor.getAffiliations().get();","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"            if (affiliations.isEmpty()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"                sb.append(PREFIX_AFFILIATION);","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"                affiliations.forEach(s -\u003e sb.append(PREFIX_AFFILIATION).append(s.affiliationName).append(\" \"));","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"leezhanpeng":2,"EricXiong420":9,"-":50}},{"path":"src/test/java/seedu/address/testutil/StaffBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.affiliation.Affiliation;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.ShiftDays;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import seedu.address.model.person.Specialisation;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" * A utility class to help with building Staff objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"public class StaffBuilder {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_NAME \u003d \"Jennifer Chue\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_PHONE \u003d \"85552222\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_EMAIL \u003d \"jenchue@facemail.com\";","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public static final String DEFAULT_ROLE \u003d \"Doctor\";","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    private Name name;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    private Email email;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    private Role role;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    private Set\u003cAffiliation\u003e affiliations;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    private Set\u003cAffiliation\u003e affiliationHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    private ShiftDays shiftDays;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    private HashSet\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     * Creates a {@code StaffBuilder} with the default details.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder() {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d new ShiftDays();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"     * Initializes the StaffBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder(Staff staffToCopy) {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        name \u003d staffToCopy.getName();","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        phone \u003d staffToCopy.getPhone();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        email \u003d staffToCopy.getEmail();","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        role \u003d staffToCopy.getRole();","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        affiliations \u003d new HashSet\u003c\u003e(staffToCopy.getAffiliations());","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        affiliationHistory \u003d new HashSet\u003c\u003e(staffToCopy.getAffiliationHistory());","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        shiftDays \u003d staffToCopy.getShiftDays();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Name} of the {@code Staff} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder withName(String name) {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the {@code affiliations} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Staff} that","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"     * we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder withAffiliations(String ... affiliations) {","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        this.affiliations \u003d SampleDataUtil.getAffiliationSet(affiliations);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the {@code affiliationHistory} into a {@code Set\u003cAffiliation\u003e} and set it to the {@code Staff} that","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"     * we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder withAffiliationHistory(String ... affiliationHistory) {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        this.affiliationHistory \u003d SampleDataUtil.getAffiliationSet(affiliationHistory);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Phone} of the {@code Staff} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Email} of the {@code Staff} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder withEmail(String email) {","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code Role} of the {@code Staff} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder withRole(String role) {","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"     * Sets the {@code ShiftDays} of the {@code Staff} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"    public StaffBuilder withShiftDays(Set\u003cInteger\u003e shiftDays) {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"        this.shiftDays \u003d new ShiftDays(shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"    public Staff build() {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"        return new Staff(name, phone, email, role, affiliations, affiliationHistory).setShiftDays(shiftDays);","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":122,"shuenj":2}},{"path":"src/test/java/seedu/address/testutil/TypicalDoctors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import java.util.List;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":" * A utility class containing a list of {@code Doctor} objects to be used in tests.","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"public class TypicalDoctors {","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor ALICE \u003d new DoctorBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"            .withAffiliations(\"Benson Meier\")","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Thomas Mink\", \"Benson Meier\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor BENSON \u003d new DoctorBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Alice Menti\", \"Bonas Kurz\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor CARL \u003d new DoctorBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor DANIEL \u003d new DoctorBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"cornelia@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor ELLE \u003d new DoctorBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor FIONA \u003d new DoctorBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor GEORGE \u003d new DoctorBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor HOON \u003d new DoctorBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor IDA \u003d new DoctorBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added - Doctor\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor AMY \u003d new DoctorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"            .withEmail(VALID_EMAIL_AMY).withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    public static final Doctor BOB \u003d new DoctorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliations(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"            .build();","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    private TypicalDoctors() {} // prevents instantiation","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     * Returns an {@code AddressBook} with all the typical Doctors.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    public static AddressBook getTypicalDoctorAddressBook() {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        for (Doctor doctor : getTypicalDoctor()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"            ab.addPerson(doctor);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        return ab;","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"    public static List\u003cDoctor\u003e getTypicalDoctor() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":74,"shuenj":4}},{"path":"src/test/java/seedu/address/testutil/TypicalNurses.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":" * A utility class containing a list of {@code Nurse} objects to be used in tests.","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"public class TypicalNurses {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse ALICE \u003d new NurseBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliations(\"Benson Meier\")","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Thomas Mink\", \"Benson Meier\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse BENSON \u003d new NurseBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Alice Menti\", \"Bonas Kurz\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse CARL \u003d new NurseBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse DANIEL \u003d new NurseBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"cornelia@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse ELLE \u003d new NurseBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse FIONA \u003d new NurseBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse GEORGE \u003d new NurseBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse HOON \u003d new NurseBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse IDA \u003d new NurseBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added - Nurse\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse AMY \u003d new NurseBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_AMY).withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    public static final Nurse BOB \u003d new NurseBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliations(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"            .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    private TypicalNurses() {} // prevents instantiation","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     * Returns an {@code AddressBook} with all the typical Nurses.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    public static AddressBook getTypicalNurseAddressBook() {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        for (Nurse nurse : getTypicalNurse()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"            ab.addPerson(nurse);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        return ab;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"    public static List\u003cNurse\u003e getTypicalNurse() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":78}},{"path":"src/test/java/seedu/address/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import java.util.List;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"public class TypicalPatients {","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Thomas Mink\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Alice Menti\", \"Bonas Kurz\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"cornelia@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"            .withEmail(VALID_EMAIL_AMY).withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliations(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"            .build();","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    private TypicalPatients() {} // prevents instantiation","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    public static AddressBook getTypicalPatientsAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"            ab.addPerson(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        return ab;","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"leezhanpeng":73,"shuenj":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            .withRole(\"Doctor\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            .withAffiliations(\"Benson Meier\")","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            .withAffiliationHistory(\"Benson Meier\", \"Daniel Meier\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"            .withRole(\"Patient\")","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            .withAffiliations(\"Alice Pauline\", \"Carl Kurz\")","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"            .withAffiliationHistory(\"Alice Pauline\", \"Carl Kurz\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"heinz@example.com\").withRole(\"Doctor\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"cornelia@example.com\").withRole(\"Patient\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"werner@example.com\").withRole(\"Doctor\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"lydia@example.com\").withRole(\"Patient\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"anna@example.com\").withRole(\"Doctor\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"stefan@example.com\").withRole(\"Patient\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"hans@example.com\").withRole(\"Doctor\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_AMY).withRole(VALID_ROLE_AMY).withAffiliations(VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"            .withAffiliations(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"                .withRole(\"Doctor\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"                .withPhone(\"94351253\")","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"                .withAffiliations(\"Benson Meier\")","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"                .withAffiliationHistory(\"Benson Meier\", \"Daniel Meier\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"        Person benson \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"                .withRole(\"Patient\")","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"                .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"                .withAffiliations(\"Alice Pauline\", \"Carl Kurz\")","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"                .withAffiliationHistory(\"Alice Pauline\", \"Carl Kurz\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"        Person carl \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"                .withEmail(\"heinz@example.com\").withRole(\"Doctor\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"        Person daniel \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"                .withEmail(\"cornelia@example.com\").withRole(\"Patient\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"        Person elle \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"                .withEmail(\"werner@example.com\").withRole(\"Doctor\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"        Person fiona \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"                .withEmail(\"lydia@example.com\").withRole(\"Patient\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"        Person george \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"                .withEmail(\"anna@example.com\").withRole(\"Doctor\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(alice, benson, carl, daniel, elle, fiona, george));","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"leezhanpeng":12,"Seonlo99":20,"EricXiong420":5,"shuenj":6,"-":57}},{"path":"src/test/java/seedu/address/testutil/TypicalStaff.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AFFILIATION_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":" * A utility class containing a list of {@code Staff} objects to be used in tests.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"public class TypicalStaff {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff ALICE \u003d new StaffBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliations(\"Benson Meier\")","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Thomas Mink\", \"Benson Meier\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff BENSON \u003d new StaffBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(\"Alice Menti\", \"Bonas Kurz\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff CARL \u003d new StaffBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"heinz@example.com\").withShiftDays(new HashSet\u003c\u003e(Set.of(3))).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff DANIEL \u003d new StaffBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"cornelia@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff ELLE \u003d new StaffBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"werner@example.com\").withShiftDays(new HashSet\u003c\u003e(Set.of(3))).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff FIONA \u003d new StaffBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"lydia@example.com\").withShiftDays(new HashSet\u003c\u003e(Set.of(3))).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff GEORGE \u003d new StaffBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff HOON \u003d new StaffBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff IDA \u003d new StaffBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    // Manually added - Staff\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff AMY \u003d new StaffBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_AMY).withAffiliations(VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    public static final Staff BOB \u003d new StaffBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliations(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"            .withAffiliationHistory(VALID_AFFILIATION_AMY, VALID_AFFILIATION_BOB)","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"            .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"    private TypicalStaff() {} // prevents instantiation","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"     * Returns an {@code AddressBook} with all the typical staff.","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    public static AddressBook getTypicalStaffAddressBook() {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        for (Staff staff : getTypicalStaff()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"            ab.addPerson(staff);","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        return ab;","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"    public static List\u003cStaff\u003e getTypicalStaff() {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"leezhanpeng":80}}]

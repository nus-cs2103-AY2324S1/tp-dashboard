[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W13-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W13-1/tp/graph/badge.svg?token\u003dJF1YGHQMCK)](https://codecov.io/gh/AY2324S1-CS2103T-W13-1/tp)","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"## DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"* DoConnek Pro is **a contact management app for General Practitioner (GP) clinic management staff.**\u003cbr\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"  * Adding, deleting and viewing patient information","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"  * Adding, deleting and viewing specialist information (for referrals)","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"  * Saving/loading contact information between sessions","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"-":7,"alvinlim277":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"    archiveFileName \u003d \u0027DoConnekPro.jar\u0027","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"run {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"angkyakdifp":1,"vansh284":2,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"# About Us","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"DoConnek Pro is developed by the W13-1 team.","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"### Vansh Nath","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"\u003cimg src\u003d\"images/vansh284.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"[[github](https://github.com/vansh284)]","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"[[portfolio](team/vansh284.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"* Role: Developer","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"* Responsibilities: Team lead, Integration","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"### Gavin Chiam Xiang Zhe","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"\u003cimg src\u003d\"images/gavino3o.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"[[github](http://github.com/gavino3o)]","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"[[portfolio](team/gavino3o.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"* Role: Developer","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"* Responsibilities: Code Quality, Deliverables and Deadlines, Git Expert","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"### Lim Jun Han, Alvin","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"\u003cimg src\u003d\"images/alvinlim277.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"[[github](http://github.com/alvinlim277)]","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"[[portfolio](team/alvinlim277.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"* Responsibilities: Documentation, Testing","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"### Ng Kok Seng","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"\u003cimg src\u003d\"images/kokseng1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"[[github](http://github.com/kokseng1)]","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"[[portfolio](team/kokseng1.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"  * Responsibilities: Scheduling and tracking, in charge of models","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"### Angky Akdi Frandy Putrakelana","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"\u003cimg src\u003d\"images/angkyakdifp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"[[github](http://github.com/angkyakdifp)]","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"[[portfolio](team/angkyakdifp.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"* Responsibilities: In Charge of UI, In Charge of Storage","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Kokseng1":5,"Gavino3o":9,"vansh284":6,"angkyakdifp":5,"-":31,"alvinlim277":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"* Small snippets of code written with the help of AI tool (can be found in `PersonListPanel.java` and `ShortcutSettings.java`).","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W13-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"* stores a `ThemeProperty` object which represents the theme of the application.","lastModifiedDate":"2023-11-11"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"* stores a `CommandStringStash` object which has the history of recently executed commands.","lastModifiedDate":"2023-11-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Kokseng1"},"content":"### Undo/redo feature","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"Kokseng1"},"content":"The undo/redo mechanism is facilitated by `ModelManager`. It implements `Model` with an undo/redo history, stored internally as an `modelManagerStateList` and `currentStatePointer`.","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"Kokseng1"},"content":"`modelManagerStateList` contains a list of `ReadOnlyModelManager`","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"Kokseng1"},"content":"Each `ReadOnlyModelManager` contains : ","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"Kokseng1"},"content":"*  `addressBook`","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"Kokseng1"},"content":"*  `filteredPersons`","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"Kokseng1"},"content":"*  `userPrefs`","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"Kokseng1"},"content":"*  `selectedPerson`","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"Kokseng1"},"content":"*  `themeProperty`","lastModifiedDate":"2023-11-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":173,"author":{"gitId":"Kokseng1"},"content":"Additionally, ModelManager implements the following operations:","lastModifiedDate":"2023-11-07"},{"lineNumber":174,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":175,"author":{"gitId":"Kokseng1"},"content":"* `ModelManager#commit()` — Saves the current ModelManager state in its history.","lastModifiedDate":"2023-11-07"},{"lineNumber":176,"author":{"gitId":"Kokseng1"},"content":"* `ModelManager#undo()` — Restores the previous ModelManager state from its history.","lastModifiedDate":"2023-11-07"},{"lineNumber":177,"author":{"gitId":"Kokseng1"},"content":"* `ModelManager#redo()` — Restores a previously undone ModelManager state from its history.","lastModifiedDate":"2023-11-07"},{"lineNumber":178,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":179,"author":{"gitId":"Kokseng1"},"content":"These operations are exposed in the `Model` interface as `Model#commit()`, `Model#undo()` and `Model#redo()` respectively.","lastModifiedDate":"2023-11-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"Kokseng1"},"content":"Step 1. The user launches the application for the first time. The `ModelManager` will be initialized and `ModelManager#Commit` is called with the initial ModelManager state, and the `currentStatePointer` pointing to that single ReadOnlyModelManager state.","lastModifiedDate":"2023-11-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"Kokseng1"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the current list. The `delete` command calls `Model#commit()`, causing the modified state of the ModelManager after the `delete 5` command executes to be saved in the `modelManagerStateList`, and the `currentStatePointer` is shifted to the newly inserted ModelManager state.","lastModifiedDate":"2023-11-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"Kokseng1"},"content":"Step 3. The user executes `add -pa n/David …​` to add a new person. The `add` command also calls `Model#commit()`, causing another modified ModelManager state to be saved into the `ModelManagerStateList`.","lastModifiedDate":"2023-11-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"Kokseng1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commit()`, so the ModelManager state will not be saved into the `ModelManagerStateList`.","lastModifiedDate":"2023-11-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Kokseng1"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undo()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous ModelManager state, and restores the ModelManager to that state.","lastModifiedDate":"2023-11-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"Kokseng1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial ModelManager state, then there are no previous ModelManager states to restore. The `undo` command uses `ModelManager#hasHistory()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"vansh284"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **note:** the lifeline for `undocommand` should end at the destroy marker (x) but due to a limitation of plantuml, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Kokseng1"},"content":"The `redo` command does the opposite — it calls `Model#redo()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the ModelManager to that state.","lastModifiedDate":"2023-11-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"Kokseng1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `ModelManagerStateList.size() - 1`, pointing to the latest ModelManager state, then there are no undone ModelManager states to restore. The `redo` command uses `ModelManager#canRedo()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-11-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"Kokseng1"},"content":"Step 5. The user then decides to execute the command `list -pa`. Since this command modifies the ModelManager, `Model#commit()` is called.","lastModifiedDate":"2023-11-11"},{"lineNumber":223,"author":{"gitId":"Kokseng1"},"content":"Since the `currentStatePointer` is not pointing at the end of the `ModelManagerStateList`, all ModelManager states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add -pa n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-11-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"Gavino3o"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"angkyakdifp"},"content":"### View Command Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"angkyakdifp"},"content":"The view command feature allows the user to view the details of a specific patient or specialist.","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"angkyakdifp"},"content":"Given below is an example usage scenario and how the view mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"angkyakdifp"},"content":"Step 1. The user launches the application. The List of person will be initialized with the initial","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"Gavino3o"},"content":"state, and the `Current Selected Person` pointer pointing to the first person on the list. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"angkyakdifp"},"content":"![ViewState1](images/ViewState1.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"angkyakdifp"},"content":"Step 2. The user executes `view 2` command to view the 2nd person details in the `DoConnek Pro`.","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"angkyakdifp"},"content":"The `view` command update the `Current Selected Person` pointer with the corresponding index from the","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"Gavino3o"},"content":"input. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"angkyakdifp"},"content":"![ViewState2](images/ViewState2.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"angkyakdifp"},"content":"Step 3. The UI now updates the view panel to display the newly selected person and their details.","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"angkyakdifp"},"content":"The sequence diagram below shows how the view operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"angkyakdifp"},"content":"![ViewSequenceDiagram](images/ViewSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"angkyakdifp"},"content":"The following activity diagram summarizes what happens when a user executes the view command:","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"angkyakdifp"},"content":"![ViewActivityDiagram](images/ViewActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"Gavino3o"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"vansh284"},"content":"### Recall recent commands feature","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"vansh284"},"content":"The recent command feature is facilitated by the `CommandStringStash`. This is a stash that stores the history","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"vansh284"},"content":"of the command string of the 20 most recent commands executed. Internally, it is stored as a `cmdStringStack`,","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"vansh284"},"content":"and `currentCmdIndex`. This internal representation allows cycling through the recent commands both forwards","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"and backwards.","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"vansh284"},"content":"These operations are exposed in the `Logic` interface as `Logic#getPrevCommandString(String commandInputString)`,","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"vansh284"},"content":"`Logic#getPassedCommandString(String commandInputString)`, and `Logic#addCommandString(String commandInputString)`.","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"vansh284"},"content":"The following operations are implemented by the `CommandStringStash`:","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"vansh284"},"content":"* `CommandStringStash#addCommandString(String commandInputString)` - Adds `commandInputString` to the history.","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"vansh284"},"content":"* `CommandStringStash#getPrevCommandString(String commandInputString)` - Cycles one command further back in history.","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"Gavino3o"},"content":"* `CommandStringStash#getPassedCommandString(String commandInputString)` - Cycles one command further forward in history.","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"alvinlim277"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **note:** Cycling forwards or backwards may not always be","lastModifiedDate":"2023-11-12"},{"lineNumber":279,"author":{"gitId":"vansh284"},"content":"valid operations. No cycling forward or backward can be done if the stash is empty. No cycling backward","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"vansh284"},"content":"can be done if the user is already on the least recent command in the stash, and no cycling forward can be done","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"vansh284"},"content":"if the user has not yet cycled backward. To consider all these cases, the `commandInputString` is passed as a parameter","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"vansh284"},"content":"to `CommandStringStash#getPrevCommandString(String commandInputString)` and `CommandStringStash#getPassedCommandString(String commandInputString)`.","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"vansh284"},"content":"The `commandInputString` is the current command in the CLI textbox and is returned from these methods in the case of invalid operations","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"vansh284"},"content":"so that there is no change to the CLI textbox.","lastModifiedDate":"2023-11-11"},{"lineNumber":285,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"vansh284"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"vansh284"},"content":"Given below is an example usage scenario and how the recall recent commands feature works at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"vansh284"},"content":"Step 1. The user launches the application for the first time. The `CommandStringStash` will be initialised","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"vansh284"},"content":"with no command strings and a `currentCmdIndex` of 0.","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"vansh284"},"content":"![Recall Step 1](images/RecallStep1.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"vansh284"},"content":"Step 2. The user executes the `list -sp` command to list the specialists in DoConnek Pro. Upon success,","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"vansh284"},"content":"`Logic#addCommandString(\"list -sp\")` is called, adding this command string to the `CommandStringStash` and moving the","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"vansh284"},"content":"`currentCmdIndex` to point to right after the element added.","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"vansh284"},"content":"![Recall Step 2](images/RecallStep2.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"vansh284"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **note:** After `Logic#getPrevCommandString` is called,","lastModifiedDate":"2023-11-11"},{"lineNumber":302,"author":{"gitId":"vansh284"},"content":"the `currentCmdIndex` is set to point one index after the last element in the `CommandStringStash`. ","lastModifiedDate":"2023-11-11"},{"lineNumber":303,"author":{"gitId":"vansh284"},"content":"This \u0027resets\u0027 the state allowing the users to start to cycle back from the most recently added command again.","lastModifiedDate":"2023-11-11"},{"lineNumber":304,"author":{"gitId":"vansh284"},"content":"The `Logic#getPrevCommandString` method decrements the `currentCmdIndex` before returning the String allowing the mechanism to work as intended.","lastModifiedDate":"2023-11-11"},{"lineNumber":305,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"vansh284"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"vansh284"},"content":"Step 3. The user executes two more commands `help` and `delete 1` in the respective order. As before, the","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"vansh284"},"content":"`CommandStringStash` is updated appropriately.","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"vansh284"},"content":"![Recall Step 3](images/RecallStep3.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"vansh284"},"content":"The following activity diagram summarises how the `CommandStringStash` is updated when a user executes a command.","lastModifiedDate":"2023-11-07"},{"lineNumber":314,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":315,"author":{"gitId":"vansh284"},"content":"![Add Command String](images/AddCommandStringActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"vansh284"},"content":"Step 4. The user wants to list the patients in DoConnek Pro but forgot how to do so. They decide to execute the `help`","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"vansh284"},"content":"command. To do so efficiently, they press the up arrow on the keyboard to recall the `help` command they recently entered.","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"vansh284"},"content":"This results in `Logic#getPrevCommandString` being called which returns `delete 1`.  The user\u0027s CLI text box is then set to display `delete 1`.","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"vansh284"},"content":"![Recall Step 4](images/RecallStep4.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"vansh284"},"content":"The following sequence diagram shows how this recalling of the previous command string works.","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"vansh284"},"content":"![Recall Command Sequence Diagram](images/RecallCommandSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":326,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"vansh284"},"content":"To cycle forward in history, a similar sequence is followed, but `Logic#getPassedCommandString` and its","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"vansh284"},"content":"corresponding methods are called instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"vansh284"},"content":"Step 5. The user presses the up arrow again, and this time `Logic#getPrevCommandString` returns `help` which is displayed","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"vansh284"},"content":"on the user\u0027s CL. They can now easily execute `help`.","lastModifiedDate":"2023-11-07"},{"lineNumber":332,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"vansh284"},"content":"![Recall Step 5](images/RecallStep5.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"vansh284"},"content":"The following activity diagram summarises what happens when a user presses the up arrow.","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"vansh284"},"content":"![Up Arrow Activity Diagram](images/UpArrowActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"vansh284"},"content":"Step 6. Instead of executing `help` the user decides to delete the first specialist currently displayed.","lastModifiedDate":"2023-11-11"},{"lineNumber":340,"author":{"gitId":"vansh284"},"content":"They press the down arrow on the keyboard to recall the `delete 1` command they just passed.","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"vansh284"},"content":"This results in `Logic#getPassedCommandString` being called which returns `delete 1`.  The user\u0027s CLI text box is then set to display `delete 1`.","lastModifiedDate":"2023-11-07"},{"lineNumber":342,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"vansh284"},"content":"![Recall Step 6](images/RecallStep6.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"Gavino3o"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"Gavino3o"},"content":"### Find feature","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"Gavino3o"},"content":"#### Overview","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"Gavino3o"},"content":"The find feature allows the user to find patients or specialists by checking whether their attributes contain certain keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"Gavino3o"},"content":"Upon entering a `find` command, an instance of `FindCommandParser` is created to process the prefixes along with their corresponding arguments into","lastModifiedDate":"2023-10-27"},{"lineNumber":352,"author":{"gitId":"Gavino3o"},"content":"predicates. The predicates are represented as `Predicate\u003cPerson\u003e` (using Java\u0027s in-built functional interface), and are mapped","lastModifiedDate":"2023-10-27"},{"lineNumber":353,"author":{"gitId":"Gavino3o"},"content":"to their prefixes in a `FindPredicateMap`. A `FindPredicateMap` encapsulates **all** predicates indicated by the user,","lastModifiedDate":"2023-10-27"},{"lineNumber":354,"author":{"gitId":"Gavino3o"},"content":"which are later combined and used to test each `Person` in the `FilteredPersonList` of the `Model`.","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"Gavino3o"},"content":"As patients and specialists have common and differing attributes, so do their predicates.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"Gavino3o"},"content":"Predicates common to both:\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":358,"author":{"gitId":"Gavino3o"},"content":"`NameContainsKeywordsPredicate`, `PhoneContainsKeywordsPredicate`, `EmailContainsKeywordsPredicate`, `TagsContainsKeywordsPredicate`","lastModifiedDate":"2023-10-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"Gavino3o"},"content":"Predicates unique to patients:\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"Gavino3o"},"content":"`AgeContainsKeywordsPredicate`, `MedHistoryContainsKeywordsPredicate`","lastModifiedDate":"2023-10-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"Gavino3o"},"content":"Predicates unique to specialist:\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":364,"author":{"gitId":"Gavino3o"},"content":"`LocationContainsKeywordsPredicate`, `SpecialtyContainsKeywordsPredicate`","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":366,"author":{"gitId":"Gavino3o"},"content":"#### Example","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"Gavino3o"},"content":"The following sequence diagram shows how a find command is parsed and executed to find a patient.","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"Gavino3o"},"content":"In this example, the command entered is \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"Gavino3o"},"content":"`find -pa n/Tim m/Anaemia`","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"Gavino3o"},"content":"![FindCommandSequenceDiagram](images/FindCommandSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"Gavino3o"},"content":"When the `FindCommandParser` parses the prefix arguments, a `NameContainsKeywordsPredicate` and `MedHistoryContainsKeywordsPredicate`","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"Gavino3o"},"content":"is instantiated by their corresponding arguments and are mapped to their prefixes in the `FindPredicateMap`.","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"Gavino3o"},"content":"![FindPredicateMapExample](images/FindPredicateMapExample.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"Gavino3o"},"content":"The predicates are combined into a single `Predicate\u003cPerson\u003e` in `FindCommand#execute` and applied to each `Person` in the ","lastModifiedDate":"2023-11-08"},{"lineNumber":379,"author":{"gitId":"Gavino3o"},"content":"`FilteredPersonList` of the `Model`.","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"Gavino3o"},"content":"To find a specialist, a similar parse and execution flow is conducted. ","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"Gavino3o"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"alvinlim277"},"content":"### Shortcut management feature","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"alvinlim277"},"content":"User defined shortcuts are managed by `ShortcutSettings`. Internally it contains a `shortcutMap` that stores _mappings_ of ","lastModifiedDate":"2023-11-08"},{"lineNumber":388,"author":{"gitId":"alvinlim277"},"content":"user defined _shortcut aliases_ to existing valid _command keywords_. This class provides functionality for registering new shortcuts,","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"alvinlim277"},"content":"removing previously defined shortcuts, and querying the map to check if a shortcut has previously been defined.","lastModifiedDate":"2023-11-12"},{"lineNumber":390,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"alvinlim277"},"content":"These shortcut mappings need to be updated by command execution, as well as used in parsing of user input. Thus, the following design decisions have been made:","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"alvinlim277"},"content":"1. Shortcut operations are exposed in the `Model` interface as ","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"alvinlim277"},"content":"   * `Model#registerShortcut(ShortcutAlias shortcutAlias, CommandWord commandWord)` ","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"alvinlim277"},"content":"   * `Model#removeShortcut(ShortcutAlias shortcutAlias)`","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"alvinlim277"},"content":"   * `Model#getShortcut(String alias)`","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"alvinlim277"},"content":"2. `AddressBookParser` now has a dependency to the `Model`. This is required so that the shortcut mappings can be accessed for use in parsing user input.","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":398,"author":{"gitId":"alvinlim277"},"content":"![Class Diagram](images/ShortcutSettingsClassDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":400,"author":{"gitId":"alvinlim277"},"content":"Within `ShortcutSettings` similar operations are implemented to `register`, `remove`, and `get` shortcuts. Additionally to resolve bugs that might arise from users tampering with the `preferences.json` file,","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"alvinlim277"},"content":"`ShortcutSettings#removeBadMappings()` clears the `shortcutMap` of invalid mappings and is called on initialisation.","lastModifiedDate":"2023-10-26"},{"lineNumber":402,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":403,"author":{"gitId":"alvinlim277"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":404,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"alvinlim277"},"content":"#### Invalid Mappings","lastModifiedDate":"2023-10-26"},{"lineNumber":406,"author":{"gitId":"alvinlim277"},"content":"On this subject, in order to not jeopardise parsing operations and the user experience, some restrictions have been put on the mappings that can be registered. ","lastModifiedDate":"2023-10-26"},{"lineNumber":407,"author":{"gitId":"alvinlim277"},"content":"These restrictions are enforced by the wrapper class `ShortcutAlias`, along with the relevant method in `ParserUtil`.","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"alvinlim277"},"content":"1. Shortcut aliases must not be blank.","lastModifiedDate":"2023-10-26"},{"lineNumber":409,"author":{"gitId":"alvinlim277"},"content":"2. Shortcut aliases must only contain alphanumeric characters without any whitespaces.","lastModifiedDate":"2023-10-26"},{"lineNumber":410,"author":{"gitId":"alvinlim277"},"content":"3. Shortcut aliases must not match the default `COMMAND_WORD` of any existing commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"alvinlim277"},"content":"   * This is to prevent any unintended behaviour, and users might even accidentally \u0027lock\u0027 themselves out of using certain commands if they are unaware of how to manipulate `preferences.json`.","lastModifiedDate":"2023-10-26"},{"lineNumber":412,"author":{"gitId":"alvinlim277"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":413,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":414,"author":{"gitId":"alvinlim277"},"content":"#### Command execution","lastModifiedDate":"2023-10-26"},{"lineNumber":415,"author":{"gitId":"alvinlim277"},"content":"The sequence diagram below outlines the command execution of a sample `AddShortcutCommand` that wants to register `del` as a shortcut for `delete`.","lastModifiedDate":"2023-10-26"},{"lineNumber":416,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":417,"author":{"gitId":"alvinlim277"},"content":"![Add Shortcut Sequence](images/AddShortcutCommandSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":418,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":419,"author":{"gitId":"alvinlim277"},"content":"The following activity diagrams summarise the process of adding and removing shortcuts from DoConnek Pro.","lastModifiedDate":"2023-10-26"},{"lineNumber":420,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":421,"author":{"gitId":"alvinlim277"},"content":"![Add Shortcut Activity](images/AddShortcutActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":422,"author":{"gitId":"alvinlim277"},"content":"![Delete Shortcut Activity](images/DeleteShortcutActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":423,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":424,"author":{"gitId":"alvinlim277"},"content":"#### Saving between sessions","lastModifiedDate":"2023-10-26"},{"lineNumber":425,"author":{"gitId":"alvinlim277"},"content":"`ShortcutSettings` implements the `Serializable` interface, thus is saved to `json` format as a part of `UserPrefs`. ","lastModifiedDate":"2023-11-12"},{"lineNumber":426,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":427,"author":{"gitId":"alvinlim277"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":428,"author":{"gitId":"alvinlim277"},"content":"**Aspect: How shortcuts are stored and accessed:**","lastModifiedDate":"2023-10-26"},{"lineNumber":429,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":430,"author":{"gitId":"alvinlim277"},"content":"* **Alternative 1 (current choice):** Stored in a separate `ShortcutSettings` class.","lastModifiedDate":"2023-10-26"},{"lineNumber":431,"author":{"gitId":"alvinlim277"},"content":"    * Pros: Separation of responsibility and easier management.","lastModifiedDate":"2023-10-26"},{"lineNumber":432,"author":{"gitId":"alvinlim277"},"content":"    * Cons: More memory usage and introduces one dependency between `AddressBookParser` and `Model`.","lastModifiedDate":"2023-10-26"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"alvinlim277"},"content":"* **Alternative 2:** Individual command knows its own list of shortcuts.","lastModifiedDate":"2023-10-26"},{"lineNumber":435,"author":{"gitId":"alvinlim277"},"content":"    * Pros: Will use less memory (No extra data structure created).","lastModifiedDate":"2023-10-26"},{"lineNumber":436,"author":{"gitId":"alvinlim277"},"content":"    * Cons: Difficult to manage duplicate shortcut mappings.","lastModifiedDate":"2023-10-26"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"vansh284"},"content":"The target users...","lastModifiedDate":"2023-09-27"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"vansh284"},"content":"* are management staff at a General Practitioner\u0027s Clinic","lastModifiedDate":"2023-09-26"},{"lineNumber":459,"author":{"gitId":"vansh284"},"content":"* need to keep track of the clinic\u0027s patients\u0027 details","lastModifiedDate":"2023-09-26"},{"lineNumber":460,"author":{"gitId":"vansh284"},"content":"* need to keep track of the affiliated specialists that the clinic refers patients to","lastModifiedDate":"2023-09-26"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"vansh284"},"content":"* prefer typing to mouse interactions","lastModifiedDate":"2023-09-26"},{"lineNumber":464,"author":{"gitId":"vansh284"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2023-09-26"},{"lineNumber":465,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":466,"author":{"gitId":"vansh284"},"content":"**Value proposition**: A one-stop application that allows management of both a clinic\u0027s patient and specialist details faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-09-26"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"vansh284"},"content":"Priorities: Essential (must have) - `* * *`, Typical (nice to have) - `* *`, Novel (unlikely to have) - `*`","lastModifiedDate":"2023-09-29"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"| Priority | As a …​                  | I want to …​                                        | So that I can…​                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"vansh284"},"content":"|---------|--------------------------|-----------------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":476,"author":{"gitId":"-"},"content":"| `* * *` | new user                 | see usage instructions                              | refer to instructions when I forget how to use the App               |","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | deal with patient and specialist records separately | easily do patient-specific or specialist-specific operations         |","lastModifiedDate":"2023-09-29"},{"lineNumber":478,"author":{"gitId":"Kokseng1"},"content":"| `* * *` | user                     | add a new patient to the records                    | keep track of details of new patients                                |","lastModifiedDate":"2023-10-01"},{"lineNumber":479,"author":{"gitId":"Kokseng1"},"content":"| `* *`   | user                     | edit details of existing patients                   | make sure the patients\u0027 details are up to date                       |","lastModifiedDate":"2023-10-01"},{"lineNumber":480,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | delete individual patient details                   | delete records of patients I no longer take care                     |","lastModifiedDate":"2023-11-07"},{"lineNumber":481,"author":{"gitId":"vansh284"},"content":"| `* *`   | user                     | easily filter patient records by any criteria       | find relevant patient information quickly                            |","lastModifiedDate":"2023-11-07"},{"lineNumber":482,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a patient\u0027s name                          | identify the patient                                              |","lastModifiedDate":"2023-11-07"},{"lineNumber":483,"author":{"gitId":"Kokseng1"},"content":"| `* * *` | user                     | access a patient\u0027s medical history                  | provide more informed care based on the patient\u0027s medical history    |","lastModifiedDate":"2023-10-01"},{"lineNumber":484,"author":{"gitId":"Kokseng1"},"content":"| `* * *` | user                     | access a patient\u0027s contact number                   | quickly get in contact with the patient                              |","lastModifiedDate":"2023-10-01"},{"lineNumber":485,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a patient\u0027s email                            | have an alternate means of contacting the patient                    |","lastModifiedDate":"2023-11-07"},{"lineNumber":486,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a patient\u0027s age                              | provide age-specific care and treatment to the patient               |","lastModifiedDate":"2023-09-29"},{"lineNumber":487,"author":{"gitId":"vansh284"},"content":"| `*`     | user                     | customise tags for my patients                      | have control over the organisation of my patients                    |","lastModifiedDate":"2023-09-29"},{"lineNumber":488,"author":{"gitId":"vansh284"},"content":"| `*`     | user                     | group delete patients                               | save time when removing large amount of patient records              |","lastModifiedDate":"2023-11-07"},{"lineNumber":489,"author":{"gitId":"angkyakdifp"},"content":"| `* * *` | user                     | add a new specialist to the records                 | keep track of details of new specialists patients can be referred to |","lastModifiedDate":"2023-10-05"},{"lineNumber":490,"author":{"gitId":"angkyakdifp"},"content":"| `* *`   | user                     | edit details of existing specialists                | make sure the specialist details are up to date                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":491,"author":{"gitId":"angkyakdifp"},"content":"| `* * *` | user                     | delete specialist details                           | delete records of specialists I no longer work with                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":492,"author":{"gitId":"vansh284"},"content":"| `* *`   | user                     | easily filter specialist records by any criteria       | find relevant specialist information quickly                            |","lastModifiedDate":"2023-11-07"},{"lineNumber":493,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a specialist\u0027s name                          | identify the specialist                                              |","lastModifiedDate":"2023-11-07"},{"lineNumber":494,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a specialist\u0027s contact number                | quickly get in contact with the specialist                           |","lastModifiedDate":"2023-11-07"},{"lineNumber":495,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a specialist\u0027s email                         | have an alternate means of contacting the specialist                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":496,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a specialist\u0027s specialty                     | refer patients to appropriate specialists                            |","lastModifiedDate":"2023-11-07"},{"lineNumber":497,"author":{"gitId":"vansh284"},"content":"| `*`     | user                     | customise tags for my specialists                   | have control over the organisation of my specialists                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":498,"author":{"gitId":"angkyakdifp"},"content":"| `* *`   | user                     | search for specialists by location                  | refer patients to convenient specialists to minimise time            | ","lastModifiedDate":"2023-10-05"},{"lineNumber":499,"author":{"gitId":"Gavino3o"},"content":"| `* *`   | user                     | search for specialists by their speciality          | refer patients to the right experts                                  |","lastModifiedDate":"2023-09-29"},{"lineNumber":500,"author":{"gitId":"vansh284"},"content":"| `*`     | user                     | customise colour schemes of the App                 | customise the look of my application                                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":501,"author":{"gitId":"Gavino3o"},"content":"| `*`     | user who is a fast typer | perform all tasks will the CLI rather than the GUI  | be more efficient in managing records                                |","lastModifiedDate":"2023-09-29"},{"lineNumber":502,"author":{"gitId":"vansh284"},"content":"| `* *`   | impatient user           | add new keyboard shortcuts to the App               | save time when performing frequently repeated tasks                  |","lastModifiedDate":"2023-11-07"},{"lineNumber":503,"author":{"gitId":"vansh284"},"content":"| `* *`   | impatient user           | recall recently executed commands                   | save time when performing frequently repeated tasks                  |","lastModifiedDate":"2023-11-07"},{"lineNumber":504,"author":{"gitId":"vansh284"},"content":"| `* *`   | careless user            | undo and redo commands                              | correct mistakes I\u0027ve made                                           |","lastModifiedDate":"2023-11-07"},{"lineNumber":505,"author":{"gitId":"alvinlim277"},"content":"| `* * *` | user                     | save the App data                                   | retain data for future reference                                     |","lastModifiedDate":"2023-10-02"},{"lineNumber":506,"author":{"gitId":"alvinlim277"},"content":"| `* * *` | user                     | load previously saved App data                      | examine past records/information                                     |","lastModifiedDate":"2023-10-02"},{"lineNumber":507,"author":{"gitId":"alvinlim277"},"content":"| `*`     | experienced user         | manipulate the save file directly                   | make quick changes to data without having to open the application    |","lastModifiedDate":"2023-10-02"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"Kokseng1"},"content":"(For all use cases below, the **System** is the `DoConnek Pro` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-09-26"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"vansh284"},"content":"**Use case: Delete a patient from the records**","lastModifiedDate":"2023-11-11"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"vansh284"},"content":"1.  User requests to list some patients.","lastModifiedDate":"2023-11-11"},{"lineNumber":518,"author":{"gitId":"vansh284"},"content":"2.  System shows a list of patients.","lastModifiedDate":"2023-11-11"},{"lineNumber":519,"author":{"gitId":"vansh284"},"content":"3.  User requests to delete a specific patient in the list.","lastModifiedDate":"2023-11-11"},{"lineNumber":520,"author":{"gitId":"vansh284"},"content":"4.  System deletes the patient.","lastModifiedDate":"2023-11-11"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"vansh284"},"content":"* 3a. System detects invalid request format.","lastModifiedDate":"2023-11-11"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"Kokseng1"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-09-28"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"vansh284"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-11-11"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"vansh284"},"content":"**Use case: Add a patient to the records**","lastModifiedDate":"2023-11-11"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":538,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":540,"author":{"gitId":"vansh284"},"content":"1. User searches list to check if patient is already in the system.","lastModifiedDate":"2023-11-11"},{"lineNumber":541,"author":{"gitId":"vansh284"},"content":"2. System shows that there are no entries matching the patient\u0027s name.","lastModifiedDate":"2023-11-11"},{"lineNumber":542,"author":{"gitId":"vansh284"},"content":"3. User requests to add patient to the system.","lastModifiedDate":"2023-11-11"},{"lineNumber":543,"author":{"gitId":"vansh284"},"content":"4. System confirms that the person has been added.","lastModifiedDate":"2023-11-11"},{"lineNumber":544,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":545,"author":{"gitId":"alvinlim277"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":546,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":547,"author":{"gitId":"alvinlim277"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":548,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":549,"author":{"gitId":"vansh284"},"content":"* 1a. System shows that there is an existing patient with that name.","lastModifiedDate":"2023-11-11"},{"lineNumber":550,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":551,"author":{"gitId":"Gavino3o"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":552,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":553,"author":{"gitId":"vansh284"},"content":"* 3a. System detects invalid request format.","lastModifiedDate":"2023-11-11"},{"lineNumber":554,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":555,"author":{"gitId":"vansh284"},"content":"  * 3a1. System shows an error message.","lastModifiedDate":"2023-11-11"},{"lineNumber":556,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":557,"author":{"gitId":"vansh284"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2023-11-11"},{"lineNumber":558,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":559,"author":{"gitId":"vansh284"},"content":"**Use case: List all patients in the records**","lastModifiedDate":"2023-11-11"},{"lineNumber":560,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":561,"author":{"gitId":"Gavino3o"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":562,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":563,"author":{"gitId":"vansh284"},"content":"1. User requests to list all patients.","lastModifiedDate":"2023-11-11"},{"lineNumber":564,"author":{"gitId":"vansh284"},"content":"2. System shows a list of all patients stored.","lastModifiedDate":"2023-11-11"},{"lineNumber":565,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":566,"author":{"gitId":"Gavino3o"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":567,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":568,"author":{"gitId":"Gavino3o"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":569,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":570,"author":{"gitId":"vansh284"},"content":"* 1a. System detects invalid request format.","lastModifiedDate":"2023-11-11"},{"lineNumber":571,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":572,"author":{"gitId":"Gavino3o"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-09-27"},{"lineNumber":573,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":574,"author":{"gitId":"Gavino3o"},"content":"      Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":575,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":576,"author":{"gitId":"vansh284"},"content":"**Use case: Search for patients in the records**","lastModifiedDate":"2023-11-11"},{"lineNumber":577,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":578,"author":{"gitId":"angkyakdifp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":579,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":580,"author":{"gitId":"angkyakdifp"},"content":"1. User requests to find patients from a keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":581,"author":{"gitId":"vansh284"},"content":"2. System shows a list of patients that match the keyword.","lastModifiedDate":"2023-11-11"},{"lineNumber":582,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":583,"author":{"gitId":"angkyakdifp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":584,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":585,"author":{"gitId":"angkyakdifp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":586,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":587,"author":{"gitId":"vansh284"},"content":"* 1a. System detects invalid request format.","lastModifiedDate":"2023-11-11"},{"lineNumber":588,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":589,"author":{"gitId":"angkyakdifp"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":590,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":591,"author":{"gitId":"angkyakdifp"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":592,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":593,"author":{"gitId":"vansh284"},"content":"**Use case: View details of a patient in the records**","lastModifiedDate":"2023-11-11"},{"lineNumber":594,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":595,"author":{"gitId":"angkyakdifp"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":596,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":597,"author":{"gitId":"vansh284"},"content":"1.  User requests to list some patients.","lastModifiedDate":"2023-11-11"},{"lineNumber":598,"author":{"gitId":"vansh284"},"content":"2.  System shows a list of patients.","lastModifiedDate":"2023-11-11"},{"lineNumber":599,"author":{"gitId":"vansh284"},"content":"3.  User requests to view the details of a specific patient in the list.","lastModifiedDate":"2023-11-11"},{"lineNumber":600,"author":{"gitId":"vansh284"},"content":"4.  System shows the patient\u0027s details.","lastModifiedDate":"2023-11-11"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":604,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":606,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":608,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":610,"author":{"gitId":"vansh284"},"content":"* 3a. System detects invalid request format.","lastModifiedDate":"2023-11-11"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":612,"author":{"gitId":"angkyakdifp"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-26"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":616,"author":{"gitId":"alvinlim277"},"content":"**Use case: Exit the program**","lastModifiedDate":"2023-09-28"},{"lineNumber":617,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":618,"author":{"gitId":"alvinlim277"},"content":"**MSS**","lastModifiedDate":"2023-09-28"},{"lineNumber":619,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":620,"author":{"gitId":"vansh284"},"content":"1.  User requests to exit the program.","lastModifiedDate":"2023-11-11"},{"lineNumber":621,"author":{"gitId":"vansh284"},"content":"2.  System exits the program.","lastModifiedDate":"2023-11-11"},{"lineNumber":622,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":623,"author":{"gitId":"alvinlim277"},"content":"* 1a. System detects invalid request format.","lastModifiedDate":"2023-09-27"},{"lineNumber":624,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":625,"author":{"gitId":"alvinlim277"},"content":"  * 1a1. System shows an error message.","lastModifiedDate":"2023-09-27"},{"lineNumber":626,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":627,"author":{"gitId":"alvinlim277"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":629,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"vansh284"},"content":"4.  Should be made for use by a single user rather than multiple users.","lastModifiedDate":"2023-09-26"},{"lineNumber":635,"author":{"gitId":"vansh284"},"content":"5.  Any data should be stored locally in a human-editable text file without any use of a Database Management System.","lastModifiedDate":"2023-09-26"},{"lineNumber":636,"author":{"gitId":"vansh284"},"content":"6.  Should be usable with the download of a single JAR file of size less than 100 MB.","lastModifiedDate":"2023-09-26"},{"lineNumber":637,"author":{"gitId":"vansh284"},"content":"7.  Should not require any installation by the users.","lastModifiedDate":"2023-09-26"},{"lineNumber":638,"author":{"gitId":"vansh284"},"content":"7.  Should not depend on any remote server.","lastModifiedDate":"2023-09-26"},{"lineNumber":639,"author":{"gitId":"vansh284"},"content":"8.  The product should start from the given code base and be evolved/enhanced/morphed in a breadth-first incremental manner.","lastModifiedDate":"2023-09-26"},{"lineNumber":640,"author":{"gitId":"vansh284"},"content":"9.  The code should primarily follow the Object-oriented paradigm.","lastModifiedDate":"2023-09-26"},{"lineNumber":641,"author":{"gitId":"vansh284"},"content":"10. Should only use _appropriate third party frameworks/libraries/services_ that have been approved.","lastModifiedDate":"2023-09-26"},{"lineNumber":642,"author":{"gitId":"vansh284"},"content":"11. The product\u0027s _GUI should work well_ for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2023-09-26"},{"lineNumber":643,"author":{"gitId":"vansh284"},"content":"12. The product\u0027s _GUI should be usable_ for resolutions 1280x720 and higher, and, for screen scales 150%.","lastModifiedDate":"2023-09-26"},{"lineNumber":644,"author":{"gitId":"vansh284"},"content":"13. Should be intuitive to use for a user without a technical background.","lastModifiedDate":"2023-09-26"},{"lineNumber":645,"author":{"gitId":"vansh284"},"content":"13. The product is not required to handle printing of the patient and specialist records.","lastModifiedDate":"2023-09-26"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"vansh284"},"content":"* **CLI**: Command Line Interface.","lastModifiedDate":"2023-11-12"},{"lineNumber":651,"author":{"gitId":"vansh284"},"content":"* **GUI**: Graphical User Interface.","lastModifiedDate":"2023-11-12"},{"lineNumber":652,"author":{"gitId":"vansh284"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2023-11-12"},{"lineNumber":653,"author":{"gitId":"vansh284"},"content":"* **Appropriate third party frameworks/libraries/systems**: Those frameworks/libraries/systems that are free, open-source, have permissive license terms, don\u0027t require installation by the users and don\u0027t violate other constraints.","lastModifiedDate":"2023-09-26"},{"lineNumber":654,"author":{"gitId":"vansh284"},"content":"* **GUI should work well**: The GUI should not cause resolution-related inconveniences for the user.","lastModifiedDate":"2023-09-26"},{"lineNumber":655,"author":{"gitId":"vansh284"},"content":"* **GUI should be usable**: The GUI\u0027s functions can all be used, although user-experience may be suboptimal.","lastModifiedDate":"2023-09-26"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"Gavino3o"},"content":"testers are welcomed to do more *exploratory* testing.","lastModifiedDate":"2023-11-12"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"Gavino3o"},"content":"### Adding a patient or specialist","lastModifiedDate":"2023-11-12"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"Gavino3o"},"content":"Adding a patient to the existing list.","lastModifiedDate":"2023-11-12"},{"lineNumber":686,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"Gavino3o"},"content":"1. Recommendation: List all patients by entering `list -pa` to better observe the results.","lastModifiedDate":"2023-11-12"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"Gavino3o"},"content":"2. Test case: `add -pa n/Abigail Lim p/89074463 e/abilim@test.com t/friends a/22 m/Bronchitis m/Fever`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":690,"author":{"gitId":"Gavino3o"},"content":"   Expected: A patient by the name of Abigail Lim is added to the list of patients. The details of the newly added patient can be seen via the `view` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"Gavino3o"},"content":"3. Test case: `add -pa n/Abigail Lim e/abilim@test.com t/friends a/22 m/Bronchitis` (missing `p/PHONE` field)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":693,"author":{"gitId":"Gavino3o"},"content":"Expected: No patient is added to the list. Error message is shown in the command result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"Gavino3o"},"content":"4. Test Case: `add -pa n/Abigail Lim p/89074463 e/abilim@test.com t/friends a/twenty-two m/Bronchitis` (invalid `a/AGE` field)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":696,"author":{"gitId":"Gavino3o"},"content":"   Expected: No patient is added to the list. Error message of accepted `a/AGE` format is shown.","lastModifiedDate":"2023-11-12"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"Gavino3o"},"content":"Similar tests for adding a specialists can be done using the `add` command format for specified for specialists.","lastModifiedDate":"2023-11-12"},{"lineNumber":699,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":700,"author":{"gitId":"Gavino3o"},"content":"### Viewing a patient or specialist","lastModifiedDate":"2023-11-12"},{"lineNumber":701,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":702,"author":{"gitId":"Gavino3o"},"content":"Viewing a patient while all patients are being shown in the list panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"Gavino3o"},"content":"1. Prerequisites: List all patients using the `list - pa` command. Multiple patients in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"Gavino3o"},"content":"2. Test case: `view 1`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":707,"author":{"gitId":"Gavino3o"},"content":"   Expected: First patient is selected to be viewed. Details of the viewed patient are shown in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":708,"author":{"gitId":"Gavino3o"},"content":"   Details of the viewed patients is also displayed in the command result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"Gavino3o"},"content":"3. Test case: `view 0`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":711,"author":{"gitId":"Gavino3o"},"content":"   Expected: No person is viewed. Error details shown in command result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"Gavino3o"},"content":"4. Other incorrect view commands to try: `view`, `view x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":714,"author":{"gitId":"-"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"Gavino3o"},"content":"Similar tests for viewing a specialist can be done using the `view` command after listing all specialists via `list -sp` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":717,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":718,"author":{"gitId":"Gavino3o"},"content":"### Editing a patient or specialist","lastModifiedDate":"2023-11-12"},{"lineNumber":719,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":720,"author":{"gitId":"Gavino3o"},"content":" Editing a specialist while a specialist is being viewed in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":721,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":722,"author":{"gitId":"Gavino3o"},"content":"1. Prerequisites: Viewing a specialist in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":723,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":724,"author":{"gitId":"Gavino3o"},"content":"2. Test case: `edit n/Jonathan Holland` (editing a single attribute)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":725,"author":{"gitId":"Gavino3o"},"content":"   Expected: The name of the specialist being viewed is modified to **Jonathan Holland**.","lastModifiedDate":"2023-11-12"},{"lineNumber":726,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":727,"author":{"gitId":"Gavino3o"},"content":"3. Test case: `edit n/John Holland p/88889009 s/Dentistry` (editing multiple attributes)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":728,"author":{"gitId":"Gavino3o"},"content":"   Expected: The specialist being viewed is modified to have the **name John Holland** with **phone number 88889009** and has **Dentistry as a specialisation**.","lastModifiedDate":"2023-11-12"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"Gavino3o"},"content":"4. Test case: `edit t/`(clearing tags)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":731,"author":{"gitId":"Gavino3o"},"content":"   Expected: The specialist being viewed is modified to have no tags.","lastModifiedDate":"2023-11-12"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"Gavino3o"},"content":"5. Test case: `edit n/`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":734,"author":{"gitId":"Gavino3o"},"content":"   Expected: The specialist being viewed is not modified. Error message indicating arguments cannot be blank is shown.","lastModifiedDate":"2023-11-12"},{"lineNumber":735,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":736,"author":{"gitId":"Gavino3o"},"content":"Similar tests for editing a patient can be done using the `edit` command after viewing a patient in the view panel using the `view` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":737,"author":{"gitId":"angkyakdifp"},"content":"    ","lastModifiedDate":"2023-10-26"},{"lineNumber":738,"author":{"gitId":"Gavino3o"},"content":"### Deleting a patient or specialist","lastModifiedDate":"2023-11-12"},{"lineNumber":739,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":740,"author":{"gitId":"Gavino3o"},"content":"Deleting a specialist while all specialist are being shown.","lastModifiedDate":"2023-11-12"},{"lineNumber":741,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":742,"author":{"gitId":"Gavino3o"},"content":"1. Prerequisites: List all specialists using the `list -sp` command. Multiple specialists in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":743,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":744,"author":{"gitId":"Gavino3o"},"content":"2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":745,"author":{"gitId":"Gavino3o"},"content":"   Expected: First specialist is deleted from the specialist list. Shorter details of the deleted specialists is shown in the command result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":746,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":747,"author":{"gitId":"Gavino3o"},"content":"3. Test case: `delete 2 3 4`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":748,"author":{"gitId":"Gavino3o"},"content":"   Expected: Second, third and fourth specialist is deleted from the specialist list. Shorter details of the deleted specialists is shown in the command result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":749,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":750,"author":{"gitId":"Gavino3o"},"content":"4. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":751,"author":{"gitId":"Gavino3o"},"content":"   Expected: No person is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-12"},{"lineNumber":752,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":753,"author":{"gitId":"Gavino3o"},"content":"5. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":754,"author":{"gitId":"angkyakdifp"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2023-10-26"},{"lineNumber":755,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":756,"author":{"gitId":"Gavino3o"},"content":"Similar tests for deleting a patient can be done by first listing all patients using the `list -pa` command with multiple patients listed.","lastModifiedDate":"2023-11-12"},{"lineNumber":757,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":758,"author":{"gitId":"Gavino3o"},"content":"### Finding patients or specialists","lastModifiedDate":"2023-11-12"},{"lineNumber":759,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":760,"author":{"gitId":"Gavino3o"},"content":"Finding a patient that has been added into the patient list.","lastModifiedDate":"2023-11-12"},{"lineNumber":761,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":762,"author":{"gitId":"Gavino3o"},"content":"1. Prerequisites: Follow the instructions for adding a patient for manual testing above [here](#adding-a-patient-or-specialist).","lastModifiedDate":"2023-11-12"},{"lineNumber":763,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":764,"author":{"gitId":"Gavino3o"},"content":"2. Test case: `find -pa n/Abigail`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":765,"author":{"gitId":"Gavino3o"},"content":"   Expected: The patient list displays patients with name containing \"Abigail\" only.","lastModifiedDate":"2023-11-12"},{"lineNumber":766,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":767,"author":{"gitId":"Gavino3o"},"content":"3. Test case: `find -pa n/Abigail m/Bronchitis` (multiple arguments)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":768,"author":{"gitId":"Gavino3o"},"content":"   Expected: The patient list displays patients with the name containing \"Abigail\" _**and**_ has \"Bronchitis\" in their medical history.","lastModifiedDate":"2023-11-12"},{"lineNumber":769,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":770,"author":{"gitId":"Gavino3o"},"content":"4. Test case: `find -pa a/` (blank `a/AGE` field)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":771,"author":{"gitId":"Gavino3o"},"content":"   Expected: No changes can be observed from the patient list. Error message indicating arguments cannot be blank is shown in the command result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":772,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":773,"author":{"gitId":"Gavino3o"},"content":"Similar tests for finding specialists can be conducted by using the `find` command with a multiple specialists in the specialist list.","lastModifiedDate":"2023-11-12"},{"lineNumber":774,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":775,"author":{"gitId":"Gavino3o"},"content":"### Undo and redo commands","lastModifiedDate":"2023-11-12"},{"lineNumber":776,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":777,"author":{"gitId":"Gavino3o"},"content":"Undo and redo commands executed successfully.","lastModifiedDate":"2023-11-12"},{"lineNumber":778,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":779,"author":{"gitId":"Gavino3o"},"content":"Test case:","lastModifiedDate":"2023-11-12"},{"lineNumber":780,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":781,"author":{"gitId":"Gavino3o"},"content":"1. Enter `theme dark` followed by `theme light`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":782,"author":{"gitId":"Gavino3o"},"content":"   Expected: Colour theme of the application changes from dark mode to light mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":783,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":784,"author":{"gitId":"Gavino3o"},"content":"2. Enter `undo`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":785,"author":{"gitId":"Gavino3o"},"content":"   Expected: Colour theme of the application changes to dark mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":786,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":787,"author":{"gitId":"Gavino3o"},"content":"3. Enter `redo`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":788,"author":{"gitId":"Gavino3o"},"content":"   Expected: Colour theme of the application changes to light mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":789,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":790,"author":{"gitId":"Gavino3o"},"content":"4. Enter `add -pa n/Charlie Wong p/89073323 e/cwong@test.com t/neighbour a/35 m/Flu`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":791,"author":{"gitId":"Gavino3o"},"content":"   Expected: A patient by the name of \"Charlie Wong\" is added to the patient list.","lastModifiedDate":"2023-11-12"},{"lineNumber":792,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":793,"author":{"gitId":"Gavino3o"},"content":"5. Enter `redo`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":794,"author":{"gitId":"Gavino3o"},"content":"   Expected: No changes is made to the patient list. Error message indicating no command to be undone is displayed in result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":795,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":796,"author":{"gitId":"Gavino3o"},"content":"6. Enter `undo`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":797,"author":{"gitId":"Gavino3o"},"content":"   Expected: The patient previously added in step 5 is removed from the patient list.","lastModifiedDate":"2023-11-12"},{"lineNumber":798,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":799,"author":{"gitId":"Gavino3o"},"content":"### Shortcut aliases","lastModifiedDate":"2023-11-12"},{"lineNumber":800,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":801,"author":{"gitId":"Gavino3o"},"content":"1. Adding a shortcut alias for `list` command","lastModifiedDate":"2023-11-12"},{"lineNumber":802,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":803,"author":{"gitId":"Gavino3o"},"content":"   1. Test case: `addsc sc/ls kw/list` followed by `ls -pa`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":804,"author":{"gitId":"Gavino3o"},"content":"   Expected: New shortcut alias `ls` is added. Command result box displays message of successful mapping. All patients are listed upon entering `ls -pa`.","lastModifiedDate":"2023-11-12"},{"lineNumber":805,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":806,"author":{"gitId":"Gavino3o"},"content":"   2. Test case: `addsc sc/ls kw/list`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":807,"author":{"gitId":"Gavino3o"},"content":"   Expected: No new shortcut alias is added. Command result box displays message of shortcut alias already existing.","lastModifiedDate":"2023-11-12"},{"lineNumber":808,"author":{"gitId":"Gavino3o"},"content":"   ","lastModifiedDate":"2023-11-12"},{"lineNumber":809,"author":{"gitId":"Gavino3o"},"content":"   3. Test case: `addsc sc/ls kw/delete` (same shortcut alias but different command keyword)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":810,"author":{"gitId":"Gavino3o"},"content":"   Expected: New shortcut alias is added, `ls` now behaves like a `delete` command. The command result box displays a message of the new mapping of `ls` to `delete` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":811,"author":{"gitId":"Gavino3o"},"content":"             A message of the removal of the old mapping of `ls` to `list` command is displayed as well.","lastModifiedDate":"2023-11-12"},{"lineNumber":812,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":813,"author":{"gitId":"Gavino3o"},"content":"2. Deleting a shortcut alias","lastModifiedDate":"2023-11-12"},{"lineNumber":814,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":815,"author":{"gitId":"Gavino3o"},"content":"    1. Prerequisite: Follow the manual testing instructions **adding shortcut alias** written above. No other shortcut alias has been previously added.","lastModifiedDate":"2023-11-12"},{"lineNumber":816,"author":{"gitId":"Gavino3o"},"content":"   ","lastModifiedDate":"2023-11-12"},{"lineNumber":817,"author":{"gitId":"Gavino3o"},"content":"    2. Test case: `delsc sc/ls`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":818,"author":{"gitId":"Gavino3o"},"content":"       Expected: Shortcut alias `ls` is removed. Using `ls` instead of `delete` command now results in an unknown command error being displayed in the command result box.","lastModifiedDate":"2023-11-12"},{"lineNumber":819,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":820,"author":{"gitId":"Gavino3o"},"content":"    3. Test case: `delsc sc/remove` (deleting non-existent shortcut alias)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":821,"author":{"gitId":"Gavino3o"},"content":"       Expected: No shortcut alias is removed. The command result box displays a useful error message indicating shortcut alias was not previously registered.","lastModifiedDate":"2023-11-12"},{"lineNumber":822,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":823,"author":{"gitId":"vansh284"},"content":"### Theme Command","lastModifiedDate":"2023-11-12"},{"lineNumber":824,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":825,"author":{"gitId":"vansh284"},"content":"1. Prerequisite: Set theme of the application to dark using the `theme dark` command.     ","lastModifiedDate":"2023-11-12"},{"lineNumber":826,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":827,"author":{"gitId":"vansh284"},"content":"2. Test case: `theme light`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":828,"author":{"gitId":"vansh284"},"content":"Expected: Theme of the application changes from dark to light.","lastModifiedDate":"2023-11-12"},{"lineNumber":829,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":830,"author":{"gitId":"vansh284"},"content":"3. Test case: `theme DaRk`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":831,"author":{"gitId":"vansh284"},"content":"Expected: Theme of the application changes from light to dark.","lastModifiedDate":"2023-11-12"},{"lineNumber":832,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":833,"author":{"gitId":"vansh284"},"content":"4. Test case: `theme colourful`\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":834,"author":{"gitId":"vansh284"},"content":"Expected: No change in the theme of the application. Command box displays error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":835,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":836,"author":{"gitId":"vansh284"},"content":"### Recall Command","lastModifiedDate":"2023-11-12"},{"lineNumber":837,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":838,"author":{"gitId":"vansh284"},"content":"1. Recalling recently executed commands in the application","lastModifiedDate":"2023-11-12"},{"lineNumber":839,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":840,"author":{"gitId":"vansh284"},"content":"   1. Prerequisite: Enter the following commands in order:`list -pa`, `list -sp`, `theme light` and `theme dark`.","lastModifiedDate":"2023-11-12"},{"lineNumber":841,"author":{"gitId":"vansh284"},"content":"   ","lastModifiedDate":"2023-11-12"},{"lineNumber":842,"author":{"gitId":"vansh284"},"content":"   2. Test case: Press the up arrow four times and then enter \u003cbr\u003e ","lastModifiedDate":"2023-11-12"},{"lineNumber":843,"author":{"gitId":"vansh284"},"content":"   Expected: The list panel updates to display patients.","lastModifiedDate":"2023-11-12"},{"lineNumber":844,"author":{"gitId":"vansh284"},"content":"   ","lastModifiedDate":"2023-11-12"},{"lineNumber":845,"author":{"gitId":"vansh284"},"content":"   3. Test case: Press the up arrow four times and then the down arrow once and then enter \u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":846,"author":{"gitId":"vansh284"},"content":"   Expected: The theme of the application changes from dark to light.","lastModifiedDate":"2023-11-12"},{"lineNumber":847,"author":{"gitId":"vansh284"},"content":"   ","lastModifiedDate":"2023-11-12"},{"lineNumber":848,"author":{"gitId":"vansh284"},"content":"2. Recalling commands when no commands have been executed yet","lastModifiedDate":"2023-11-12"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":850,"author":{"gitId":"vansh284"},"content":"   1. Prerequisite: Restart the application and don\u0027t enter any commands.","lastModifiedDate":"2023-11-12"},{"lineNumber":851,"author":{"gitId":"vansh284"},"content":"   ","lastModifiedDate":"2023-11-12"},{"lineNumber":852,"author":{"gitId":"vansh284"},"content":"   2. Test case: Type in `list -pa`. Don\u0027t enter. Press the up arrow. \u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":853,"author":{"gitId":"vansh284"},"content":"   Expected: There is no change to the command input text box.","lastModifiedDate":"2023-11-12"},{"lineNumber":854,"author":{"gitId":"vansh284"},"content":"   ","lastModifiedDate":"2023-11-12"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":856,"author":{"gitId":"vansh284"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-11-11"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":858,"author":{"gitId":"vansh284"},"content":"1. Currently, the view panel can only be updated using the view command. ","lastModifiedDate":"2023-11-07"},{"lineNumber":859,"author":{"gitId":"vansh284"},"content":"However, we are planning on implementing a feature that will allow users to update the view panel by simply clicking on a person in the list panel.","lastModifiedDate":"2023-11-07"},{"lineNumber":860,"author":{"gitId":"vansh284"},"content":"This change is driven by our goal to enhance user experience: although our application primarily caters to CLI users, such  behaviour","lastModifiedDate":"2023-11-07"},{"lineNumber":861,"author":{"gitId":"vansh284"},"content":"still seems intuitive and reasonable to expect.","lastModifiedDate":"2023-11-07"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":863,"author":{"gitId":"Gavino3o"},"content":"2. Currently, when the `delete` command encounters invalid indexes, it generates an error and does not delete any patient or specialist records.","lastModifiedDate":"2023-11-07"},{"lineNumber":864,"author":{"gitId":"Gavino3o"},"content":"In contrast, the `delsc` command handles invalid shortcuts by recognizing and ignoring them, while continuing to remove any valid shortcuts in the command.","lastModifiedDate":"2023-11-08"},{"lineNumber":865,"author":{"gitId":"Gavino3o"},"content":"The inconsistency between these two delete functions has been identified, and we have plans to address it in the future.","lastModifiedDate":"2023-11-07"},{"lineNumber":866,"author":{"gitId":"Gavino3o"},"content":"Our upcoming improvement will entail modifying the `delete` command to acknowledge and ignore invalid indexes while effectively deleting records specified by valid indexes provided by the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":868,"author":{"gitId":"vansh284"},"content":"3. DoConnek Pro currently checks for duplicate persons by name. This means that people with the same names cannot be added even if they have different parameters (like `Phone` or `Email`). This","lastModifiedDate":"2023-11-12"},{"lineNumber":869,"author":{"gitId":"vansh284"},"content":"checking of duplicates is also case-sensitive, whereas names, in general, are not case-sensitive. To resolve these two problems concurrently,","lastModifiedDate":"2023-11-12"},{"lineNumber":870,"author":{"gitId":"vansh284"},"content":"we plan on implementing a `NRIC` field for patients and a `MCR` field for specialists as unique identifiers. ","lastModifiedDate":"2023-11-12"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":873,"author":{"gitId":"vansh284"},"content":"4. DoConnek Pro currently disallows the use of \"/\" in a person name because it is used as a command delimiter.","lastModifiedDate":"2023-11-11"},{"lineNumber":874,"author":{"gitId":"vansh284"},"content":"Users may face problems due to this if they have to, for example, add a person with \"s/o\" in their name.","lastModifiedDate":"2023-11-11"},{"lineNumber":875,"author":{"gitId":"vansh284"},"content":"Future updates to the application plan to account for such cases.","lastModifiedDate":"2023-11-11"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":878,"author":{"gitId":"vansh284"},"content":"5. DoConnek Pro is currently not intelligent enough to detect incorrect-but-close-enough flags. Users must enter the","lastModifiedDate":"2023-11-11"},{"lineNumber":879,"author":{"gitId":"vansh284"},"content":"commands in the exact format specified in the user guide. For example, even if users input `tag/` instead of `t/`, DoConnek","lastModifiedDate":"2023-11-11"},{"lineNumber":880,"author":{"gitId":"vansh284"},"content":"Pro will not accept this as a valid input format. In the future we plan to make DoConnek Pro more flexible in this regard.","lastModifiedDate":"2023-11-11"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":883,"author":{"gitId":"alvinlim277"},"content":"6. DoConnek Pro allows users to add multiple entries for certain attributes, notably `MEDICAL_HISTORY` and `TAG`. However, ","lastModifiedDate":"2023-11-12"},{"lineNumber":884,"author":{"gitId":"alvinlim277"},"content":"it cannot guarantee the ordering of these entries as inputted by the user in the command line. ","lastModifiedDate":"2023-11-12"},{"lineNumber":885,"author":{"gitId":"alvinlim277"},"content":"We plan on rectifying DoConnek Pro to maintain this user-specified ordering in the future.","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"Kokseng1":32,"vansh284":212,"Gavino3o":186,"angkyakdifp":52,"-":330,"alvinlim277":73}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [DoConnekPro\u0027s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"vansh284":1,"-":47}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"DoConnek Pro is a **desktop app** that helps **General Practitioner Clinic Management Staff** manage their **contact information for patients and specialists**. It is optimized for **Command Line Interface (CLI) users** while having a **Graphical User Interface (GUI)**. This allows frequent tasks to be completed faster by typing in commands.","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"1. Download the latest `DoConnekPro.jar` from [here](https://github.com/AY2324S1-CS2103T-W13-1/tp/releases).","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your DoConnek Pro.","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"1. Open a command terminal (You can search for the \"Command Prompt\" application on Windows or the \"Terminal\" application on macOS).","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"1. `cd` into the folder you put the jar file in ([How to use `cd`](https://www.lifewire.com/change-directories-in-command-prompt-5185508#:~:text\u003dIn%20the%20command%20prompt%20window%2C%20type%20cd%20followed%20by%20the,the%20one%20you\u0027re%20in.\u0026text\u003dIf%20you%20want%20to%20go,back%20to%20the%20original%20option.)).","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"1. Use the `java -jar DoConnekPro.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"1. Type the command in the command input box at the top and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"   * `list -pa` : Lists all patients.","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"   * `add -pa n/John e/johnmctavish@gmail.com p/12345678 a/35 m/Osteoporosis m/Rheumatoid arthritis` : Adds a patient named `John` to the list.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"   * `delete 3` : Deletes the 3rd person shown in the current list.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"  e.g. in `add -pa n/NAME`, `NAME` is a parameter which can be used as `add -pa n/John Doe`.","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"* Certain commands require `-PERSON_TYPE` as a flag. This flag can only take two values: `-pa` or `-sp`","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"and specifies whether the command is to act on the patients (`-pa`) or on the specialists (`-sp`) in the address book.","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"  e.g. `n/NAME [m/MEDICAL_HISTORY]` can be used as `n/John Doe m/Osteoporosis` or as `n/John Doe`.","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"* Items with `…`​ after them can be used multiple times but must include at least one entry.\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"  e.g. `INDEX…​` can be used as `1` , `1 2 3`, `4 5 6 7 8`, but _**not**_ ` ` (i.e. 0 times).","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"* Items with both square brackets and `…`​ can be used multiple times, including zero times as they are optional.\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"  e.g. `[m/MEDICAL_HISTORY]…​` can be used as ` ` (i.e. 0 times), `m/Osteoporosis`, `m/Osteoporosis m/Asthma` etc.","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable. The order of the `-PERSON_TYPE` flag","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"however is not flexible in this way.","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"* Commands with parameters that require prefixes do not accept forward slash `/` as arguments.\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"  e.g. adding a specialist with the name `Nagaratnam s/o Suppiah`:\u003cbr\u003e`add -sp n/Nagaratnam s/o Suppiah e/example@gmail.com p/12345678 s/Surgery l/Raffles` will result in an error.","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"### Adding a patient or specialist: `add`","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"Adds a patient or specialist to DoConnek Pro records.","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"Format (for patients): `add -pa n/NAME p/PHONE e/EMAIL [t/TAG]...​ a/AGE [m/MEDICAL_HISTORY]...​` \u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"A patient can have any number of medical histories and tags (including 0)","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"Format (for specialists): `add -sp n/NAME p/PHONE e/EMAIL [t/TAG]...​ l/LOCATION s/SPECIALISATION`","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"angkyakdifp"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"angkyakdifp"},"content":"A specialist can have any number of tags (including 0)","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"angkyakdifp"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"Parameter specifications: ","lastModifiedDate":"2023-11-11"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"* `NAME`, `LOCATION`, `TAG`, `MEDICAL_HISTORY`, and `SPECIALISATION` can only contain alphanumeric characters.","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"* `EMAIL` can take alphanumeric and certain special characters and must be of the format \"local-part@domain\".","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"* `PHONE` can only contain 4 numeric characters or more.","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"* `AGE` can contain any integer in the range 0 to 149 inclusive.","lastModifiedDate":"2023-11-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"* `add -pa n/John p/12345678 e/johnmctavish@gmail.com t/friend a/35 m/Osteoporosis m/Rheumatoid arthritis`","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"* `add -sp n/Jane p/73331515 e/janepeter@gmail.com l/Ang Mo Kio s/Dermatologist`","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"### Listing patient or specialist records: `list`","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"Shows a list of all patients or specialists in stored records.","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"Format: `list -PERSON_TYPE`","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"Examples:","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"* `list -pa` Lists all patients in records.","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"* `list -sp` Lists all specialists in records.","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"### Locating patients or specialists by their attributes: `find`","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"Finds patients or specialists whose attributes contain any of the given keywords. ","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"Multiple attributes can be searched at once, the result will display any person","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"with all attributes containing any of the corresponding keywords in the command.","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"Format (for patients): `find -pa [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG]...​ [a/AGE] [m/MEDICAL HISTORY]...​`","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"Format (for specialists): `find -sp [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG]...​ [l/LOCATION] [s/SPECIALTY]`","lastModifiedDate":"2023-11-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"* All parameters with prefixes are optional. Hence, entering `find -PERSON_TYPE` (without any prefixes) will result in all person of the specified type being listed.","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"  * e.g. `find -sp` will list all specialist records.","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"alvinlim277"},"content":"* The search is case-insensitive.","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"  * e.g. `hans` will match `Hans`","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"alvinlim277"},"content":"* The order of the keywords does not matter. ","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"alvinlim277"},"content":"  * e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"alvinlim277"},"content":"* There are different behaviours regarding the searching of different parameters:","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"  * For `NAME`, `MEDICAL_HISTORY`, `SPECIALISATION`, `EMAIL`, `LOCATION` and `PHONE_NUMBER`, even substrings will be matched. ","lastModifiedDate":"2023-11-11"},{"lineNumber":142,"author":{"gitId":"alvinlim277"},"content":"    * e.g. `ha` will match `Hans`","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"alvinlim277"},"content":"  * For `AGE` and `TAGS` only full words will be matched. ","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"alvinlim277"},"content":"    * e.g. `1` will not match `18`","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"alvinlim277"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"alvinlim277"},"content":"  * The keywords will be separated out by whitespaces e.g. `hans bo` is akin to searching for `hans` and `bo` simultaneously.","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"alvinlim277"},"content":"    * e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"alvinlim277"},"content":"* `find -pa n/John` returns the patient `Johnny Depp` and the patient `John Doe`","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"* `find -sp n/alex david` returns the specialists `Alex Yeoh` and `David Li` ","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"alvinlim277"},"content":"* `find -sp n/Alex s/Orthopaedic` returns any specialists names including the string `Alex` who has the `Orthopaedic` specialty","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"Gavino3o"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"alvinlim277"},"content":"**:information_source: About the list header:**\u003cbr\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"alvinlim277"},"content":"DoConnek Pro\u0027s interface comes with a handy list header that shows whether you are viewing `Patients` or `Specialists`.","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":161,"author":{"gitId":"alvinlim277"},"content":"If for any reason there is no data to show, for example:","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"alvinlim277"},"content":"* There is no existing `Patient` data when listing `Patients`.","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"alvinlim277"},"content":"* A `find` query returns no matching results.","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"alvinlim277"},"content":"The list header will show `No data found` instead.","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"alvinlim277"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"### Viewing a patient or specialist record in more detail `view`","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"alvinlim277"},"content":"Displays detailed information about a patient or specialist in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":172,"author":{"gitId":"alvinlim277"},"content":"The view panel is located to the right of the person list.","lastModifiedDate":"2023-11-12"},{"lineNumber":173,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"Gavino3o"},"content":"Format: `view INDEX`","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"Gavino3o"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"Gavino3o"},"content":"* The index **must be a positive integer** 1, 2, 3, …​ with a maximum value of the list size.","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"Gavino3o"},"content":"Example:","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"alvinlim277"},"content":"* `list -pa` followed by `view 2` displays the detailed information of the 2nd listed patient in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":181,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"Gavino3o"},"content":"### Editing a pre-existing patient or specialist record: `edit`","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"alvinlim277"},"content":"Edits the data of the pre-existing patient or specialist record currently being displayed in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"Multiple attributes of a person can be changed at once. The view panel will be updated with the","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"alvinlim277"},"content":"modified results immediately after each successful `edit` command execution.","lastModifiedDate":"2023-11-12"},{"lineNumber":187,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"Gavino3o"},"content":"Format (for patients): `edit [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG]...​ [a/AGE] [m/MEDICAL HISTORY]...​`","lastModifiedDate":"2023-11-12"},{"lineNumber":189,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"Gavino3o"},"content":"Format (for specialists): `edit [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG]...​ [l/LOCATION] [s/SPECIALTY]`","lastModifiedDate":"2023-11-12"},{"lineNumber":191,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"vansh284"},"content":"* When entering an `edit` command, at least one valid parameter must be present. ","lastModifiedDate":"2023-11-12"},{"lineNumber":193,"author":{"gitId":"vansh284"},"content":"i.e. entering `edit` (without any parameters) will result in an error message being displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":194,"author":{"gitId":"Gavino3o"},"content":"* Only the patient or specialist in the view panel will be edited. Hence, when editing a specialist specific attribute","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"Gavino3o"},"content":"while viewing a patient (or vice versa), an error message be displayed.","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"Gavino3o"},"content":"  * e.g. when a patient is present in the view panel, `edit s/Dentistry` will result in an error message being displayed as","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"vansh284"},"content":"  patients do not have the specialisation attribute.","lastModifiedDate":"2023-11-12"},{"lineNumber":198,"author":{"gitId":"vansh284"},"content":"* For the `edit` command exclusively, in order to clear the content of optional attributes, the new values can be made empty.","lastModifiedDate":"2023-11-12"},{"lineNumber":199,"author":{"gitId":"vansh284"},"content":"    * e.g. `edit t/` (empty Tag attribute) will remove the tags of the patient or specialist being displayed in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":200,"author":{"gitId":"vansh284"},"content":"* However, the new values of compulsory attributes for a patient or specialist cannot be empty.","lastModifiedDate":"2023-11-12"},{"lineNumber":201,"author":{"gitId":"Gavino3o"},"content":"  * e.g. `edit s/` (empty Specialty attribute) will result in an error when trying to edit a specialist.","lastModifiedDate":"2023-10-29"},{"lineNumber":202,"author":{"gitId":"Gavino3o"},"content":"  * e.g. `edit n/` (empty Name attribute) will result in an error when trying to edit a patient or specialist.","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-29"},{"lineNumber":205,"author":{"gitId":"Gavino3o"},"content":"* `list -pa` \u003e `view 1` \u003e `edit n/John Wick` modifies the name of the first patient in the list to **John Wick**.","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"Gavino3o"},"content":"*  `find -sp t/friend` \u003e `view 3` \u003e `edit s/Surgery` modifies the specialisation of the third specialist in the list with","lastModifiedDate":"2023-11-12"},{"lineNumber":207,"author":{"gitId":"Gavino3o"},"content":"the **friend** tag to **Surgery**.","lastModifiedDate":"2023-11-12"},{"lineNumber":208,"author":{"gitId":"Gavino3o"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"vansh284"},"content":"### Deleting a patient or specialist : `delete`","lastModifiedDate":"2023-09-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"Gavino3o"},"content":"Deletes the specified patients or specialists from the stored records.","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"Gavino3o"},"content":"Format: `delete INDEX…​`","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"Gavino3o"},"content":"* Deletes all persons at the specified `INDEX…​`.","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"vansh284"},"content":"* The index **must be a positive integer** 1, 2, 3, …​ with a maximum value of the list size.","lastModifiedDate":"2023-09-26"},{"lineNumber":220,"author":{"gitId":"Gavino3o"},"content":"* The indexes must **not** contain any duplicate integers.","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"alvinlim277"},"content":"* `list -pa` followed by `delete 2` deletes the 2nd patient in the listed patients.","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"Gavino3o"},"content":"* `find -sp s/Orthopaedic` followed by `delete 2 3 4` deletes the 2nd, 3rd and 4th specialist listed in the `find` command.","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"Kokseng1"},"content":"### Undo previous entry : `undo`","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"Kokseng1"},"content":"Undo the previous command, stackable (all commands that were successfully executed previously can be continuously undone until there are no commands left to be undone).","lastModifiedDate":"2023-11-08"},{"lineNumber":229,"author":{"gitId":"Kokseng1"},"content":"The undo command is affected by all successful commands, whether they change the data or not.","lastModifiedDate":"2023-11-11"},{"lineNumber":230,"author":{"gitId":"Kokseng1"},"content":"For example, 2 successive `list -sp` commands will require 2 undos, although the second command might not produce any visible change in the user interface.","lastModifiedDate":"2023-11-11"},{"lineNumber":231,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"Kokseng1"},"content":"Format: `undo`","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"Kokseng1"},"content":"### Redo previous undo : `redo`","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"Kokseng1"},"content":"Redo the previous \u0027undo\u0027, stackable. (all commands that were undone previously can be continuously redone until there are no commands left to be redone).","lastModifiedDate":"2023-11-11"},{"lineNumber":237,"author":{"gitId":"Kokseng1"},"content":"The redo command is affected by all previous undo commands, even if the undo command does not create any visible change in the user interface.","lastModifiedDate":"2023-11-11"},{"lineNumber":238,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"Kokseng1"},"content":"Format: `redo`","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"alvinlim277"},"content":"### Adding a custom shortcut : `addsc`","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"vansh284"},"content":"Adds a shortcut mapped to a default command keyword for easier use. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":244,"author":{"gitId":"alvinlim277"},"content":"After the mapping, the new user-defined shortcut will work the same way as the command keyword, and will be preserved between user sessions.","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":246,"author":{"gitId":"alvinlim277"},"content":"A command keyword can have multiple valid shortcuts mapped to it.","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"alvinlim277"},"content":"* i.e. both `del --\u003e delete` and `rm --\u003e delete` mappings can exist concurrently.","lastModifiedDate":"2023-11-10"},{"lineNumber":248,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"alvinlim277"},"content":"A valid shortcut cannot be mapped to multiple command words at once","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"alvinlim277"},"content":"* i.e. both `e --\u003e edit` and `e --\u003e exit` mappings **cannot** exist concurrently.","lastModifiedDate":"2023-11-10"},{"lineNumber":251,"author":{"gitId":"alvinlim277"},"content":"* If such a duplicate mapping is attempted, the previous one will be overridden.","lastModifiedDate":"2023-11-10"},{"lineNumber":252,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"alvinlim277"},"content":"Format: `addsc sc/SHORTCUT kw/KEYWORD`","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"vansh284"},"content":" * `SHORTCUT` can only consist of alphanumeric characters and must contain no whitespaces.","lastModifiedDate":"2023-11-11"},{"lineNumber":255,"author":{"gitId":"alvinlim277"},"content":" * `SHORTCUT` cannot be an existing command keyword.","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"alvinlim277"},"content":" * `KEYWORD` must match an existing command keyword.","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"alvinlim277"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"alvinlim277"},"content":"* `addsc sc/del kw/delete` maps `del` to the `delete` command keyword.","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"alvinlim277"},"content":"  * i.e. `del 3` will work the same as `delete 3`.","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"alvinlim277"},"content":"### Deleting custom shortcuts : `delsc`","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"alvinlim277"},"content":"Deletes the previously user-defined shortcuts.","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"alvinlim277"},"content":"You can use `delsc` to try and delete multiple shortcut mappings at once. ","lastModifiedDate":"2023-11-10"},{"lineNumber":266,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":267,"author":{"gitId":"alvinlim277"},"content":"If some shortcut mappings you try to delete did not exist originally, ","lastModifiedDate":"2023-11-10"},{"lineNumber":268,"author":{"gitId":"alvinlim277"},"content":"DoConnek Pro will notify you while proceeding with deleting those existing shortcut mappings anyway.","lastModifiedDate":"2023-11-10"},{"lineNumber":269,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"alvinlim277"},"content":"Format: `delsc sc/SHORTCUT...​`","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"alvinlim277"},"content":"* `SHORTCUT` should match a previously user-defined shortcut.","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"alvinlim277"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"alvinlim277"},"content":"* `delsc sc/del sc/abc` when both `del` and `abc` are mapped to some command keyword will remove the previous mappings of `del` and `abc`.","lastModifiedDate":"2023-11-10"},{"lineNumber":275,"author":{"gitId":"alvinlim277"},"content":"* `delsc sc/del sc/abc` when only `del` is mapped to some command keyword will remove the previous mapping of `del`, while notifying you that `abc` was not previously mapped to anything.","lastModifiedDate":"2023-11-10"},{"lineNumber":276,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":278,"author":{"gitId":"vansh284"},"content":"### Changing the Theme : `theme`","lastModifiedDate":"2023-10-29"},{"lineNumber":279,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":280,"author":{"gitId":"alvinlim277"},"content":"Changes the theme of the application. The default theme on launch is always the dark theme.","lastModifiedDate":"2023-11-12"},{"lineNumber":281,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":282,"author":{"gitId":"vansh284"},"content":"Format: `theme TYPE`","lastModifiedDate":"2023-11-12"},{"lineNumber":283,"author":{"gitId":"vansh284"},"content":"* `TYPE` can only take the following values: `dark`, `light` (case-insensitive)","lastModifiedDate":"2023-11-12"},{"lineNumber":284,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":285,"author":{"gitId":"vansh284"},"content":"Examples:","lastModifiedDate":"2023-10-29"},{"lineNumber":286,"author":{"gitId":"vansh284"},"content":"* `theme dark` sets the application theme to the dark theme.","lastModifiedDate":"2023-10-29"},{"lineNumber":287,"author":{"gitId":"vansh284"},"content":"![img.png](images/ThemeDark.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":288,"author":{"gitId":"vansh284"},"content":"* `theme LIGHT` sets the application theme to the light theme.","lastModifiedDate":"2023-10-29"},{"lineNumber":289,"author":{"gitId":"vansh284"},"content":"![img_1.png](images/ThemeLight.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-10-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":293,"author":{"gitId":"alvinlim277"},"content":"Clears all patient and specialist entries from the stored records.","lastModifiedDate":"2023-11-10"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-10-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-10-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-10-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-10-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":303,"author":{"gitId":"vansh284"},"content":"### Recalling Recent Commands","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"vansh284"},"content":"Similar to the [CLI of Unix](https://www.osc.edu/book/export/html/3022), the CLI of DoConnek Pro provides the functionality of","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"vansh284"},"content":"recalling recent commands by pressing the \u0027up arrow\u0027 and the \u0027down arrow\u0027 on the keyboard.","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":308,"author":{"gitId":"vansh284"},"content":"DoConnek Pro maintains a history of the 20 most recent commands the user has entered.","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"vansh284"},"content":"The user can recall the 20 most recently entered commands by pressing the up arrow on the keyboard. Each press of the","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"vansh284"},"content":"up arrow cycles one command further back in the history.","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":313,"author":{"gitId":"vansh284"},"content":"If the user goes too far back in history, they can \u0027undo\u0027 an \u0027up arrow\u0027 by pressing the down arrow.","lastModifiedDate":"2023-10-25"},{"lineNumber":314,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"Kokseng1"},"content":"### Save and Load Data","lastModifiedDate":"2023-09-25"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"Kokseng1"},"content":"The patient and specialist data will automatically be saved to the device’s hard drive every time the data is updated, and will automatically be loaded when the user starts the application. The user does not need to manually save any data.","lastModifiedDate":"2023-09-25"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":321,"author":{"gitId":"vansh284"},"content":"DoConnek Pro data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":324,"author":{"gitId":"vansh284"},"content":"If your changes to the data file makes its format invalid, DoConnek Pro will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"vansh284"},"content":"**A**: Install the app in the other computer and overwrite the data folder it creates with the data folder in your previous DoConnek Pro home directory.","lastModifiedDate":"2023-11-11"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"Gavino3o"},"content":"| Action               | Format, Examples                                                                                                                                                                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"Gavino3o"},"content":"|----------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"Gavino3o"},"content":"| **Help**             | `help`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"Gavino3o"},"content":"| **Add (patient)**    | `add -pa n/NAME e/EMAIL p/PHONE_NUMBER a/AGE [m/MEDICAL_HISTORY]...​ [t/TAG]...​` \u003cbr\u003e e.g., `add -pa n/John e/johnmctavish@example.com p/12345678 a/21 m/Osteoporosis m/Rheumatoid arthritis` |","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"Gavino3o"},"content":"| **Add (specialist)** | `add -sp n/NAME e/EMAIL p/PHONE_NUMBER s/SPECIALISATION l/LOCATION [t/TAG]...​` \u003cbr\u003e e.g., `add -sp n/Jane e/janepeter@example.com p/73331515 s/Dermatologist l/Ang Mo Kio`                    |","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"Gavino3o"},"content":"| **Delete**           | `delete INDEX...​`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"vansh284"},"content":"| **Find**             | `find -PERSON_TYPE PREFIX/KEYWORD...` \u003cbr\u003e e.g., `find -pa n/James Jake p/73281193`                                                                                                            |","lastModifiedDate":"2023-11-11"},{"lineNumber":351,"author":{"gitId":"vansh284"},"content":"| **Edit**             | `edit PREFIX/KEYWORD...` \u003cbr\u003e e.g. `edit n/Jonathan Wick p/09883100`                                                                                                                           |","lastModifiedDate":"2023-11-11"},{"lineNumber":352,"author":{"gitId":"vansh284"},"content":"| **List**             | `list -PERSON_TYPE` \u003cbr\u003e e.g. `list -pa`                                                                                                                                                       |","lastModifiedDate":"2023-11-07"},{"lineNumber":353,"author":{"gitId":"Gavino3o"},"content":"| **Undo**             | `undo`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"Gavino3o"},"content":"| **Redo**             | `redo`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"Gavino3o"},"content":"| **Add shortcut**     | `addsc sc/SHORTCUT kw/KEYWORD` \u003cbr\u003e e.g., `addsc sc/del kw/delete`                                                                                                                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"vansh284"},"content":"| **Delete shortcut**  | `delsc sc/SHORTCUT...` \u003cbr\u003e e.g., `delsc sc/del sc/li`                                                                                                                                         |","lastModifiedDate":"2023-11-11"},{"lineNumber":357,"author":{"gitId":"vansh284"},"content":"| **Change Theme**     | `theme THEMETYPE` \u003cbr\u003e e.g., `theme dark`                                                                                                                                                      |","lastModifiedDate":"2023-11-11"},{"lineNumber":358,"author":{"gitId":"Gavino3o"},"content":"| **Clear**            | `clear`                                                                                                                                                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"Gavino3o"},"content":"| **Exit**             | `exit`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Kokseng1":17,"vansh284":63,"angkyakdifp":4,"Gavino3o":72,"-":132,"alvinlim277":71}},{"path":"docs/diagrams/AddCommandStringActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":":User executes command;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"if () then ([command successfully","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" executed])","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    :Add command string to CommandStringStash;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    :Move currentCmdIndex to right after the","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    last element in the CommandStringStash;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"else ([else])","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":19}},{"path":"docs/diagrams/AddShortcutActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"skinparam ArrowFontSize 13","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":":User requests to add shortcut;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"if () then ([Request parsed successfully])","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"    switch ()","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    case ([Shortcut alias already mapped])","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"        :Notify user of existing shortcut to be overwritten;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"        :Register new shortcut;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    case ([Mapping already exists])","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"        :Notify user of existing mapping;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    case ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"        :Register new shortcut;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    endswitch","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    :Show error and usage message;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"alvinlim277":24}},{"path":"docs/diagrams/AddShortcutCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"skinparam defaultFontSize 20","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"\u0027","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"participant \":AddShortcutCommandParser\" as AddShortcutCommandParser  LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"participant \"a:AddShortcutCommand\" as AddShortcutCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"participant \":ShortcutSettings\" as ShortcutSettings MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"[-\u003e LogicManager : execute\\n(\"addsc sc/del kw/delete\")","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"LogicManager -\u003e AddressBookParser : parseCommand\\n(\"addsc sc/del kw/delete\")","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"create AddShortcutCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"AddressBookParser -\u003e AddShortcutCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"activate AddShortcutCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"deactivate AddShortcutCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"AddressBookParser -\u003e AddShortcutCommandParser : parse\\n(\"sc/del kw/delete\")","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"activate AddShortcutCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"create AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommandParser -\u003e AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"activate AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommand --\u003e AddShortcutCommandParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"deactivate AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"deactivate AddShortcutCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"destroy AddShortcutCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"LogicManager -\u003e AddShortcutCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"activate AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommand -\u003e Model : registerShortcut\\n(del, delete)","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"Model -\u003e ShortcutSettings : registerShortcut\\n(del, delete)","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"activate ShortcutSettings","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"ShortcutSettings --\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"deactivate ShortcutSettings","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"Model --\u003e AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"CommandResult --\u003e AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"AddShortcutCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"deactivate AddShortcutCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"alvinlim277":78}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"if () then ([command commits ModelManager])","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    :Save ModelManager to","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    ModelManagerStateList;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kokseng1":3,"-":15}},{"path":"docs/diagrams/DeleteShortcutActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"skinparam ArrowFontSize 13","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":":User requests to remove shortcuts;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"if () then ([Request parsed successfully])","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"if () then ([Shortcuts are mapped])","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    :Remove shortcuts;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    :Notify user shortcut does not exist;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    :Show error and usage message;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"alvinlim277":21}},{"path":"docs/diagrams/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"participant \"m:FindPredicateMap\" as FindPredicateMap LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"[-\u003e LogicManager : execute(\"find -pa n/Tim m/Anaemia\")","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find -pa n/Tim m/Anaemia\")","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"create FindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"activate FindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"n/Tim m/Anaemia\")","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"activate FindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"create FindPredicateMap","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"FindCommandParser -\u003e FindPredicateMap","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"activate FindPredicateMap","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"FindPredicateMap --\u003e FindCommandParser : m","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"deactivate FindPredicateMap","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"create FindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(m, PersonType.PATIENT)","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"activate FindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"FindCommand --\u003e FindCommandParser : f","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"deactivate FindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"destroy FindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"activate FindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"FindCommand --\u003e LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"deactivate FindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Gavino3o":78}},{"path":"docs/diagrams/FindPredicateMapExample.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"title FindPredicateMap Example","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"hide members","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"object \"\u003cu\u003e:FindPredicateMap\u003c/u\u003e\" as FindPredicateMap #FFFFAA","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"object \"\u003cu\u003ep0:NameContainsKeywordPredicate\u003c/u\u003e\" as p1 {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    keywords \u003d {\"Tim\"}","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"object \"\u003cu\u003ep1:MedHistoryContainsKeywordsPredicate\u003c/u\u003e\" as p0 {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    keywords \u003d {\"Anaemia\"}","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"show p0 member","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"show p1 member","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"FindPredicateMap-down-\u003ep0","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"FindPredicateMap-down-\u003ep1","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"@end","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Gavino3o":27}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"Class ThemeProperty","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"Class CommandStringStash","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"ModelManager -right-\u003e \"1\" ThemeProperty","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"ModelManager -left-\u003e \"1\" CommandStringStash","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vansh284":4,"-":49}},{"path":"docs/diagrams/RecallCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"participant \":CommandStringStash\" as CommandStringStash MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"[-\u003e LogicManager : getPrevCommandString(input)","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"LogicManager -\u003e Model : getPrevCommandString(input)","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"Model -\u003e CommandStringStash : getPrevCommandString(input)","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"activate CommandStringStash","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"CommandStringStash --\u003e Model : commandString","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"deactivate CommandStringStash","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"Model --\u003e LogicManager : commandString","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"[\u003c--LogicManager : commandString","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":32}},{"path":"docs/diagrams/RecallStep1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"title Initial state","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"show members","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003e:CommandStringStash\u003c/u\u003e\" as CommandStringStash #FFFFAA {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    currentCmdIndex \u003d 0","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":15}},{"path":"docs/diagrams/RecallStep2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"title After command \"list - sp\"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"show members","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003e:CommandStringStash\u003c/u\u003e\" as CommandStringStash #FFFFAA {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    currentCmdIndex \u003d 1","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand0:String\u003c/u\u003e\" as cmd0 {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    value \u003d \"list - sp\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"CommandStringStash -down-\u003ecmd0","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":21}},{"path":"docs/diagrams/RecallStep3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"title After commands \"help\" and \"delete 1\"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"show members","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003e:CommandStringStash\u003c/u\u003e\" as CommandStringStash #FFFFAA {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    currentCmdIndex \u003d 3","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand0:String\u003c/u\u003e\" as cmd0 {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    value \u003d \"list - sp\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand1:String\u003c/u\u003e\" as cmd1 {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    value \u003d \"help\"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand2:String\u003c/u\u003e\" as cmd2 {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    value \u003d \"delete 1\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"CommandStringStash -down-\u003ecmd0","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd1","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd2","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":31}},{"path":"docs/diagrams/RecallStep4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"title After single up arrow press","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"show members","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003e:CommandStringStash\u003c/u\u003e\" as CommandStringStash #FFFFAA {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    currentCmdIndex \u003d 2","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand0:String\u003c/u\u003e\" as cmd0 {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    value \u003d \"list - sp\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand1:String\u003c/u\u003e\" as cmd1 {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    value \u003d \"help\"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand2:String\u003c/u\u003e\" as cmd2 {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    value \u003d \"delete 1\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"CommandStringStash -down-\u003ecmd0","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd1","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd2","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":31}},{"path":"docs/diagrams/RecallStep5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"title After two up arrow presses","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"show members","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003e:CommandStringStash\u003c/u\u003e\" as CommandStringStash #FFFFAA {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    currentCmdIndex \u003d 1","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand0:String\u003c/u\u003e\" as cmd0 {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    value \u003d \"list - sp\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand1:String\u003c/u\u003e\" as cmd1 {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    value \u003d \"help\"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand2:String\u003c/u\u003e\" as cmd2 {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    value \u003d \"delete 1\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"CommandStringStash -down-\u003ecmd0","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd1","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd2","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":31}},{"path":"docs/diagrams/RecallStep6.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"title After down arrow press","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"show members","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003e:CommandStringStash\u003c/u\u003e\" as CommandStringStash #FFFFAA {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    currentCmdIndex \u003d 2","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand0:String\u003c/u\u003e\" as cmd0 {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    value \u003d \"list - sp\"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand1:String\u003c/u\u003e\" as cmd1 {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    value \u003d \"help\"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"object \"\u003cu\u003ecommand2:String\u003c/u\u003e\" as cmd2 {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    value \u003d \"delete 1\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"CommandStringStash -down-\u003ecmd0","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd1","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"CommandStringStash-down-\u003ecmd2","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":28}},{"path":"docs/diagrams/ShortcutSettingsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"Class AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"Class ModelManager","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"Class UserPrefs","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"Class ShortcutSettings","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"Class GuiSettings","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"AddressBookParser -[LOGIC_COLOR]right-\u003e \"1\" ModelManager","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"UserPrefs *-up-\u003e \"1\" ShortcutSettings","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"UserPrefs *-down-\u003e \"1\" GuiSettings","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"alvinlim277":20}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"Class ViewPersonPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"MainWindow *-down-\u003e \"1\" ViewPersonPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"ViewPersonPanel --|\u003e UiPart","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"PersonListPanel -[hidden]left- ViewPersonPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"angkyakdifp":4,"-":60}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    class State1 as \"\u003cu\u003emm0:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kokseng1":1,"-":14}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    class State1 as \"\u003cu\u003emm0:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    class State2 as \"\u003cu\u003emm1:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kokseng1":2,"-":17}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"title After command \"add -pa n/David\"","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    class State1 as \"\u003cu\u003emm0:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    class State2 as \"\u003cu\u003emm1:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    class State3 as \"\u003cu\u003emm2:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kokseng1":4,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    class State1 as \"\u003cu\u003emm0:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    class State2 as \"\u003cu\u003emm1:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    class State3 as \"\u003cu\u003emm2:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kokseng1":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"title After command \"list -pa\"","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    class State1 as \"\u003cu\u003emm0:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    class State2 as \"\u003cu\u003emm1:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    class State3 as \"\u003cu\u003emm3:ReadOnlyModelManager\u003c/u\u003e\"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"note right on link: State mm2 deleted.","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kokseng1":6,"-":16}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"UndoCommand -\u003e Model : undo()","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"Model -\u003e ModelManager : undo()","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"activate ModelManager","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"ModelManager -\u003e ModelManager :resetData(ReadOnlyModelManager)","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"activate ModelManager MODEL_COLOR_T3","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"ModelManager --\u003e ModelManager","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"deactivate ModelManager","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"ModelManager --\u003e Model :","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"deactivate ModelManager","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kokseng1":10,"-":47}},{"path":"docs/diagrams/UpArrowActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":":User presses up arrow;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":":Decrement currentCmdIndex;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"if () then ([currentCmdIndex points","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"to valid command string])","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    :return the command string","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    pointed to by currentCmdIndex ;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"else ([else])","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    :return the command string","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    currently in the CLI textbox ;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"vansh284":21}},{"path":"docs/diagrams/ViewActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":":User inputs view command;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"if () then ([command commits AddressBook])","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    :view command executed;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    :UI update the ViewPersonPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"              in the main window;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"angkyakdifp":18}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"[-\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"create ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"create ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"ViewCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"destroy ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"ViewCommand -\u003e Model : updateSelectedPerson(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"angkyakdifp"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"angkyakdifp":70}},{"path":"docs/diagrams/ViewState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"title Initial state","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"package List {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"    class Person1 as \"\u003cu\u003ep1:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"    class Person2 as \"\u003cu\u003ep2:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    class Person3 as \"\u003cu\u003ep3:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"Person1 -[hidden]right-\u003e Person2","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"Person2 -[hidden]right-\u003e Person3","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"hide Person2","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"hide Person3","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"class Pointer as \"Current Selected Person\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"Pointer -up-\u003e Person1","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"angkyakdifp":21}},{"path":"docs/diagrams/ViewState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"title After command \"view 2\"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"package List {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"    class Person1 as \"\u003cu\u003ep1:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"    class Person2 as \"\u003cu\u003ep2:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    class Person3 as \"\u003cu\u003ep3:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"Person1 -[hidden]right-\u003e Person2","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"Person2 -[hidden]right-\u003e Person3","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"hide Person2","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"hide Person3","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"class Pointer as \"Current Selected Person\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"Pointer -up-\u003e Person2","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"angkyakdifp":21}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"skinparam Object {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    FontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    FontName Arial","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vansh284":5,"-":79}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"title: DoConnek Pro","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"**DoConnek Pro is a desktop app that helps General Practitioner Clinic Management Staff manage their contact information for patients and specialists**. It is optimized for **Command Line Interface (CLI) users** while having a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"* If you are interested in using DoConnek Pro, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"* If you are interested about developing DoConnek Pro, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"* Some code snippets adapted from AI output.","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"Gavino3o":4,"-":15,"alvinlim277":1}},{"path":"docs/team/alvinlim277.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"title: Lim Jun Han, Alvin Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"### Overview:","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"DoConnek Pro offers General Practitioner Clinic Management Staff an efficient desktop application for organizing patient and specialist contact details. ","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"Designed to cater to Command Line Interface (CLI) enthusiasts while also featuring an intuitive Graphical User Interface (GUI), it enables swift execution of routine tasks.","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"- **Code Contributed:**","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"  [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dalvinlim277\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"- **New Feature: Added functionality allowing users to define their own shortcuts for command keywords**","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"  - What it does: allows users to define shortcut aliases for any existing command offered by DoConnek Pro.","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"  - Justification: this feature improves the user experience by allowing them to personalise the application to suit their needs, especially if they are used to other command keywords from other CLI interfaces they might be familiar with.","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"  - Highlights: this feature risked introducing unecessary dependencies so some consideration of alternatives had to be done to pick the most non-intrusive implementation.","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    - Did the initial separation of display for `Patients` and `Specialists` (Pull request [#62](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/62))","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    - Made `location` field specific to `Specialists` (Pull request [#73](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/73))","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    - Made `find` command work with substring search (Pull request [#88](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/88))","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    - **User Guide:** ","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"      - Added documentation for the `addsc` and `delsc` commands.","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"      - Updated documentation for new `find` command behaviour.","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    - **Developer Guide:**","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"      - Added developer documentation for the shortcuts feature.","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"      - Created all the UML diagrams used to document the shortcut feature.","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    - Updated the README and site-wide settings.","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"    - Created milestone for v1.1.","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    - Helped maintain the issue tracker.","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    - Helped to devise implementation for `find` command [(link to branch)](https://github.com/alvinlim277/tp/tree/feature-FindCommandUsage),","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"  which was later adapted for the project (Pull Request [#66](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/66)).","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    - Pull Requests reviewed (with non-trivial comments): [#52](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/52), [#58](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/58), ","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"  [#64](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/64), [#66](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/66), [#72](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/72),","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"  [#75](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/75), [#95](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/95), [#102](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/102),","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"  [#105](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/105)","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"alvinlim277":42}},{"path":"docs/team/angkyakdifp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"title: Angky Akdi Frandy Putrakelana Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"### Overview:","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"DoConnek Pro offers General Practitioner Clinic Management Staff an efficient desktop application ","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"for organizing patient and specialist contact details. Designed to cater to Command Line Interface ","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"(CLI) enthusiasts while also featuring an intuitive Graphical User Interface (GUI), it enables swift ","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"execution of routine tasks.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"- **Code Contributed:** [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dangkyakdifp\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    - Added a new \u0027view\u0027 command","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"      - What it does: Allows the user to view the specified patient or specialist details in the larger panel","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"      - Justification: This feature enhances user experience by providing a detailed and focused view of patient ","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"      or specialist information. By displaying specific details in a larger panel, users can quickly assess relevant ","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"      information without navigating through multiple screens or sections.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"      - Highlights: Various bugs can happen in a lot of cases, such as deleting a person does not make the panel change.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"    - Modifying UI","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"      - What it does: Modifies the user interface by transforming the single panel row card into a dual-panel layout.","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"      - Justification: This enhancement significantly improves the user experience and workflow efficiency. ","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"      By adopting a dual-panel layout, the UI enables users to perform searches and access detailed information ","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"      in a seamless manner. ","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"      - Highlights: Modifying the code often leads to margin and font errors, creating inconsistencies in the ","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"      layout and visual elements.Passing arguments to the FXML panel also create a lot of mistake. Incorrectly ","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"      passed arguments can lead to unexpected behavior, making it challenging to identify and resolve issues in ","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"      the code logic.","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"  - **User Guide:","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    - Added documentations for Quick Start","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"    - Added some constraint for the add command.","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"  - **Developer Guide:**","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"    - Added developer documentation for the view commands, including the UML Diagram.","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    - Modify the UML Diagram for the UI","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"  - Helped maintain issue.","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"  - Helped rename the Jar release","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"  - Helped in manual testing of newly implemented enhancements and features developed by team members.","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"  - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/95","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"  - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/77","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"angkyakdifp":47}},{"path":"docs/team/gavino3o.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"title: Gavin Chiam Xiang Zhe Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"### Overview:","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"DoConnek Pro offers General Practitioner Clinic Management Staff an efficient desktop application for organizing patient and specialist contact details.","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"Designed to cater to Command Line Interface (CLI) enthusiasts while also featuring an intuitive Graphical User Interface (GUI), it enables swift execution of routine tasks.","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"- **Code Contributed:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"  - [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dGavino3o\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"  - Added a new `find` command ","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    - What it does: Allows the user to search for patient or specialist records by their unique or common attributes.","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    - Justification: This feature allows users to find patient or specialist records quickly without the need of relying on the scroll bar of the GUI. This can greatly enhance the user experience and speed up user workflow.","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    - Highlights: This feature required detailed and careful analysis for proper solution architecture. Numerous edge cases were needed to be considered and handled accordingly. The initial design choice was later modified in a later pull request which allowed for easier extension and testing.","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    - Credits: Assisted by team member Alvin Lim in the design and implementation of the solution.","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"  - Modified `delete` command to allow for mass deletion","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    - What it does: The newly enhanced `delete` command can take in multiple indexes and delete multiple patient or specialist records at once. The previous implementation only allowed for deletion of records by a single index. ","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    - Justification: This feature aids users in organising their patient or specialist records by allowing them to delete multiple invalid or redundant records at once, instead of deleting one by one. Greatly enhancing user experience.","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    - Highlights: Various edge cases were considered as improper implementation can result in incorrect deletion of records and wrong command result messages.","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"  - Modified `edit` command to edit records in view panel","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    - What it does: The new `edit` command edits records in the view panel instead of editing records by index in the persons list.","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    - Justification: With the addition of the new view panel, users can now view patient or specialist records in more detail in another panel. Editing records in the view panel is more intuitive for overall user workflow.","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    - Highlights: Refactored old `view` command code implementation for better code quality and extensibility.","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"- **Contributions to Documentation:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"  - **User Guide**:","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    - Added documentation for the `list`, `find`, `delete` and `edit` commands.","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    - Fixed and tidied wrong user guide information throughout document.","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    - Updated images for newly implemented UI and URLs.","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"  - **Developer Guide:** ","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    - Added developer documentation for the new `find` command implementation.","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    - Created all UML diagrams used to document the new `find` command implementation.","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"- **Contributions to team-based tasks:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"  - Managed and wrapped up the release for v1.3.","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"  - Helped maintain the issue and PR trackers.","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"  - Helped in manual testing of newly implemented enhancements and features developed by team members.","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"  - Update index.md.","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"- **Review/mentoring contributions:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"  - Pull Request reviewed (with non-trivial review comments):","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/159","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/111","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/93","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/88","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/76","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    - https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/62","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Gavino3o":52}},{"path":"docs/team/kokseng1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"title: Ng Kok Seng Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"### Overview:","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"DoConnek Pro offers General Practitioner Clinic Management Staff an efficient desktop application for organizing patient and specialist contact details. Designed to cater to Command Line Interface (CLI) enthusiasts while also featuring an intuitive Graphical User Interface (GUI), it enables swift execution of routine tasks.","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"- **Code Contributed:**","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"  [RepoSense Link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkokseng1\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"- **Feature implemented: undo/redo command** [PR link](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/158)","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"  - Undo : lets users undo their most recent valid commands, in case of any errors","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"  - Redo : lets users redo their most recent undo command","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"- Enhancement implemented: Added `Specialty` as a field for specialists [PR link](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/60)","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    - **User Guide:** Added documentation for undo/redo command and save/load data.","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    - **Developer Guide:** ","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"      - Updated undo/redo documentation to reflect new implementation of undo/redo, including UML diagrams.","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"      - Added \"add a patient\" use case.","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"      - Added patient management user stories","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    - [1.4 bug fixes](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/160)","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    - [Recall recent commands feature](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/90)","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    - [Improve find command flexibility](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/88)","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    - [Enable Medical History field to be optional and multiple value](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/76)","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    - [Add \u0027exit program\u0027 use case in Developer Guide](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/42)","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"Kokseng1":31}},{"path":"docs/team/vansh284.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"title: Vansh Nath\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"### Overview","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"DoConnek Pro offers General Practitioner Clinic Management Staff an efficient desktop application for organizing patient and specialist contact details. Designed to cater to Command Line Interface (CLI) enthusiasts while also featuring an intuitive Graphical User Interface (GUI), it enables swift execution of routine tasks.","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"- **Code Contributed:** [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dvansh284\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"- **New Feature**: Added functionality allowing users to recall recent commands executed.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"  - What it does: allows the user to cycle through the history of commands they executed using the up and down arrows.","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"  - Justification: this feature improves user experience greatly since it eliminates the need for users to retype commands that they recently executed. Users often need to execute same or similar commands multiple times some of which may be significantly long to type out, so the application should provide a convenient way for them to repeat these commands.","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"  - Highlights: This feature required quite a bit of analysis of design alternatives. The initial design choice for this feature was overwritten by a later pull request as a neater implementation was found.","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"  - Credits: Idea inspired by the unix terminal \u0027up arrow\u0027 and \u0027down arrow\u0027 which provides similar functionality.","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"- **New Feature**: Added  a theme command that allows users to change the application theme.","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"  - What it does: allows the user to type in a command that changes the theme of the application.","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"  - Justification: this features enhances the application by allowing users to personalise the application to their color preferences. This improves the overall experience for users of the application.","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"  - Highlights: This feature required designing of two distinct GUI color schemes that would be visually appealing to users.","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    - Adapted AddressBook Level 3 to this application by separating parsing of patient and specialist commands and separating handling of patients and specialists in the address book.","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    - Added the \u0027age\u0027 field to patients in the address book.","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    - **User Guide:**","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"      - Added documentation for the `delete` and `theme` command.","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"      - Added documentation for the recall recent commands feature.","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    - **Developer Guide:** ","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"      - Added details of the non-functional requirements","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"      - Added developer documentation for the recall recent commands feature. ","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"      - Created all the UML diagrams under the recall recent commands feature.","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    - Set up the GitHub team org/repo.","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    - Managed the release for v1.2 and v1.3.","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    - Helped maintain the issue tracker.","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    - Documented target user profile and value proposition in developer guide.","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"- **Community:**","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    - Pull Requests reviewed (with non-trivial review comments): [#117](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/117), [#103](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/103), [#92](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/92), [#81](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/81), [#77](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/77), [#73](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/73), [#62](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/62), [#60](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/60).","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    - Helped teammate fix bug in his Pull Request: [#158](https://github.com/AY2324S1-CS2103T-W13-1/tp/pull/158).","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"vansh284":43}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Gavino3o":1,"-":185}},{"path":"src/main/java/seedu/address/commons/core/ShortcutSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.CommandWord;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ShortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" * A Serializable class that contains the shortcut settings.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":" * A shortcut is an alias that a user can assign to an existing command word so that the alias will be parsed as if","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":" * it is the command word.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"public class ShortcutSettings implements Serializable {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private final LinkedHashMap\u003cString, String\u003e shortcutMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * Constructs a {@code GuiSettings} with a default empty shortcut mapping.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    public ShortcutSettings() {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        shortcutMap \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"     * Constructs a {@code ShortcutSettings} with the specified shortcut mapping.","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    public ShortcutSettings(LinkedHashMap\u003cString, String\u003e shortcutMap) {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        this.shortcutMap \u003d shortcutMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"     * Registers the new mapping.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"     * @param shortcutAlias New alias for an existing command word","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"     * @param commandWord The command word to be mapped to the alias","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"     * @return The alias\u0027 previously mapped command word if any, else returns null.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"    public String registerShortcut(ShortcutAlias shortcutAlias, CommandWord commandWord) {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        return shortcutMap.put(shortcutAlias.alias, commandWord.keyword);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"     * Removes the shortcut mapping.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"     * @param shortcutAlias Alias for an existing command word","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"     * @return The alias\u0027 previously mapped command word if any, else returns null.","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    public String removeShortcut(ShortcutAlias shortcutAlias) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        return shortcutMap.remove(shortcutAlias.alias);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"     * Checks if the alias has a mapping registered and returns it if found.","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"     * @param alias Query alias","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"     * @return Registered command word if found, else given alias","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    public String getShortcut(String alias) {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        return shortcutMap.getOrDefault(alias, alias);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"     * Cleans up bad mappings from the shortcutMap.","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"     * Duplicate keys are handled automatically.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"    public ShortcutSettings removeBadMappings() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"        // Use of Iterator in solution inspired by AI tool output","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d shortcutMap.entrySet().iterator();","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"            Map.Entry\u003cString, String\u003e mapping \u003d iterator.next();","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"            String shortcut \u003d mapping.getKey();","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"            String keyword \u003d mapping.getValue();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"            if (!ShortcutAlias.isValidShortcutAlias(shortcut)","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"                    || !CommandWord.isValidCommandWord(keyword)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"                iterator.remove();","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"    public ShortcutSettings getCopy() {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        return new ShortcutSettings(new LinkedHashMap\u003c\u003e(shortcutMap));","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"    public void setShortcutSettings(ShortcutSettings shortcutSettings) {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"        this.shortcutMap.clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"        this.shortcutMap.putAll(shortcutSettings.shortcutMap);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof ShortcutSettings)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"        ShortcutSettings otherShortcutSettings \u003d (ShortcutSettings) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"        return Objects.equals(shortcutMap, otherShortcutSettings.shortcutMap);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"                .add(\"shortcutMappings\", shortcutMap)","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"                .toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"Kokseng1":9,"alvinlim277":101}},{"path":"src/main/java/seedu/address/commons/core/ThemeProperty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import javafx.beans.property.Property;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * Represents a custom property for managing the theme of an application.","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class ThemeProperty implements Property\u003cTheme\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    private final SimpleObjectProperty\u003cTheme\u003e delegate \u003d new SimpleObjectProperty\u003c\u003e(Theme.DARK);","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    public void bind(ObservableValue\u003c? extends Theme\u003e observable) {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        delegate.bind(observable);","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    public void unbind() {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        delegate.unbind();","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    public boolean isBound() {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        return delegate.isBound();","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public void bindBidirectional(Property\u003cTheme\u003e other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        delegate.bindBidirectional(other);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    public void unbindBidirectional(Property\u003cTheme\u003e other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        delegate.unbindBidirectional(other);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    public Object getBean() {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        return delegate.getBean();","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    public String getName() {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        return delegate.getName();","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    public void addListener(ChangeListener\u003c? super Theme\u003e listener) {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        delegate.addListener(listener);","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        delegate.addListener(listener);","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    public void removeListener(ChangeListener\u003c? super Theme\u003e listener) {","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        delegate.removeListener(listener);","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        delegate.removeListener(listener);","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    public Theme getValue() {","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        return delegate.getValue();","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"    public void setValue(Theme value) {","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"        delegate.setValue(value);","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"    public ThemeProperty getCopy() {","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"        ThemeProperty newTheme \u003d new ThemeProperty();","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        newTheme.setValue(this.getValue());","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"        return newTheme;","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"Kokseng1":5,"vansh284":80}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"    public int compareTo(Index o) {","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"        return this.zeroBasedIndex - o.zeroBasedIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Gavino3o":6,"-":68}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if the words in {@code sentence} contains the {@code substring}.","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"     *   Ignores case and a full word match is not required.","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"     *       wordsContainSubstringIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"     *       wordsContainSubstringIgnoreCase(\"ABc def\", \"De\") \u003d\u003d true","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"     *       wordsContainSubstringIgnoreCase(\"ABc def\", \"c de\") \u003d\u003d false //only searches for substrings within words","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"     * @param substring cannot be null, cannot be empty","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"    public static boolean wordsContainSubstringIgnoreCase(String sentence, String substring) {","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(substring);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        String preppedWord \u003d substring.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Substring parameter cannot be empty\");","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"                .anyMatch(sentenceWord -\u003e sentenceWord.toLowerCase().contains(preppedWord.toLowerCase()));","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"     * Adds specified String to the end of the toString return while keeping the format constant","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"     * @param stringToAdd string to be added","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"     * @param originalToString string to be added to","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"     * @return String consistent with Person#toString() format","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"    public static String addFieldToPersonToString(String stringToAdd, String originalToString) {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(originalToString);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"        int insertIndex \u003d originalToString.length() - 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        stringBuilder.insert(insertIndex, stringToAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"        return (stringBuilder.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kokseng1":15,"-":68,"alvinlim277":25}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.core.ShortcutSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"    /** Returns a person that is selected*/","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    Person getSelectedPerson();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"    /** Update the selected person*/","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"    void updateSelectedPerson(Person person);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"     * Returns the user prefs\u0027 shortcut settings.","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"    ShortcutSettings getShortcutSettings();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"     * Sets the user prefs\u0027 shortcut settings.","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"    void setShortcutSettings(ShortcutSettings shortcutSettings);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"     * Returns the command string of the next most recent command executed.","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"    String getPrevCommandString(String currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"     * Returns the command string of the previous most recent command executed.","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"    String getPassedCommandString(String currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"     * Adds the most recent command string input by the user to the CommandStringStash.","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    void addCommandString(String commandString);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"     * Sets the current theme of the application to be {@code theme}","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"    void setTheme(Theme theme);","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"     * Adds @code{changeListener} as an observer to the application theme.","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    void addThemeListener(ChangeListener\u003c? super Theme\u003e changeListener);","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"vansh284":26,"angkyakdifp":5,"-":51,"alvinlim277":12}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.core.ShortcutSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        addressBookParser \u003d new AddressBookParser(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"    public Person getSelectedPerson() {","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"        return model.getSelectedPerson();","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"angkyakdifp"},"content":"    public void updateSelectedPerson(Person person) {","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"angkyakdifp"},"content":"        model.updateSelectedPerson(person);","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"    public ShortcutSettings getShortcutSettings() {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"        return model.getShortcutSettings();","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"    public void setShortcutSettings(ShortcutSettings shortcutSettings) {","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"alvinlim277"},"content":"        model.setShortcutSettings(shortcutSettings);","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"    public String getPrevCommandString(String currentCommandString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":"        return model.getPrevCommandString(currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"    public String getPassedCommandString(String currentCommandString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"        return model.getPassedCommandString(currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"    public void addCommandString(String commandString) {","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"        model.addCommandString(commandString);","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"    public void setTheme(Theme theme) {","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"        model.setTheme(theme);","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"    public void addThemeListener(ChangeListener\u003c? super Theme\u003e changeListener) {","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"        model.addThemeListener(changeListener);","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vansh284":27,"angkyakdifp":8,"-":89,"alvinlim277":14}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_BLANK_ARGUMENTS \u003d \"Arguments cannot be blank! \\n%1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_INVALID_PERSON_TYPE \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"            \"Invalid person type! Specify either \\\"-pa\\\" for patient or \\\"-sp\\\" for specialist\";","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_PERSON_TYPE_MISMATCH_INDEX \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            \"The person type tag does not match the person type at the specified index.\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public static final String MESSAGE_ERROR_STATE \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"            \"Something went wrong :( \\n Please contact the developers via email or website.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    public static final String MESSAGE_DUPLICATE_INDEXES \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"            \"The following index(es) has been duplicated: \";","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"     * Returns an error message indicating the duplicate indexes.","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    public static String getErrorMessageForDuplicateIndexes(String[] duplicatedIndexes) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"        assert duplicatedIndexes.length \u003e 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        return MESSAGE_DUPLICATE_INDEXES + String.join(\", \", duplicatedIndexes);","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"            Patient patient \u003d (Patient) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"            builder.insert(0, \"Patient: \")","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"                    .append(\"; Age: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"                    .append(patient.getAge())","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"                    .append(\"; Medical History: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"                    .append(patient.getMedicalHistory());","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"        if (person instanceof Specialist) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"            Specialist specialist \u003d (Specialist) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            builder.insert(0, \"Specialist: \")","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"                    .append(\"; Specialty: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"                    .append(specialist.getSpecialty());","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"     * Formats a shorten form of {@code person} for display to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"     * Displays the {@code Name}, {@code Email} and {@code PersonType} of the person.","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"    public static String formatShortForm(Person person) {","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"        final StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"        result.append(person.getName()).append(\"; Phone: \").append(person.getPhone());","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"            result.insert(0, \"Patient: \");","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"        if (person instanceof Specialist) {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"            result.insert(0, \"Specialist: \");","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"        return result.toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":16,"vansh284":4,"Gavino3o":30,"-":48,"alvinlim277":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_USAGE_GENERAL \u003d \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \";","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"    private static final String PERSON_EXAMPLE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"            PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_PATIENT \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"            + \": Adds a patient to the address book. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_MEDICALHISTORY + \"MEDICAL HISTORY]... \\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"            + PREFIX_AGE + \"30 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"            + PREFIX_MEDICALHISTORY + \"Osteoporosis\";","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_SPECIALIST \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"            + \": Adds a specialist to the address book. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_LOCATION + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"Physiotherapist \";","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"        if (toAdd instanceof Patient) {","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"            model.updateFilteredPersonList(PersonType.PATIENT.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"            model.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":29,"vansh284":2,"angkyakdifp":2,"Gavino3o":1,"-":74,"alvinlim277":10}},{"path":"src/main/java/seedu/address/logic/commands/AddShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_WORD;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":" * Adds a shortcut to the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"public class AddShortcutCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    public static final String COMMAND_WORD \u003d \"addsc\";","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New shortcut added: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"That shortcut already exists: %1$s;\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_REPLACED \u003d \"Old shortcut %1$s was removed as a result.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"            + \": Registers the shortcut to the valid command keyword for future use.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_SHORTCUT + \"SHORTCUT \"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_COMMAND_WORD + \"KEYWORD\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_SHORTCUT + \"del \"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_COMMAND_WORD + DeleteCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    private final ShortcutAlias shortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    private final CommandWord command;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"     * Creates an AddShortcutCommand to add the specified shortcut mapping.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"    public AddShortcutCommand(ShortcutAlias shortcutAlias, CommandWord commandWord) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        requireAllNonNull(shortcutAlias, commandWord);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        this.shortcutAlias \u003d shortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        this.command \u003d commandWord;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        String feedback \u003d model.registerShortcut(shortcutAlias, command);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        if (feedback \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"            // Completely new mapping","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            model.commit();","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, shortcutAlias + \" --\u003e \" + command));","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        } else if (feedback.equals(command.keyword)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"            // A duplicate mapping was replaced","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"            return new CommandResult(String.format(MESSAGE_DUPLICATE, shortcutAlias + \" --\u003e \" + command));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"            // A non-duplicate mapping was replaced","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            model.commit();","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"                    String.format(MESSAGE_SUCCESS, shortcutAlias + \" --\u003e \" + command)","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"                            + \"\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"                            + String.format(MESSAGE_REPLACED, shortcutAlias + \" --\u003e \" + feedback)","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"            );","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof AddShortcutCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand otherAddShortcutCommand \u003d (AddShortcutCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"        return shortcutAlias.equals(otherAddShortcutCommand.shortcutAlias)","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"                \u0026\u0026 command.equals(otherAddShortcutCommand.command);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"                .add(\"shortcutAlias\", shortcutAlias)","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"                .add(\"command\", command)","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":3,"alvinlim277":82}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandWord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Represents a default command keyword.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCommandWord(String)}","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public class CommandWord {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"            \"Command word has to be a valid default command word!\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"                    + \"Input \u0027help\u0027 to view our UserGuide and a list of commands available.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    private static final String[] VALID_COMMAND_WORDS \u003d {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        AddCommand.COMMAND_WORD, AddShortcutCommand.COMMAND_WORD, ClearCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        DeleteCommand.COMMAND_WORD, DeleteShortcutCommand.COMMAND_WORD, EditCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        ExitCommand.COMMAND_WORD, FindCommand.COMMAND_WORD, HelpCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"        ListCommand.COMMAND_WORD, UndoCommand.COMMAND_WORD, RedoCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        ThemeCommand.COMMAND_WORD, ViewCommand.COMMAND_WORD","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    };","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    public final String keyword;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"     * Constructs a {@code CommandWord}.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"     * @param word A valid command keyword.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    public CommandWord(String word) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(word);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        keyword \u003d word;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if a given string is a valid command word.","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"    public static boolean isValidCommandWord(String test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        return Arrays.asList(VALID_COMMAND_WORDS).contains(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        return keyword;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof CommandWord)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        CommandWord otherName \u003d (CommandWord) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"        return keyword.equals(otherName.keyword);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        return keyword.hashCode();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"alvinlim277":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"            + \": Deletes the person identified by the index number(s) used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"            + \"Parameters: INDEX... (must be a positive integer and within range of displayed person list)\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"            + \"INDEX... must be whitespace separated and must not contain duplicates\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"            + \"1 3 4\";","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS_HEADER \u003d \"Deleted %d Person(s):\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"     * @param targetIndexes of the persons in the list to delete","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        for (Index targetIndex: targetIndexes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        StringBuilder resultMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"                new StringBuilder(String.format(MESSAGE_DELETE_PERSON_SUCCESS_HEADER, targetIndexes.size()));","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        for (int i \u003d 0; i \u003c targetIndexes.size(); i++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"            Index targetIndex \u003d targetIndexes.get(i);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"            resultMessage.append(String.format(\"\\n%1$d. %2$s\", i + 1,","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"                            Messages.formatShortForm(personToDelete)));","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        for (int i \u003d targetIndexes.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"            Index targetIndex \u003d targetIndexes.get(i);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        return new CommandResult(resultMessage.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        return targetIndexes.equals(otherDeleteCommand.targetIndexes);","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"                .add(\"targetIndexes\", targetIndexes)","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":1,"Gavino3o":24,"vansh284":3,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/DeleteShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" * Deletes a shortcut from the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"public class DeleteShortcutCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    public static final String COMMAND_WORD \u003d \"delsc\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Shortcut removed: %1$s\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_NONEXISTENT \u003d \"This shortcut was not previously registered: %1$s\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"            + \": Deletes the previously registered shortcut(s).\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_SHORTCUT + \"SHORTCUT...\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_SHORTCUT + \"del \"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_SHORTCUT + \"li \";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    private final List\u003cShortcutAlias\u003e shortcutAliasList;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"     * Creates a DeleteShortcutCommand to remove the specified shortcut mapping.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"    public DeleteShortcutCommand(List\u003cShortcutAlias\u003e shortcutAlias) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(shortcutAlias);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        this.shortcutAliasList \u003d shortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        shortcutAliasList.forEach(shortcutAlias -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"            String feedback \u003d model.removeShortcut(shortcutAlias);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"            if (feedback \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"                message.append(String.format(MESSAGE_NONEXISTENT, shortcutAlias));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"                message.append(String.format(MESSAGE_SUCCESS, shortcutAlias + \" --\u003e \" + feedback));","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        return new CommandResult(message.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof DeleteShortcutCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand otherDeleteShortcutCommand \u003d (DeleteShortcutCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        return shortcutAliasList.equals(otherDeleteShortcutCommand.shortcutAliasList);","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"                .add(\"shortcutAliasList\", shortcutAliasList)","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":2,"alvinlim277":73}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_USAGE_GENERAL \u003d \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \";","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    private static final String PERSON_EXAMPLE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_PATIENT \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"            + \": Edit a patient in the address book.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_AGE + \"AGE] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_MEDICALHISTORY + \"MEDICAL HISTORY]... \\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"30 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_MEDICALHISTORY + \"Osteoporosis\";","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_SPECIALIST \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"            + \": Edit a specialist in the address book. \\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_SPECIALTY + \"SPECIALTY] \\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_LOCATION + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"Physiotherapist \";","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"    public EditCommand(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"        if (editPersonDescriptor instanceof EditPatientDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"            this.editPersonDescriptor \u003d new EditPatientDescriptor((EditPatientDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"            this.editPersonDescriptor \u003d new EditSpecialistDescriptor((EditSpecialistDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"        Person personToEdit \u003d model.getSelectedPerson();","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"        Person editedPerson;","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"        if (personToEdit instanceof Patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"            if (!(editPersonDescriptor instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"                throw new CommandException(Messages.MESSAGE_PERSON_TYPE_MISMATCH_INDEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"            editedPerson \u003d createEditedPatient((Patient) personToEdit,","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"                    (EditPatientDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"            if (!(editPersonDescriptor instanceof EditSpecialistDescriptor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"                throw new CommandException(Messages.MESSAGE_PERSON_TYPE_MISMATCH_INDEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"            editedPerson \u003d createEditedSpecialist((Specialist) personToEdit,","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"                    (EditSpecialistDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(editedPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"        Age updatedAge \u003d editPatientDescriptor.getAge().orElse(patientToEdit.getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"angkyakdifp"},"content":"        Set\u003cMedicalHistory\u003e updatedMedicalHistory \u003d editPatientDescriptor.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"angkyakdifp"},"content":"                .orElse(patientToEdit.getMedicalHistory());","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"alvinlim277"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedTags, updatedAge,","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"                updatedMedicalHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"     * Creates and returns a {@code Specialist} with the details of {@code specialistToEdit}","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"vansh284"},"content":"     * edited with {@code editSpecialistDescriptor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"    private static Specialist createEditedSpecialist(Specialist specialistToEdit,","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"                                                     EditSpecialistDescriptor editSpecialistDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"        assert specialistToEdit !\u003d null;","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"vansh284"},"content":"        Name updatedName \u003d editSpecialistDescriptor.getName().orElse(specialistToEdit.getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"        Phone updatedPhone \u003d editSpecialistDescriptor.getPhone().orElse(specialistToEdit.getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"vansh284"},"content":"        Email updatedEmail \u003d editSpecialistDescriptor.getEmail().orElse(specialistToEdit.getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"alvinlim277"},"content":"        Location updatedLocation \u003d editSpecialistDescriptor.getLocation().orElse(specialistToEdit.getLocation());","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"        Set\u003cTag\u003e updatedTags \u003d editSpecialistDescriptor.getTags().orElse(specialistToEdit.getTags());","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"Kokseng1"},"content":"        Specialty updatedSpecialty \u003d editSpecialistDescriptor.getSpecialty().orElse(specialistToEdit.getSpecialty());","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":159,"author":{"gitId":"alvinlim277"},"content":"        return new Specialist(updatedName, updatedPhone, updatedEmail, updatedLocation, updatedTags, updatedSpecialty);","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"Gavino3o"},"content":"        return this.editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"vansh284"},"content":"    public abstract static class EditPersonDescriptor {","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"alvinlim277"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"vansh284"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-06"},{"lineNumber":287,"author":{"gitId":"vansh284"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-10-06"},{"lineNumber":288,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":289,"author":{"gitId":"vansh284"},"content":"    public static class EditPatientDescriptor extends EditPersonDescriptor {","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"vansh284"},"content":"        private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"angkyakdifp"},"content":"        private Set\u003cMedicalHistory\u003e medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"vansh284"},"content":"        /**","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"vansh284"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-06"},{"lineNumber":295,"author":{"gitId":"vansh284"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-06"},{"lineNumber":296,"author":{"gitId":"vansh284"},"content":"         */","lastModifiedDate":"2023-10-06"},{"lineNumber":297,"author":{"gitId":"vansh284"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":298,"author":{"gitId":"vansh284"},"content":"            super(toCopy);","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"angkyakdifp"},"content":"            setMedicalHistory(toCopy.medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":300,"author":{"gitId":"vansh284"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2023-10-15"},{"lineNumber":301,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":302,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":303,"author":{"gitId":"angkyakdifp"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":304,"author":{"gitId":"angkyakdifp"},"content":"        public void setMedicalHistory(Set\u003cMedicalHistory\u003e medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":305,"author":{"gitId":"angkyakdifp"},"content":"            this.medicalHistory \u003d (medicalHistory !\u003d null) ? new HashSet\u003c\u003e(medicalHistory) : null;","lastModifiedDate":"2023-10-17"},{"lineNumber":306,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":307,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":308,"author":{"gitId":"vansh284"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":309,"author":{"gitId":"vansh284"},"content":"            this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":310,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":311,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":312,"author":{"gitId":"angkyakdifp"},"content":"        public Optional\u003cSet\u003cMedicalHistory\u003e\u003e getMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":313,"author":{"gitId":"angkyakdifp"},"content":"            return (medicalHistory !\u003d null)","lastModifiedDate":"2023-10-17"},{"lineNumber":314,"author":{"gitId":"angkyakdifp"},"content":"                    ? Optional.of(Collections.unmodifiableSet(medicalHistory))","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"angkyakdifp"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":318,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":319,"author":{"gitId":"vansh284"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":320,"author":{"gitId":"vansh284"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":321,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":322,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":323,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":324,"author":{"gitId":"vansh284"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":325,"author":{"gitId":"angkyakdifp"},"content":"            if (super.equals(other) \u0026\u0026 other instanceof EditPatientDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":326,"author":{"gitId":"angkyakdifp"},"content":"                EditPatientDescriptor otherEditPatientDescriptor \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":327,"author":{"gitId":"vansh284"},"content":"                return Objects.equals(age, otherEditPatientDescriptor.age)","lastModifiedDate":"2023-10-15"},{"lineNumber":328,"author":{"gitId":"vansh284"},"content":"                        \u0026\u0026 Objects.equals(medicalHistory, otherEditPatientDescriptor.medicalHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":329,"author":{"gitId":"angkyakdifp"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":330,"author":{"gitId":"angkyakdifp"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":331,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":332,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":333,"author":{"gitId":"vansh284"},"content":"        public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":334,"author":{"gitId":"vansh284"},"content":"            String stringToAdd \u003d \", age\u003d\" + age + \", medical history\u003d\" + medicalHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":335,"author":{"gitId":"angkyakdifp"},"content":"            return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":336,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":337,"author":{"gitId":"angkyakdifp"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":338,"author":{"gitId":"angkyakdifp"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-13"},{"lineNumber":339,"author":{"gitId":"angkyakdifp"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":340,"author":{"gitId":"angkyakdifp"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":341,"author":{"gitId":"angkyakdifp"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-13"},{"lineNumber":342,"author":{"gitId":"vansh284"},"content":"            return super.isAnyFieldEdited() || CollectionUtil.isAnyNonNull(age, medicalHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":343,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":344,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":345,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":346,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":347,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":348,"author":{"gitId":"vansh284"},"content":"     * Stores the details to edit the specialist with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-06"},{"lineNumber":349,"author":{"gitId":"vansh284"},"content":"     * corresponding field value of the specialist.","lastModifiedDate":"2023-10-06"},{"lineNumber":350,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":351,"author":{"gitId":"vansh284"},"content":"    public static class EditSpecialistDescriptor extends EditPersonDescriptor {","lastModifiedDate":"2023-10-06"},{"lineNumber":352,"author":{"gitId":"Kokseng1"},"content":"        private Specialty specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":353,"author":{"gitId":"alvinlim277"},"content":"        private Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":354,"author":{"gitId":"vansh284"},"content":"        /**","lastModifiedDate":"2023-10-06"},{"lineNumber":355,"author":{"gitId":"vansh284"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-06"},{"lineNumber":356,"author":{"gitId":"vansh284"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-06"},{"lineNumber":357,"author":{"gitId":"vansh284"},"content":"         */","lastModifiedDate":"2023-10-06"},{"lineNumber":358,"author":{"gitId":"vansh284"},"content":"        public EditSpecialistDescriptor(EditSpecialistDescriptor toCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":359,"author":{"gitId":"vansh284"},"content":"            super(toCopy);","lastModifiedDate":"2023-10-06"},{"lineNumber":360,"author":{"gitId":"alvinlim277"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-10-16"},{"lineNumber":361,"author":{"gitId":"Kokseng1"},"content":"            setSpecialty(toCopy.specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":362,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":363,"author":{"gitId":"Kokseng1"},"content":"        public EditSpecialistDescriptor() {}","lastModifiedDate":"2023-10-10"},{"lineNumber":364,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":365,"author":{"gitId":"alvinlim277"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":366,"author":{"gitId":"alvinlim277"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":367,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":368,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":369,"author":{"gitId":"alvinlim277"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":370,"author":{"gitId":"alvinlim277"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":371,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":372,"author":{"gitId":"Kokseng1"},"content":"        public void setSpecialty(Specialty specialty) {","lastModifiedDate":"2023-10-10"},{"lineNumber":373,"author":{"gitId":"Kokseng1"},"content":"            this.specialty \u003d specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":374,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":375,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":376,"author":{"gitId":"Kokseng1"},"content":"        public Optional\u003cSpecialty\u003e getSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":377,"author":{"gitId":"Kokseng1"},"content":"            return Optional.ofNullable(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":378,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":379,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":380,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":381,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":382,"author":{"gitId":"vansh284"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":383,"author":{"gitId":"Kokseng1"},"content":"            if (super.equals(other) \u0026\u0026 other instanceof EditSpecialistDescriptor) {","lastModifiedDate":"2023-10-10"},{"lineNumber":384,"author":{"gitId":"Kokseng1"},"content":"                EditSpecialistDescriptor otherEditSpecialistDescriptor \u003d (EditSpecialistDescriptor) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":385,"author":{"gitId":"alvinlim277"},"content":"                return Objects.equals(specialty, otherEditSpecialistDescriptor.specialty)","lastModifiedDate":"2023-10-16"},{"lineNumber":386,"author":{"gitId":"alvinlim277"},"content":"                        \u0026\u0026 Objects.equals(location, otherEditSpecialistDescriptor.location);","lastModifiedDate":"2023-10-16"},{"lineNumber":387,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":388,"author":{"gitId":"Kokseng1"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":389,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":390,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":391,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":392,"author":{"gitId":"vansh284"},"content":"        public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":393,"author":{"gitId":"alvinlim277"},"content":"            String stringToAdd \u003d \", location\u003d\" + location + \", specialty\u003d\" + specialty;","lastModifiedDate":"2023-10-16"},{"lineNumber":394,"author":{"gitId":"Kokseng1"},"content":"            return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":395,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":396,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":397,"author":{"gitId":"Kokseng1"},"content":"        /**","lastModifiedDate":"2023-10-10"},{"lineNumber":398,"author":{"gitId":"Kokseng1"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-10"},{"lineNumber":399,"author":{"gitId":"Kokseng1"},"content":"         */","lastModifiedDate":"2023-10-10"},{"lineNumber":400,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":401,"author":{"gitId":"Kokseng1"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-10"},{"lineNumber":402,"author":{"gitId":"Gavino3o"},"content":"            return super.isAnyFieldEdited() || CollectionUtil.isAnyNonNull(location, specialty);","lastModifiedDate":"2023-10-29"},{"lineNumber":403,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":404,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Kokseng1":55,"angkyakdifp":31,"vansh284":95,"Gavino3o":16,"-":186,"alvinlim277":22}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting DoConnek Pro as requested ...\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"alvinlim277":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_USAGE_GENERAL \u003d \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    private static final String PERSON_EXAMPLE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"            PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_PATIENT \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            + \": Finds all Patients whose attributes contain any of \"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_AGE + \"AGE] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_MEDICALHISTORY + \"MEDICAL HISTORY]... \\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"30 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_MEDICALHISTORY + \"Osteoporosis\";","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_SPECIALIST \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"            + \": Finds all Specialists whose attributes contain any of \"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"            + \"[\" + PREFIX_SPECIALTY + \"SPECIALTY] \\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"            + PREFIX_LOCATION + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"Physiotherapist \";","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"    private final FindPredicateMap findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"    private final PersonType personType;","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"     * @param findPredicateMap The predicate map that encapsulates the attributes being searched for","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"     * @param personType The type of person being searched for i.e. patient or specialist","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"    public FindCommand(FindPredicateMap findPredicateMap, PersonType personType) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"        this.findPredicateMap \u003d findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d person -\u003e findPredicateMap.getAllPredicates().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"                .map(pred -\u003e pred.test(person))","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"                .reduce(true, (x, y) -\u003e x \u0026\u0026 y);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"        model.updateFilteredPersonList(predicate.and(personType.getSearchPredicate()));","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap.equals(otherFindCommand.findPredicateMap)","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"                \u0026\u0026 personType.equals(otherFindCommand.personType);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"                .add(\"predicate\", findPredicateMap)","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"                .add(\"personType\", personType)","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"    public PersonType getPersonType() {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        return personType;","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"    public FindPredicateMap getPredicate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Kokseng1":30,"vansh284":10,"Gavino3o":35,"-":46,"alvinlim277":3}},{"path":"src/main/java/seedu/address/logic/commands/FindPredicateMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":" *  Stores mapping of prefixes to their respective predicates for a {@code find} command.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":" *  Keys are unique and each key should be associated with one predicate value.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":" *  Values for a given key are stored in a HashSet, and the insertion ordering is not maintained.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"public class FindPredicateMap {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    /** Prefixes mapped to their respective predicates **/","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    private final Map\u003cPrefix, Predicate\u003cPerson\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * Associates the specified predicate value with {@code prefix} key in this map.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     * @param prefix prefix key with which the specified argument value is to be associated","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     * @param predicateValue predicate value to be associated with the specified prefix key","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    public void put(Prefix prefix, Predicate\u003cPerson\u003e predicateValue) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        map.put(prefix, predicateValue);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"     * Returns the predicate value of {@code prefix}.","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    public Optional\u003cPredicate\u003cPerson\u003e\u003e getPredicateValue(Prefix prefix) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        return Optional.ofNullable(map.get(prefix));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"     * Returns all predicate value of {@code prefix}.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    public List\u003cPredicate\u003cPerson\u003e\u003e getAllPredicates() {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        if (map.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        return new ArrayList\u003c\u003e(map.values());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof FindPredicateMap)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap otherFindPredicateMap \u003d (FindPredicateMap) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        if (this.map.size() !\u003d otherFindPredicateMap.map.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        boolean isHashMapEquals \u003d this.map.equals(otherFindPredicateMap.map);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        boolean isKeyValueEquals \u003d this.map.keySet().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"                .map(key -\u003e otherFindPredicateMap.getPredicateValue(key).equals(this.getPredicateValue(key)))","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"                .reduce(true, (x, y) -\u003e x \u0026\u0026 y);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"        return isHashMapEquals || isKeyValueEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Gavino3o":73}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    public static final String PATIENT_MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    public static final String SPECIALIST_MESSAGE_SUCCESS \u003d \"Listed all specialists\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private final PersonType personType;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @param personType The type of person being listed i.e. patient or specialist","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    public ListCommand(PersonType personType) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        model.updateFilteredPersonList(personType.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        return new CommandResult(personType \u003d\u003d PersonType.PATIENT","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"                ? PATIENT_MESSAGE_SUCCESS","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"                : SPECIALIST_MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":1,"-":20,"alvinlim277":18}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":" * Reverts the {@code model}\u0027s address book to its previously undone state.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":" * @author {damithc}-reused","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":" *     adapted from \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4\"\u003eab4\u003c/a\u003e.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"            + \": Restores the effect of the most recent undone command.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"            + \"No parameters are required.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Last undo has been redone!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No commands to redo!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        if (!model.canRedo()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        model.redo();","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":30,"Gavino3o":3}},{"path":"src/main/java/seedu/address/logic/commands/ShortcutAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":" * Represents a default command keyword.","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidShortcutAlias(String)}","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class ShortcutAlias {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"            \"Shortcuts should only contain alphanumeric characters and should not be blank!\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"                    + \"It should also not match any default command keywords.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    /*","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"     * The first character of the shortcut alias must not be a whitespace,","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum}]+$\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    public final String alias;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     * Constructs a {@code ShortcutAlias}.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"     * @param alias A valid shortcut alias.","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    public ShortcutAlias(String alias) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(alias);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        checkArgument(isValidShortcutAlias(alias), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if a given string is a valid shortcut alias.","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    public static boolean isValidShortcutAlias(String test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !CommandWord.isValidCommandWord(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        return alias;","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof ShortcutAlias)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        ShortcutAlias otherShortcutAlias \u003d (ShortcutAlias) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        return alias.equals(otherShortcutAlias.alias);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        return alias.hashCode();","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"alvinlim277":66}},{"path":"src/main/java/seedu/address/logic/commands/ThemeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * Changes the theme of the application.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"public class ThemeCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public static final String COMMAND_WORD \u003d \"theme\";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Theme set to %1$s\";","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"            + \": Sets the theme to that specified by the user.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"            + \"Parameters: TYPE (either dark or light)\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"            + \"dark\";","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    private Theme theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     * Creates a ThemeCommand to set the theme to the specified {@code Theme}","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    public ThemeCommand(Theme theme) {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        assert theme !\u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        model.setTheme(theme);","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, theme.toString()));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        if (!(other instanceof ThemeCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        ThemeCommand otherThemeCommand \u003d (ThemeCommand) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        return theme.equals(otherThemeCommand.theme);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"                .add(\"theme\", theme)","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"                .toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"Kokseng1":2,"vansh284":59}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":" * Reverts the {@code model}\u0027s address book to its previous state.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":" * @author {damithc}-reused","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":" *     adapted from \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4\"\u003eab4\u003c/a\u003e.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Reverses the effect of the most recent command.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"            + \"No parameters are required.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Last command has been undone!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No commands to undo!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"        if (!model.hasHistory()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":30,"Gavino3o":2}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":" * Displays a person\u0027s detailed information in the view panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"            + \": Views the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"            + \"1\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"View Person: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"     * @param targetIndex of the person in the list to view","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        model.updateSelectedPerson(personToView);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, Messages.format(personToView)));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"        return targetIndex.equals(otherViewCommand.targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"angkyakdifp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"angkyakdifp"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":2,"angkyakdifp":71,"alvinlim277":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"public class AddCommandParser implements ParserComplex\u003cAddCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public AddCommand parse(PersonType personType, String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        if (personType.equals(PersonType.PATIENT)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            Person person \u003d parsePatient(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            return new AddCommand(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        } else if (personType.equals(PersonType.SPECIALIST)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"            Person person \u003d parseSpecialist(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"            return new AddCommand(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_PERSON_TYPE));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    private Patient parsePatient(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"                        PREFIX_TAG, PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_AGE)","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"                PREFIX_AGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"        Set\u003cMedicalHistory\u003e medicalHistory \u003d ParserUtil.parseMedicalHistories(argMultimap","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"                .getAllValues(PREFIX_MEDICALHISTORY));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"        Patient patient \u003d new Patient(name, phone, email, tagList, age, medicalHistory);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        return patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"    private Specialist parseSpecialist(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"                        PREFIX_TAG, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LOCATION, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY)","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"                    AddCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_LOCATION, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"        Specialty specialty \u003d ParserUtil.parseSpecialty(argMultimap.getValue(PREFIX_SPECIALTY).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"        Specialist specialist \u003d new Specialist(name, phone, email, location, tagList, specialty);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"        return specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kokseng1":10,"vansh284":28,"angkyakdifp":10,"-":43,"alvinlim277":12}},{"path":"src/main/java/seedu/address/logic/parser/AddShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_WORD;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.CommandWord;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ShortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" * Parses input arguments and creates a new AddShortcutCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"public class AddShortcutCommandParser implements ParserBasic\u003cAddShortcutCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * and returns an AddShortcutCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    public AddShortcutCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_COMMAND_WORD, PREFIX_SHORTCUT);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SHORTCUT, PREFIX_COMMAND_WORD)","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_COMMAND_WORD, PREFIX_SHORTCUT);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        CommandWord commandWord \u003d ParserUtil.parseCommandWord(argMultimap.getValue(PREFIX_COMMAND_WORD).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        ShortcutAlias shortcutAlias \u003d ParserUtil.parseShortcutAlias(argMultimap.getValue(PREFIX_SHORTCUT).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        return new AddShortcutCommand(shortcutAlias, commandWord);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"alvinlim277":42}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.DeleteShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"     * Used for initial separation of command word and args. Basic commands do not require a person type tag.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"            \"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"     * Used for initial separation of command word, person type and args. Complex commands require a person type tag.","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    private static final Pattern COMPLEX_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"            \"(?\u003ccommandWord\u003e\\\\S+)\\\\s(?\u003cpersonType\u003e-(pa|sp))(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"    private final Model model;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"     * Constructs an AddressBookParser with a reference to the {@code Model}","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    public AddressBookParser(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        final Matcher matcherBasic \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        final Matcher matcherPersonType \u003d COMPLEX_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        if (matcherPersonType.matches()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"            final String commandWord \u003d model.getShortcut(matcherPersonType.group(\"commandWord\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"            final String personTypeWord \u003d matcherPersonType.group(\"personType\");","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"            final String arguments \u003d matcherPersonType.group(\"arguments\");","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"            // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"            // (i.e., FINE, FINER and lower) log messages such as the one below.","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"            logger.fine(","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"                    \"Command word: \" + commandWord + \"; Person type: \" + personTypeWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"            PersonType personType;","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"            if (personTypeWord.equals(PATIENT_TAG)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"                personType \u003d PersonType.PATIENT;","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"            } else if (personTypeWord.equals(SPECIALIST_TAG)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"                personType \u003d PersonType.SPECIALIST;","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"            } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"                throw new ParseException(MESSAGE_INVALID_PERSON_TYPE);","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"                return new AddCommandParser().parse(personType, arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"                return new FindCommandParser().parse(personType, arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"                return new ListCommand(personType);","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"                if (model.getSelectedPerson() instanceof Patient) {","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"                    throw new ParseException(","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"                if (model.getSelectedPerson() instanceof Specialist) {","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"                    throw new ParseException(","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"                break;","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"            case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"            case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"            case AddShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"                throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"            case DeleteShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"                throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"            case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"            case ThemeCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"            default:","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"vansh284"},"content":"        } else if (matcherBasic.matches()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"alvinlim277"},"content":"            final String commandWord \u003d model.getShortcut(matcherBasic.group(\"commandWord\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"            final String arguments \u003d matcherBasic.group(\"arguments\");","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"            // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"vansh284"},"content":"            // (i.e., FINE, FINER and lower) log messages such as the one below.","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"vansh284"},"content":"            // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"            logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"vansh284"},"content":"            switch (commandWord) {","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"                if (model.getSelectedPerson() instanceof Patient) {","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"                    return new EditCommandParser().parse(PersonType.PATIENT, arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"                if (model.getSelectedPerson() instanceof Specialist) {","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"                    return new EditCommandParser().parse(PersonType.SPECIALIST, arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"Gavino3o"},"content":"                break;","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"alvinlim277"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"alvinlim277"},"content":"                return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"vansh284"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"vansh284"},"content":"                return new ClearCommand();","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"alvinlim277"},"content":"            case AddShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"alvinlim277"},"content":"                return new AddShortcutCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"alvinlim277"},"content":"            case DeleteShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"alvinlim277"},"content":"                return new DeleteShortcutCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"angkyakdifp"},"content":"            case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"angkyakdifp"},"content":"                return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"Kokseng1"},"content":"            case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"Kokseng1"},"content":"                return new UndoCommand();","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"Kokseng1"},"content":"            case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"Kokseng1"},"content":"                return new RedoCommand();","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"vansh284"},"content":"            case ThemeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"vansh284"},"content":"                return new ThemeCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"Kokseng1"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"Kokseng1"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"Kokseng1"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"Kokseng1"},"content":"                throw new ParseException(MESSAGE_INVALID_PERSON_TYPE);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2016-08-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"vansh284"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":13,"vansh284":50,"angkyakdifp":4,"Gavino3o":44,"-":65,"alvinlim277":31}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if any of the prefixes contains present but blank {@code Optional} values in the given","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"    public boolean anyValuesBlank(Prefix... prefixes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e getValue(prefix).orElseGet(() -\u003e \"emptyNotBlank\").isBlank());","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":78,"alvinlim277":16}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"    public static final Prefix PREFIX_MEDICALHISTORY \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    public static final Prefix PREFIX_SPECIALTY \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public static final Prefix PREFIX_COMMAND_WORD \u003d new Prefix(\"kw/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public static final Prefix PREFIX_SHORTCUT \u003d new Prefix(\"sc/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    public static final Prefix PREFIX_THEME \u003d new Prefix(\"th/\");","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    /* Tag definitions */","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    public static final String PATIENT_TAG \u003d \"-pa\";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    public static final String SPECIALIST_TAG \u003d \"-sp\";","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kokseng1":1,"vansh284":5,"angkyakdifp":1,"Gavino3o":1,"-":14,"alvinlim277":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"public class DeleteCommandParser implements ParserBasic\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            List\u003cIndex\u003e indexList \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"            return new DeleteCommand(indexList);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"                            pe.getMessage() + \"\\n\" + DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Gavino3o":8,"-":25,"alvinlim277":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.DeleteShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ShortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" * Parses input arguments and creates a new DeleteShortcutCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"public class DeleteShortcutCommandParser implements ParserBasic\u003cDeleteShortcutCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * and returns an DeleteShortcutCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    public DeleteShortcutCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_SHORTCUT);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        if (argMultimap.getValue(PREFIX_SHORTCUT).isEmpty()","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"                    DeleteShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        List\u003cString\u003e stringList \u003d argMultimap.getAllValues(PREFIX_SHORTCUT);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        List\u003cShortcutAlias\u003e shortcutList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        for (String str : stringList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"            shortcutList.add(ParserUtil.parseShortcutAlias(str));","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        return new DeleteShortcutCommand(shortcutList);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"alvinlim277":43}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.Messages.MESSAGE_BLANK_ARGUMENTS;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.Messages.MESSAGE_ERROR_STATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"public class EditCommandParser implements ParserComplex\u003cEditCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    public EditCommand parse(PersonType personType, String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        if (personType.equals(PersonType.PATIENT)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"            return parsePatient(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        if (personType.equals(PersonType.SPECIALIST)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            return parseSpecialist(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        throw new ParseException(MESSAGE_ERROR_STATE);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    private EditCommand parsePatient(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                        PREFIX_TAG, PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        if (!argMultimap.getPreamble().isBlank() \u0026\u0026 !args.isBlank()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"                    EditCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.anyValuesBlank(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_AGE)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(String.format(MESSAGE_BLANK_ARGUMENTS,","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"                    EditCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"                PREFIX_AGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        parseCommonPersonForEdit(editPatientDescriptor, argMultimap);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"        if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"            editPatientDescriptor.setAge(ParserUtil.parseAge(argMultimap","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"                    .getValue(PREFIX_AGE).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"        parseMedicalHistoriesForEdit(argMultimap.getAllValues(PREFIX_MEDICALHISTORY))","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"angkyakdifp"},"content":"                .ifPresent(editPatientDescriptor::setMedicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED + \"\\n\" + EditCommand.MESSAGE_USAGE_PATIENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        return new EditCommand(editPatientDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"    private EditCommand parseSpecialist(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"                        PREFIX_TAG, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        if (!argMultimap.getPreamble().isBlank() \u0026\u0026 !args.isBlank()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"                    EditCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.anyValuesBlank(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION, PREFIX_SPECIALTY)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(String.format(MESSAGE_BLANK_ARGUMENTS,","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"                    EditCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_LOCATION, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d new EditSpecialistDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"        parseCommonPersonForEdit(editSpecialistDescriptor, argMultimap);","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"            editSpecialistDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"        if (argMultimap.getValue(PREFIX_SPECIALTY).isPresent()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"            editSpecialistDescriptor.setSpecialty(ParserUtil.parseSpecialty(","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"                    argMultimap.getValue(PREFIX_SPECIALTY).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"        if (!editSpecialistDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED + \"\\n\" + EditCommand.MESSAGE_USAGE_SPECIALIST);","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"        return new EditCommand(editSpecialistDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"     * Creates an {@code EditPersonDescriptor} by checking if each attribute of a {@code Person}","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"     * is present within the user input arguments.","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"    private EditPersonDescriptor parseCommonPersonForEdit(EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"                                                          ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"        return editPersonDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":152,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"angkyakdifp"},"content":"     * Parses {@code Collection\u003cString\u003e medicalHistories} into a {@code Set\u003cMedicalHistory\u003e}","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"angkyakdifp"},"content":"     * if {@code medicalHistories} is non-empty.","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"angkyakdifp"},"content":"     * If {@code medicalHistories} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"angkyakdifp"},"content":"     * {@code Set\u003cMedicalHistories\u003e} containing zero medical history.","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"angkyakdifp"},"content":"    private Optional\u003cSet\u003cMedicalHistory\u003e\u003e parseMedicalHistoriesForEdit(Collection\u003cString\u003e medicalHistories)","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"angkyakdifp"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"angkyakdifp"},"content":"        assert medicalHistories !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"angkyakdifp"},"content":"        if (medicalHistories.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"angkyakdifp"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"angkyakdifp"},"content":"        Collection\u003cString\u003e medHistSet \u003d medicalHistories.size() \u003d\u003d 1 \u0026\u0026 medicalHistories.contains(\"\")","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"angkyakdifp"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"angkyakdifp"},"content":"                : medicalHistories;","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"angkyakdifp"},"content":"        return Optional.of(ParserUtil.parseMedicalHistories(medHistSet));","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Kokseng1":7,"Gavino3o":40,"vansh284":23,"angkyakdifp":24,"-":67,"alvinlim277":8}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.Messages.MESSAGE_BLANK_ARGUMENTS;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.FindPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.predicates.AgeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.predicates.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.SpecialtyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":" * Parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"public class FindCommandParser implements ParserComplex\u003cFindCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public FindCommand parse(PersonType personType, String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        if (personType.equals(PersonType.PATIENT)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"            return parsePatient(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        } else if (personType.equals(PersonType.SPECIALIST)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            return parseSpecialist(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_PERSON_TYPE));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    private FindCommand parsePatient(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"                        PREFIX_TAG, PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        if (!argMultimap.getPreamble().isBlank() \u0026\u0026 !args.isBlank()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"                    FindCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"        if (argMultimap.anyValuesBlank(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_TAG, PREFIX_AGE, PREFIX_MEDICALHISTORY)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(String.format(MESSAGE_BLANK_ARGUMENTS,","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"                    FindCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonPredicates(argMultimap);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"            List\u003cString\u003e ageKeyWords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_AGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_AGE, new AgeContainsKeywordsPredicate(ageKeyWords));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_MEDICALHISTORY).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e medHistKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_MEDICALHISTORY,","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"                    new MedHistoryContainsKeywordsPredicate(medHistKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"        return new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"    private FindCommand parseSpecialist(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"                        PREFIX_TAG, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"        if (!argMultimap.getPreamble().isBlank() \u0026\u0026 !args.isBlank()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"                    FindCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"        if (argMultimap.anyValuesBlank(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION,","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_TAG, PREFIX_SPECIALTY)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(String.format(MESSAGE_BLANK_ARGUMENTS,","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"                    FindCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_LOCATION, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonPredicates(argMultimap);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"            List\u003cString\u003e addressKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_LOCATION);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_LOCATION, new LocationContainsKeywordsPredicate(addressKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_SPECIALTY).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e specialtyKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_SPECIALTY, new SpecialtyContainsKeywordsPredicate(specialtyKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"        return new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"    private List\u003cString\u003e splitKeywordsByWhitespace(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        assert argMultimap.getValue(prefix).isPresent();","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        String trimmedArgs \u003d argMultimap.getValue(prefix).get().trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        return Arrays.asList(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupPersonPredicates(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e nameKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_NAME);","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e phoneKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_PHONE);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_PHONE, new PhoneContainsKeywordsPredicate(phoneKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e emailKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_EMAIL, new EmailContainsKeywordsPredicate(emailKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e tagKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_TAG, new TagsContainsKeywordsPredicate(tagKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Kokseng1":2,"vansh284":7,"Gavino3o":86,"-":26,"alvinlim277":23}},{"path":"src/main/java/seedu/address/logic/parser/ParserBasic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":" * Represents a ParserBasic that is able to parse basic user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"public interface ParserBasic\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":14,"alvinlim277":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserComplex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Represents a ParserComplex that is able to parse complex user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public interface ParserComplex\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    T parse(PersonType personType, String userInput) throws ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"vansh284":2,"-":13,"alvinlim277":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.CommandWord;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ShortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"            \"The provided indexes must be positive whole numbers (integers greater than zero).\";","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code oneBasedIndexes} into a list of sorted {@code Index} in ascending order and returns it.","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"     * @throws ParseException if any of the specified index is invalid (not non-zero unsigned integer)","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"    public static List\u003cIndex\u003e parseIndexes(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        requireNonNull(oneBasedIndexes);","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        String trimmedIndexes \u003d oneBasedIndexes.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        String[] args \u003d trimmedIndexes.split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        for (String arg : args) {","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"            indexList.add(parseIndex(arg));","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        verifyNoDuplicateIndexes(args);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"        Collections.sort(indexList);","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        return indexList;","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"     * Verifies that no duplicated indexes are present in user input argument.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"    private static void verifyNoDuplicateIndexes(String[] args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"        String[] duplicatedIndexes \u003d Arrays.stream(args)","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"                .filter(i -\u003e Collections.frequency(Arrays.asList(args), i) \u003e 1)","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"                .distinct()","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        if (duplicatedIndexes.length \u003e 0) {","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicateIndexes(duplicatedIndexes));","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"     * Parses a {@code String specialty} into a {@code Specialty}.","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"     * @throws ParseException if the given {@code specialty} is invalid.","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"    public static Specialty parseSpecialty(String specialty) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"        requireNonNull(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        String trimmedSpecialty \u003d specialty.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"        if (!Specialty.isValidSpecialty(trimmedSpecialty)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"        return new Specialty(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"angkyakdifp"},"content":"     * Parses a {@code String medicalHistory} into a {@code MedicalHistory}.","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"angkyakdifp"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"angkyakdifp"},"content":"     * @throws ParseException if the given {@code medicalHistory} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"angkyakdifp"},"content":"    public static MedicalHistory parseMedicalHistory(String medicalHistory) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"angkyakdifp"},"content":"        requireNonNull(medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"angkyakdifp"},"content":"        String trimmedSpecialty \u003d medicalHistory.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"angkyakdifp"},"content":"        if (!Specialty.isValidSpecialty(trimmedSpecialty)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"angkyakdifp"},"content":"            throw new ParseException(MedicalHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"angkyakdifp"},"content":"        return new MedicalHistory(medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"angkyakdifp"},"content":"     * Parses {@code Collection\u003cString\u003e medicalHistories} into a {@code Set\u003cMedicalHistory\u003e}.","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"angkyakdifp"},"content":"    public static Set\u003cMedicalHistory\u003e parseMedicalHistories(Collection\u003cString\u003e medicalHistories) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"angkyakdifp"},"content":"        requireNonNull(medicalHistories);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"angkyakdifp"},"content":"        final Set\u003cMedicalHistory\u003e medHistSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"angkyakdifp"},"content":"        for (String medicalhistory : medicalHistories) {","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"angkyakdifp"},"content":"            medHistSet.add(parseMedicalHistory(medicalhistory));","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"angkyakdifp"},"content":"        return medHistSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"alvinlim277"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"alvinlim277"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"alvinlim277"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"alvinlim277"},"content":"        String trimmedAddress \u003d location.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"alvinlim277"},"content":"        if (!Location.isValidLocation(trimmedAddress)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"alvinlim277"},"content":"        return new Location(trimmedAddress);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"vansh284"},"content":"     * Parses {@code String age} into a {@code Age}.","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"vansh284"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"alvinlim277"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"vansh284"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"vansh284"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"vansh284"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"vansh284"},"content":"        if (!Age.isValidAge(trimmedAge)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"vansh284"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"vansh284"},"content":"        return new Age(trimmedAge);","lastModifiedDate":"2023-10-15"},{"lineNumber":222,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":223,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"alvinlim277"},"content":"     * Parses {@code String commandWord} into a {@code CommandWord}.","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"alvinlim277"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"alvinlim277"},"content":"     * @throws ParseException if the given {@code commandWord} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"alvinlim277"},"content":"    public static CommandWord parseCommandWord(String commandWord) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(commandWord);","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"alvinlim277"},"content":"        String trimmedCommandWord \u003d commandWord.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"alvinlim277"},"content":"        if (!CommandWord.isValidCommandWord(trimmedCommandWord)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(CommandWord.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"alvinlim277"},"content":"        return new CommandWord(trimmedCommandWord);","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"alvinlim277"},"content":"     * Parses {@code String alias} into a {@code ShortcutAlias}.","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"alvinlim277"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"alvinlim277"},"content":"     * @throws ParseException if the given {@code alias} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"alvinlim277"},"content":"    public static ShortcutAlias parseShortcutAlias(String alias) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(alias);","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"alvinlim277"},"content":"        String trimmedAlias \u003d alias.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"alvinlim277"},"content":"        if (!ShortcutAlias.isValidShortcutAlias(trimmedAlias)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(ShortcutAlias.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"alvinlim277"},"content":"        return new ShortcutAlias(trimmedAlias);","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"vansh284"},"content":"     * Parses {@code String themeString} into a {@code Theme}.","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"vansh284"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"vansh284"},"content":"     * @throws ParseException if the given {@code themeString} is invalid.","lastModifiedDate":"2023-10-29"},{"lineNumber":259,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":260,"author":{"gitId":"vansh284"},"content":"    public static Theme parseTheme(String themeString) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":261,"author":{"gitId":"vansh284"},"content":"        requireNonNull(themeString);","lastModifiedDate":"2023-10-29"},{"lineNumber":262,"author":{"gitId":"vansh284"},"content":"        String trimmedTheme \u003d themeString.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":263,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":264,"author":{"gitId":"vansh284"},"content":"            return Theme.getThemeValue(trimmedTheme);","lastModifiedDate":"2023-10-29"},{"lineNumber":265,"author":{"gitId":"vansh284"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2023-10-29"},{"lineNumber":266,"author":{"gitId":"vansh284"},"content":"            throw new ParseException(Theme.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":267,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kokseng1":16,"Gavino3o":37,"vansh284":32,"angkyakdifp":27,"-":114,"alvinlim277":43}},{"path":"src/main/java/seedu/address/logic/parser/ThemeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * Parses input arguments and creates a new ThemeCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public class ThemeCommandParser implements ParserBasic\u003cThemeCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"     * Parses the given {@code String} of arguments in the context of the ThemeCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"     * and returns a ThemeCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    public ThemeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"            Theme theme \u003d ParserUtil.parseTheme(userInput);","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            return new ThemeCommand(theme);","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"vansh284":28}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"public class ViewCommandParser implements ParserBasic\u003cViewCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":28,"vansh284":1}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        if (!(other instanceof ParseException)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"        ParseException otherParseException \u003d (ParseException) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        return getMessage().equals(otherParseException.getMessage())","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"                \u0026\u0026 Objects.equals(getCause(), otherParseException.getCause());","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Kokseng1":20,"-":17}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData} and {@code shortcutSettings}.","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kokseng1":3,"-":126}},{"path":"src/main/java/seedu/address/model/CommandStringStash.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * Represents a stash that stores the history of the command String of the 20 most recent","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * commands executed.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"public class CommandStringStash {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private List\u003cString\u003e cmdStringStack;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    private int currentCmdIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Basic empty constructor for the CommandStringStash.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    public CommandStringStash() {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        this.cmdStringStack \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        this.currentCmdIndex \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"     * Creates the CommandStringStash using the initial values provided.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    public CommandStringStash(List\u003cString\u003e cmdStringStack, int currentCmd) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        this.cmdStringStack \u003d cmdStringStack;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        this.currentCmdIndex \u003d currentCmd;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"     * Returns the previous command string input entered by the user.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"     * Remembers the state, so it passes previous command string inputs already gotten.","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"     * Returns {@code commandInputString} if already at the first command string input entered.","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    public String getPrevCommandString(String commandInputString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        assert commandInputString !\u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        if (cmdStringStack.isEmpty() || currentCmdIndex \u003d\u003d 0) {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"            return commandInputString;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        currentCmdIndex -\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        String prevCommandString \u003d cmdStringStack.get(currentCmdIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        return prevCommandString;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"     * Returns the command string input passed over by the user acting as an \"undo\" of {@code getPrevCommandString}.","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"     * Remember the state, so it passes over command string inputs already \"undone\".","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"     * Returns {@code commandInputString} if the user has not passed any commands yet.","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"    public String getPassedCommandString(String commandInputString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        assert commandInputString !\u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        if (cmdStringStack.isEmpty() || currentCmdIndex \u003e\u003d cmdStringStack.size() - 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"            return commandInputString;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        currentCmdIndex +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        String passedCommandString \u003d cmdStringStack.get(currentCmdIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        return passedCommandString;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"     * Adds the {@code commandString} to the stash of command Strings.","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"     * If the stash has size \u003e 20, the least recently added command string is evicted.","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"     * Also resets the state of the stash.","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"     * @param commandInputString A non-null command input String.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    public void addCommandString(String commandInputString) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        assert commandInputString !\u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        // remove existing command String from stack if it already exists as it will be replaced by new command","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        if (cmdStringStack.contains(commandInputString)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"            cmdStringStack.remove(commandInputString);","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"        // evict least recently added command string if necessary","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"        if (cmdStringStack.size() \u003d\u003d 20) {","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"            cmdStringStack.remove(0);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"        // add command string","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        cmdStringStack.add(commandInputString);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"        // reset the command string index pointer","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"        currentCmdIndex \u003d cmdStringStack.size();","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        if (!(object instanceof CommandStringStash)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d (CommandStringStash) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"        return Objects.equals(cmdStringStack, commandStringStash.cmdStringStack)","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"                \u0026\u0026 currentCmdIndex \u003d\u003d commandStringStash.currentCmdIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"        return Objects.hash(cmdStringStack, currentCmdIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"                .add(\"command string stack\", cmdStringStack)","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"                .add(\"command string stack current index\", currentCmdIndex)","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"vansh284":113}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.core.ShortcutSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.CommandWord;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ShortcutAlias;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    /** {@code Predicate} that always evaluates to true */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"     * Returns the user prefs\u0027 shortcut settings.","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    ShortcutSettings getShortcutSettings();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"     * Sets the user prefs\u0027 shortcut settings.","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    void setShortcutSettings(ShortcutSettings shortcutSettings);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"     * Registers a new shortcut mapping.","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"    String registerShortcut(ShortcutAlias shortcutAlias, CommandWord commandWord);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"     * Removes the shortcut mapping.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"    String removeShortcut(ShortcutAlias shortcutAlias);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"     * Checks if the alias has a mapping registered.","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"    String getShortcut(String alias);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"angkyakdifp"},"content":"    Person getSelectedPerson();","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"angkyakdifp"},"content":"    void updateSelectedPerson(Person person);","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"angkyakdifp"},"content":"    public boolean isSelectedEmpty();","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"     * Returns the command string of the next most recent command executed.","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"    String getPrevCommandString(String currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"     * Returns the command string of the previous most recent command executed.","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"    String getPassedCommandString(String currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"     * Adds the most recent command string input by the user to the CommandStringStash.","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"    void addCommandString(String commandString);","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"     * Sets the current theme of the application to be {@code theme}","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"vansh284"},"content":"    void setTheme(Theme theme);","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"vansh284"},"content":"     * Adds @code{changeListener} as an observer to the application theme.","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"    void addThemeListener(ChangeListener\u003c? super Theme\u003e changeListener);","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"Kokseng1"},"content":"    boolean hasHistory();","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Kokseng1"},"content":"    boolean canRedo();","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Kokseng1"},"content":"    void undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"Kokseng1"},"content":"    void redo();","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"Kokseng1"},"content":"    void commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Kokseng1":5,"vansh284":27,"angkyakdifp":5,"-":86,"alvinlim277":25}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import java.util.List;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.core.ShortcutSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.core.ThemeProperty;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.CommandWord;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ShortcutAlias;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    private final List\u003cReadOnlyModelManager\u003e modelManagerStateList;","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    private int currentStatePointer;","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    private Person selectedPerson;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    private final CommandStringStash commandStringStash;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"     * Ideally theme property should be under UserPrefs, but due to limitations of the","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"     * JSON Serialising library, it causes errors when put under there, and so the","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"     * theme preference cannot be saved from session to session.","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"    private final ThemeProperty themeProperty;","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        this.commandStringStash \u003d new CommandStringStash();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        this.themeProperty \u003d new ThemeProperty();","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"        this.modelManagerStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"        this.currentStatePointer \u003d -1;","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        // DoConnek Pro shows all patients on startup by default.","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"        updateFilteredPersonList(PersonType.PATIENT.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"        this.selectedPerson \u003d filteredPersons.size() \u003d\u003d 0 ? null : filteredPersons.get(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"        commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"     * Resets this ModelManager\u0027s data to copy another ModelManager\u0027s","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"     * @param toCopyFrom ModelManager to copy from","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"    public void resetData(ReadOnlyModelManager toCopyFrom) {","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"        setAddressBook(new AddressBook(toCopyFrom.addressBook));","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"        setUserPrefs(toCopyFrom.userPrefs.getCopy());","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"        Person personCopy \u003d toCopyFrom.selectedPerson \u003d\u003d null","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"                ? null","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"                : toCopyFrom.selectedPerson.getCopy();","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"        updateSelectedPerson(personCopy);","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        Predicate\u003cPerson\u003e predicateCopy \u003d toCopyFrom.filteredPersons.getPredicate()::test;","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"        updateFilteredPersonList(predicateCopy);","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"        setTheme(toCopyFrom.themeProperty.getValue());","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"alvinlim277"},"content":"    public ShortcutSettings getShortcutSettings() {","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"        return userPrefs.getShortcutSettings();","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"alvinlim277"},"content":"    public void setShortcutSettings(ShortcutSettings shortcutSettings) {","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"alvinlim277"},"content":"        requireAllNonNull(shortcutSettings);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"alvinlim277"},"content":"        userPrefs.setShortcutSettings(shortcutSettings);","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"alvinlim277"},"content":"    public String registerShortcut(ShortcutAlias shortcutAlias, CommandWord commandWord) {","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"alvinlim277"},"content":"        return getShortcutSettings().registerShortcut(shortcutAlias, commandWord);","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"alvinlim277"},"content":"    public String removeShortcut(ShortcutAlias shortcutAlias) {","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"alvinlim277"},"content":"        return getShortcutSettings().removeShortcut(shortcutAlias);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"    public String getShortcut(String alias) {","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"alvinlim277"},"content":"        return getShortcutSettings().getShortcut(alias);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2023-11-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":200,"author":{"gitId":"angkyakdifp"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Selected Person Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"angkyakdifp"},"content":"    public Person getSelectedPerson() {","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"angkyakdifp"},"content":"        if (null \u003d\u003d selectedPerson || hasPerson(selectedPerson)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"angkyakdifp"},"content":"            return selectedPerson;","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"angkyakdifp"},"content":"        this.selectedPerson \u003d filteredPersons.size() \u003d\u003d 0 ? null : filteredPersons.get(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"angkyakdifp"},"content":"        return selectedPerson;","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"angkyakdifp"},"content":"    public void updateSelectedPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"angkyakdifp"},"content":"        selectedPerson \u003d person;","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"angkyakdifp"},"content":"    public boolean isSelectedEmpty() {","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"angkyakdifp"},"content":"        return selectedPerson \u003d\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"vansh284"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command String Stash \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"vansh284"},"content":"    public String getPrevCommandString(String currentCommandString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"vansh284"},"content":"        return commandStringStash.getPrevCommandString(currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"vansh284"},"content":"    public String getPassedCommandString(String currentCommandString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"vansh284"},"content":"        return commandStringStash.getPassedCommandString(currentCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"vansh284"},"content":"    public void addCommandString(String commandString) {","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"vansh284"},"content":"        commandStringStash.addCommandString(commandString);","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"vansh284"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Theme \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"vansh284"},"content":"    public void setTheme(Theme theme) {","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"vansh284"},"content":"        themeProperty.setValue(theme);","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"vansh284"},"content":"    public void addThemeListener(ChangeListener\u003c? super Theme\u003e changeListener) {","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"vansh284"},"content":"        themeProperty.addListener(changeListener);","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-11-06"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"angkyakdifp"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"angkyakdifp"},"content":"                \u0026\u0026 ((this.isSelectedEmpty() \u0026\u0026 otherModelManager.isSelectedEmpty())","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"angkyakdifp"},"content":"                || (this.isSelectedEmpty() \u003d\u003d otherModelManager.isSelectedEmpty()","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"angkyakdifp"},"content":"                \u0026\u0026 selectedPerson.equals(otherModelManager.selectedPerson)));","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo-Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":269,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"Kokseng1"},"content":"    public boolean hasHistory() {","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"Kokseng1"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2023-11-06"},{"lineNumber":272,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"Kokseng1"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"Kokseng1"},"content":"        return currentStatePointer \u003c modelManagerStateList.size() - 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":277,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"Kokseng1"},"content":"    public void redo() {","lastModifiedDate":"2023-11-06"},{"lineNumber":281,"author":{"gitId":"Kokseng1"},"content":"        if (!canRedo()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":282,"author":{"gitId":"Kokseng1"},"content":"            throw new ModelManager.NoRedoableStateException();","lastModifiedDate":"2023-11-06"},{"lineNumber":283,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":284,"author":{"gitId":"Kokseng1"},"content":"        currentStatePointer++;","lastModifiedDate":"2023-11-06"},{"lineNumber":285,"author":{"gitId":"Kokseng1"},"content":"        resetData(modelManagerStateList.get(currentStatePointer));","lastModifiedDate":"2023-11-06"},{"lineNumber":286,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":289,"author":{"gitId":"Kokseng1"},"content":"     * Saves a copy of the current {@code ModelManager} state at the end of the state list.","lastModifiedDate":"2023-11-06"},{"lineNumber":290,"author":{"gitId":"Kokseng1"},"content":"     * Undone states are removed from the state list.","lastModifiedDate":"2023-11-06"},{"lineNumber":291,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":292,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"Kokseng1"},"content":"    public void commit() {","lastModifiedDate":"2023-11-06"},{"lineNumber":294,"author":{"gitId":"Kokseng1"},"content":"        removeStatesAfterCurrentPointer();","lastModifiedDate":"2023-11-06"},{"lineNumber":295,"author":{"gitId":"Kokseng1"},"content":"        Person personCopy \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":296,"author":{"gitId":"Kokseng1"},"content":"                this.selectedPerson \u003d\u003d null","lastModifiedDate":"2023-11-06"},{"lineNumber":297,"author":{"gitId":"Kokseng1"},"content":"                ? null","lastModifiedDate":"2023-11-06"},{"lineNumber":298,"author":{"gitId":"Kokseng1"},"content":"                : this.selectedPerson.getCopy();","lastModifiedDate":"2023-11-06"},{"lineNumber":299,"author":{"gitId":"Kokseng1"},"content":"        //making a copy of current filteredPersons","lastModifiedDate":"2023-11-06"},{"lineNumber":300,"author":{"gitId":"Kokseng1"},"content":"        UniquePersonList obListCopy \u003d new UniquePersonList();","lastModifiedDate":"2023-11-06"},{"lineNumber":301,"author":{"gitId":"Kokseng1"},"content":"        obListCopy.setPersons(this.addressBook.getPersonList());","lastModifiedDate":"2023-11-06"},{"lineNumber":302,"author":{"gitId":"Kokseng1"},"content":"        FilteredList\u003cPerson\u003e filteredListCopy \u003d new FilteredList\u003c\u003e(obListCopy.asUnmodifiableObservableList());","lastModifiedDate":"2023-11-07"},{"lineNumber":303,"author":{"gitId":"Kokseng1"},"content":"        filteredListCopy.setPredicate(this.filteredPersons.getPredicate());","lastModifiedDate":"2023-11-06"},{"lineNumber":304,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":305,"author":{"gitId":"Kokseng1"},"content":"        modelManagerStateList.add(new ReadOnlyModelManager(","lastModifiedDate":"2023-11-06"},{"lineNumber":306,"author":{"gitId":"Kokseng1"},"content":"                new AddressBook(this.addressBook),","lastModifiedDate":"2023-11-06"},{"lineNumber":307,"author":{"gitId":"Kokseng1"},"content":"                filteredListCopy,","lastModifiedDate":"2023-11-07"},{"lineNumber":308,"author":{"gitId":"Kokseng1"},"content":"                this.userPrefs.getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":309,"author":{"gitId":"Kokseng1"},"content":"                personCopy,","lastModifiedDate":"2023-11-06"},{"lineNumber":310,"author":{"gitId":"Kokseng1"},"content":"                this.themeProperty.getCopy()","lastModifiedDate":"2023-11-07"},{"lineNumber":311,"author":{"gitId":"Kokseng1"},"content":"        ));","lastModifiedDate":"2023-11-06"},{"lineNumber":312,"author":{"gitId":"Kokseng1"},"content":"        currentStatePointer++;","lastModifiedDate":"2023-11-06"},{"lineNumber":313,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":314,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"Kokseng1"},"content":"    private void removeStatesAfterCurrentPointer() {","lastModifiedDate":"2023-11-06"},{"lineNumber":316,"author":{"gitId":"Kokseng1"},"content":"        modelManagerStateList.subList(currentStatePointer + 1, modelManagerStateList.size()).clear();","lastModifiedDate":"2023-11-06"},{"lineNumber":317,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":318,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":319,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":320,"author":{"gitId":"Kokseng1"},"content":"     * Restores the ModelManager to its previous state.","lastModifiedDate":"2023-11-06"},{"lineNumber":321,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":322,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":323,"author":{"gitId":"Kokseng1"},"content":"    public void undo() {","lastModifiedDate":"2023-11-06"},{"lineNumber":324,"author":{"gitId":"Kokseng1"},"content":"        if (!hasHistory()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":325,"author":{"gitId":"Kokseng1"},"content":"            throw new seedu.address.model.ModelManager.NoUndoableStateException();","lastModifiedDate":"2023-11-06"},{"lineNumber":326,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":327,"author":{"gitId":"Kokseng1"},"content":"        currentStatePointer--;","lastModifiedDate":"2023-11-06"},{"lineNumber":328,"author":{"gitId":"Kokseng1"},"content":"        resetData(modelManagerStateList.get(currentStatePointer));","lastModifiedDate":"2023-11-06"},{"lineNumber":329,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":330,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":331,"author":{"gitId":"Kokseng1"},"content":"     * Thrown when trying to {@code undo()} but can\u0027t.","lastModifiedDate":"2023-11-06"},{"lineNumber":332,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":333,"author":{"gitId":"Kokseng1"},"content":"    public static class NoUndoableStateException extends RuntimeException {","lastModifiedDate":"2023-11-06"},{"lineNumber":334,"author":{"gitId":"Kokseng1"},"content":"        private NoUndoableStateException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":335,"author":{"gitId":"Kokseng1"},"content":"            super(\"Current state pointer at start of addressBookState list, unable to undo.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":336,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":337,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":338,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":339,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":340,"author":{"gitId":"Kokseng1"},"content":"     * Thrown when trying to {@code redo()} but can\u0027t.","lastModifiedDate":"2023-11-06"},{"lineNumber":341,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":342,"author":{"gitId":"Kokseng1"},"content":"    public static class NoRedoableStateException extends RuntimeException {","lastModifiedDate":"2023-11-06"},{"lineNumber":343,"author":{"gitId":"Kokseng1"},"content":"        private NoRedoableStateException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":344,"author":{"gitId":"Kokseng1"},"content":"            super(\"Current state pointer at end of addressBookState list, unable to redo.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":345,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":346,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kokseng1":103,"vansh284":39,"angkyakdifp":28,"-":145,"alvinlim277":32}},{"path":"src/main/java/seedu/address/model/ReadOnlyModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.model;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.core.ThemeProperty;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":" * Represents commited frames of ModelManager","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"public class ReadOnlyModelManager {","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    public final AddressBook addressBook;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    public final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    public final UserPrefs userPrefs;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    public final Person selectedPerson;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    public final ThemeProperty themeProperty;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"     * Constructor","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"     * @param addressBook","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"     * @param filteredPersons","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"     * @param userPrefs","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"     * @param selectedPerson","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"     * @param themeProperty","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    public ReadOnlyModelManager(AddressBook addressBook, FilteredList\u003cPerson\u003e filteredPersons,","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"                                 UserPrefs userPrefs, Person selectedPerson, ThemeProperty themeProperty) {","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        this.filteredPersons \u003d filteredPersons;","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        this.userPrefs \u003d userPrefs;","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        this.selectedPerson \u003d selectedPerson;","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        this.themeProperty \u003d themeProperty;","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Kokseng1":32,"vansh284":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.core.ShortcutSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    ShortcutSettings getShortcutSettings();","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":16,"alvinlim277":3}},{"path":"src/main/java/seedu/address/model/Theme.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Encapsulates the themes that the application can take on.","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"public enum Theme {","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"    DARK, LIGHT;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Theme can only be \u0027dark\u0027 or \u0027light\u0027 (not case sensitive)\";","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    public static Theme getThemeValue(String theme) {","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"        return Theme.valueOf(theme.toUpperCase());","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"vansh284":13}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.core.ShortcutSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    private ShortcutSettings shortcutSettings \u003d new ShortcutSettings();","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        ShortcutSettings newShortcutSettings \u003d newUserPrefs.getShortcutSettings()","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"                .removeBadMappings();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        setShortcutSettings(newShortcutSettings);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    public ShortcutSettings getShortcutSettings() {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        return shortcutSettings;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    public void setShortcutSettings(ShortcutSettings shortcutSettings) {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(shortcutSettings);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        this.shortcutSettings \u003d shortcutSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath)","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"                \u0026\u0026 shortcutSettings.equals(otherUserPrefs.shortcutSettings);","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"        sb.append(\"\\nShortcutAlias Settings : \" + shortcutSettings);","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"    public UserPrefs getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        UserPrefs newPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"        newPrefs.setShortcutSettings(this.shortcutSettings.getCopy());","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"        return newPrefs;","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kokseng1":5,"vansh284":1,"-":86,"alvinlim277":16}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" * Represents a Person\u0027s age in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class Age {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"            \"Age should only contain integers between 0 and 149 both inclusive.\";","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\b[0-9]|[1-9][0-9]|1[0-4][0-9]\\\\b\";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Constructs a {@code Age}.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * @param age A valid age.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public Age(String age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        value \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * Returns true if a given string is a valid age.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        if (!(other instanceof Age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        Age otherAge \u003d (Age) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        return value.equals(otherAge.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"    public Age getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"        return new Age(this.value);","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Kokseng1":3,"vansh284":60}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"    public Email getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"        return new Email(this.value);","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":4,"-":79}},{"path":"src/main/java/seedu/address/model/person/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":" * Represents a Person\u0027s location in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class Location {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     * @param location A valid location.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    public Location(String location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        value \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof Location)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        Location otherLocation \u003d (Location) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        return value.equals(otherLocation.value);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"    public Location getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"        return new Location(this.value);","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":3,"vansh284":1,"-":49,"alvinlim277":15}},{"path":"src/main/java/seedu/address/model/person/MedicalHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":" * Represents a Patient\u0027s medical history in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"public class MedicalHistory {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"            \"Medical History should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"     * The first character of the Medical History must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"     * @param medicalHistoryInput A valid medical history.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"    public MedicalHistory(String medicalHistoryInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"        requireNonNull(medicalHistoryInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        checkArgument(isValidMedicalHistory(medicalHistoryInput), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"        this.value \u003d medicalHistoryInput;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"     * Returns true if a given string is a valid medical history.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    public static boolean isValidMedicalHistory(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        if (!(other instanceof MedicalHistory)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        MedicalHistory otherMedicalHistory \u003d (MedicalHistory) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        return value.equals(otherMedicalHistory.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"    public MedicalHistory getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"        return new MedicalHistory(this.value);","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Kokseng1":3,"angkyakdifp":65}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"    public Name getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"        return new Name(this.fullName);","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":4,"-":67}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    private final Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"    private final Set\u003cMedicalHistory\u003e medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    public Patient(Name name, Phone phone, Email email, Set\u003cTag\u003e tags, Age age,","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"                   Set\u003cMedicalHistory\u003e medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"        this.medicalHistory \u003d medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    public Age getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        return age;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"    public Set\u003cMedicalHistory\u003e getMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        String stringToAdd \u003d \", age\u003d\" + age + \", medical history\u003d\" + medicalHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"        return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        return super.equals(other)","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"                \u0026\u0026 age.equals(otherPatient.getAge())","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"                \u0026\u0026 medicalHistory.equals(otherPatient.medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if both patients have the same name.","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"        if (otherPerson instanceof Patient) {","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"            return otherPerson.getName().equals(getName());","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"        return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"     * creates another instance of Patient with the same field values","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"     * @return","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"    public Person getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"        Set\u003cMedicalHistory\u003e medicalHistoriesCopy \u003d new HashSet\u003cMedicalHistory\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"        for (MedicalHistory medicalHistoryOriginal : this.medicalHistory) {","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"            MedicalHistory copy \u003d medicalHistoryOriginal.getCopy();","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"            medicalHistoriesCopy.add(copy);","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"        Set\u003cTag\u003e tagCopies \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"        for (Tag originalTag : super.getTags()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"            Tag copy \u003d originalTag.getCopy();","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"            tagCopies.add(copy);","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"        return new Patient(","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"                super.getName().getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"                super.getPhone().getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"                super.getEmail().getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"                tagCopies,","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"                this.age.getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"                medicalHistoriesCopy","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"        );","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":28,"vansh284":33,"angkyakdifp":21,"alvinlim277":21}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" * Represents a Person in the location book.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public abstract class Person {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    public abstract boolean isSamePerson(Person otherPerson);","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"    public abstract Person getCopy();","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":1,"vansh284":1,"-":91,"alvinlim277":5}},{"path":"src/main/java/seedu/address/model/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" * This enum encapsulates the types of people that the address book can deal with.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"public enum PersonType {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    PATIENT(person -\u003e person instanceof Patient), SPECIALIST(person -\u003e person instanceof Specialist);","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    /** {@code Predicate} that evaluates to true when {@code Person} matches the {@code PersonType}*/","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    private final Predicate\u003cPerson\u003e searchPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    PersonType(Predicate\u003cPerson\u003e searchPredicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"        this.searchPredicate \u003d searchPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public Predicate\u003cPerson\u003e getSearchPredicate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        return searchPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":7,"alvinlim277":15}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    public Phone getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        return new Phone(this.value);","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":4,"-":61}},{"path":"src/main/java/seedu/address/model/person/Specialist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * Represents a Specialist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"public class Specialist extends Person {","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    private final Specialty specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    private final Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    public Specialist(Name name, Phone phone, Email email, Location location, Set\u003cTag\u003e tags, Specialty specialty) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        String stringToAdd \u003d \", location\u003d\" + location + \", specialty\u003d\" + specialty;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"     * Returns true if the other object is a specialist and have the same identity and data fields.","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"        if (!(other instanceof Specialist)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        Specialist otherSpecialist \u003d (Specialist) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        return super.equals(other)","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"                \u0026\u0026 location.equals(otherSpecialist.location)","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                \u0026\u0026 specialty.equals(otherSpecialist.specialty);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        return location;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    public Specialty getSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        return specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if both specialists have the same name.","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"     * This defines a weaker notion of equality between two specialists.","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        if (otherPerson instanceof Specialist) {","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"            return otherPerson.getName().equals(getName());","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"        return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"    public Specialist getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"        Set\u003cTag\u003e tagCopies \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        for (Tag originalTag : super.getTags()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"            Tag copy \u003d originalTag.getCopy();","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"            tagCopies.add(copy);","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"        return new Specialist(","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"                super.getName().getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"                super.getPhone().getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"                super.getEmail().getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"                this.location.getCopy(),","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"                tagCopies,","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"                this.getSpecialty().getCopy()","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"        );","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":41,"vansh284":26,"alvinlim277":28}},{"path":"src/main/java/seedu/address/model/person/Specialty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":" * Represents a Specialist\u0027s specialty in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"public class Specialty {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"            \"Specialty should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    /*","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"     * The first character of the Specialty must not be a whitespace,","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    public final String value;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     * @param specialtyInput A valid specialty.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    public Specialty(String specialtyInput) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        requireNonNull(specialtyInput);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        checkArgument(isValidSpecialty(specialtyInput), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        value \u003d specialtyInput;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"     * Returns true if a given string is a valid specialty.","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    public static boolean isValidSpecialty(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        if (!(other instanceof Specialty)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        Specialty otherSpecialty \u003d (Specialty) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"        return value.equals(otherSpecialty.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"    public Specialty getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"        return new Specialty(this.value);","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"Kokseng1":68}},{"path":"src/main/java/seedu/address/model/person/predicates/AgeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * Tests that a {@code Patient}\u0027s {@code Age} matches any of the keywords given.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class AgeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    public AgeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        if (!(person instanceof Patient)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        // It is safe to type cast Person to Patient due to the guard clause above.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        Patient patient \u003d (Patient) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getAge().value, keyword));","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        if (!(other instanceof AgeContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        AgeContainsKeywordsPredicate otherAgeContainsKeywordsPredicate \u003d (AgeContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        return keywords.equals(otherAgeContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"vansh284":53}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"                .anyMatch(keyword -\u003e StringUtil.wordsContainSubstringIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":11,"-":34,"alvinlim277":1}},{"path":"src/main/java/seedu/address/model/person/predicates/LocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":" * Tests that a {@code Person}\u0027s {@code Location} matches any of the keywords given.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"public class LocationContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    public LocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        if (!(person instanceof Specialist)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        // It is safe to type cast Person to Specialist due to the guard clause above.","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        Specialist specialist \u003d (Specialist) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"                        StringUtil.wordsContainSubstringIgnoreCase(specialist.getLocation().value, keyword));","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof LocationContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        LocationContainsKeywordsPredicate otherLocationContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"                (LocationContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        return keywords.equals(otherLocationContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":10,"-":29,"alvinlim277":16}},{"path":"src/main/java/seedu/address/model/person/predicates/MedHistoryContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Patient}\u0027s {@code Medical History} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"public class MedHistoryContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public MedHistoryContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        if (!(person instanceof Patient)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        // It is safe to type cast Person to Patient due to the guard clause above.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        Patient patient \u003d (Patient) person;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"        return patient.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"                .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"                .map(medicalHistory -\u003e keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                        .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"                        .anyMatch(keyword -\u003e StringUtil.wordsContainSubstringIgnoreCase(medicalHistory.value, keyword)))","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"                .reduce(false, (x, y) -\u003e x || y);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof MedHistoryContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        MedHistoryContainsKeywordsPredicate otherMedHistoryContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"                (MedHistoryContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherMedHistoryContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":52,"angkyakdifp":5,"alvinlim277":1}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"                .anyMatch(keyword -\u003e StringUtil.wordsContainSubstringIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":2,"-":42,"alvinlim277":1}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"                .anyMatch(keyword -\u003e StringUtil.wordsContainSubstringIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        PhoneContainsKeywordsPredicate otherPhoneContainsKeywordsPredicate \u003d (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherPhoneContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":14,"-":31,"alvinlim277":1}},{"path":"src/main/java/seedu/address/model/person/predicates/SpecialtyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Specialist}\u0027s {@code Specialty} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"public class SpecialtyContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public SpecialtyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        if (!(person instanceof Specialist)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        // It is safe to type cast Person to Specialist due to the guard clause above.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        Specialist specialist \u003d (Specialist) person;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"                        StringUtil.wordsContainSubstringIgnoreCase(specialist.getSpecialty().value, keyword));","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof SpecialtyContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        SpecialtyContainsKeywordsPredicate otherSpecialtyContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"                (SpecialtyContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherSpecialtyContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":55,"alvinlim277":2}},{"path":"src/main/java/seedu/address/model/person/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"        return person.getTags()","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"                .stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"                .map(tag -\u003e keywords","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"                        .stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)))","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"                .reduce(false, (x, y) -\u003e x || y);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof TagsContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        TagsContainsKeywordsPredicate otherTagsContainsKeywordsPredicate \u003d (TagsContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherTagsContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":50}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"    public Tag getCopy() {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"        return new Tag(this.tagName);","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":3,"-":62}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"                getTagSet(\"friends\"), new Age(\"24\"), getMedicalHistorySet(\"Diabetes\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"            new Specialist(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"                new Location(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Specialty(\"Physiotherapist\")),","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                getTagSet(\"neighbours\"), new Age(\"114\"), getMedicalHistorySet(\"Anemia\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"                getTagSet(\"family\"), new Age(\"9\"), getMedicalHistorySet(\"Osteoporosis\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"            new Specialist(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"                new Location(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                getTagSet(\"classmates\"), new Specialty(\"Orthopaedic\")),","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"            new Specialist(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"                new Location(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                getTagSet(\"colleagues\"), new Specialty(\"Dermatology\"))","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"     * Returns a medical history set containing the list of strings given.","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"    public static Set\u003cMedicalHistory\u003e getMedicalHistorySet(String... strings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"                .map(MedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Kokseng1":6,"vansh284":7,"angkyakdifp":12,"-":41,"alvinlim277":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMedicalHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":" * Jackson-friendly version of {@link MedicalHistory}.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"class JsonAdaptedMedicalHistory {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"    private final String medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"     * Constructs a {@code JsonAdaptedMedicalHistory} with the given {@code medicalHistory}.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"    public JsonAdaptedMedicalHistory(String medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"        this.medicalHistory \u003d medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"     * Converts a given {@code MedicalHistory} into this class for Jackson use.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"    public JsonAdaptedMedicalHistory(MedicalHistory source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory \u003d source.value;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"    @JsonValue","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    public String getTagName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"     * Converts this Jackson-friendly adapted medical history object into the model\u0027s {@code MedicalHistory} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted medical history.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"    public MedicalHistory toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        if (!MedicalHistory.isValidMedicalHistory(medicalHistory)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"            throw new IllegalValueException(MedicalHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        return new MedicalHistory(medicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"angkyakdifp":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"class JsonAdaptedPatient extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    private final String age;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"    private final List\u003cJsonAdaptedMedicalHistory\u003e medicalHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"age\") String age,","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"                              @JsonProperty(\"MedicalHistory\") List\u003cJsonAdaptedMedicalHistory\u003e medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"        if (medicalHistory !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"            this.medicalHistory.addAll(medicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        super(source);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        this.age \u003d source.getAge().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory.addAll(source.getMedicalHistory().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"                .map(JsonAdaptedMedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"    public List\u003cJsonAdaptedMedicalHistory\u003e getMedicalHistory() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public String getAge() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                    Age.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        return age;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"angkyakdifp"},"content":"        final List\u003cMedicalHistory\u003e patientMedicalHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"        for (JsonAdaptedMedicalHistory medicalHistory: getMedicalHistory()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"            patientMedicalHistory.add(medicalHistory.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"        final Phone modelPhone \u003d new Phone(getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"        final Age age \u003d new Age(getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"angkyakdifp"},"content":"        final Set\u003cMedicalHistory\u003e medicalHistory \u003d new HashSet\u003c\u003e(patientMedicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelTags, age, medicalHistory);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":53,"angkyakdifp":23,"alvinlim277":11}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"abstract class JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    public abstract Person toModelType() throws IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public String getName() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        return name;","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    public String getPhone() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"        return phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"    public String getEmail() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"        return email;","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"        return tags;","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"vansh284":13,"-":83,"alvinlim277":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSpecialist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"class JsonAdaptedSpecialist extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    private final String specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    private final String location;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    public JsonAdaptedSpecialist(Specialist source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        super(source);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"        specialty \u003d source.getSpecialty().value;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    public JsonAdaptedSpecialist(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"                                 @JsonProperty(\"email\") String email, @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"                                 @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"                                 @JsonProperty(\"Specialty\") String specialty) {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    public String getLocation() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        return location;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"    public String getSpecialty() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        if (specialty \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"                    Specialty.class.getSimpleName()));","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        if (!Specialty.isValidSpecialty(specialty)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            throw new IllegalValueException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"        return specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"     * Converts this Jackson-friendly adapted specialist object into the model\u0027s {@code Specialist} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted specialist.","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"    public Specialist toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        final Phone modelPhone \u003d new Phone(getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"        final Location modelLocation \u003d new Location(getLocation());","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"        final Specialty modelSpecialty \u003d new Specialty(getSpecialty());","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        return new Specialist(modelName, modelPhone, modelEmail, modelLocation, modelTags, modelSpecialty);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":27,"vansh284":28,"alvinlim277":25}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    private final List\u003cJsonAdaptedSpecialist\u003e specialists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients,","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"                                       @JsonProperty(\"specialists\") List\u003cJsonAdaptedSpecialist\u003e specialists) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        this.specialists.addAll(specialists);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        patients.addAll(source.getPersonList().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"                .filter(p -\u003e p instanceof Patient)","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"                .map(p -\u003e new JsonAdaptedPatient((Patient) p))","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        specialists.addAll(source.getPersonList().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"                .filter(p -\u003e p instanceof Specialist)","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                .map(p -\u003e new JsonAdaptedSpecialist((Specialist) p))","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : patients) {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : specialists) {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"vansh284":24,"-":55}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    private final KeyPressExecutor keyUpExecutor;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    private final KeyPressExecutor keyDownExecutor;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    public CommandBox(CommandExecutor commandExecutor, KeyPressExecutor keyUpExecutor, KeyPressExecutor","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"            keyDownExecutor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        this.keyUpExecutor \u003d keyUpExecutor;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        this.keyDownExecutor \u003d keyDownExecutor;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        commandTextField.setOnKeyPressed(this::handleOnKeyPressed);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"     * Handles the key pressed event.","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    private void handleOnKeyPressed(KeyEvent event) {","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"        if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"            commandTextField.setText(keyUpExecutor.executeKey(commandTextField.getText()));","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"            commandTextField.positionCaret(commandTextField.getText().length());","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"        } else if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"            commandTextField.setText(keyDownExecutor.executeKey(commandTextField.getText()));","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"            commandTextField.positionCaret(commandTextField.getText().length());","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"     * Represents a function that executes a key press.","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"    public interface KeyPressExecutor {","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"        /**","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"         * Executes the key press and returns the result String.","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"         */","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"        String executeKey(String commandText);","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"vansh284":31,"-":83}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w13-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Gavino3o":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"    private ViewPersonPanel viewPersonPanel;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"    private StackPane viewPersonPanelPlaceholder;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"    private StackPane statusbarPlaceholder2;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    private Scene scene;","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"        addThemeListener();","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"angkyakdifp"},"content":"        viewPersonPanel \u003d ViewPatientPanel.updatePerson(logic.getSelectedPerson());","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"angkyakdifp"},"content":"        if (viewPersonPanel !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"angkyakdifp"},"content":"            viewPersonPanelPlaceholder.getChildren().add(viewPersonPanel.getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand,","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"                logic::getPrevCommandString, logic::getPassedCommandString);","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"vansh284"},"content":"            logic.addCommandString(commandText);","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"angkyakdifp"},"content":"            viewPersonPanel \u003d ViewPatientPanel.updatePerson(logic.getSelectedPerson());","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"angkyakdifp"},"content":"            viewPersonPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"alvinlim277"},"content":"            if (viewPersonPanel !\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"angkyakdifp"},"content":"                viewPersonPanelPlaceholder.getChildren().add(viewPersonPanel.getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":225,"author":{"gitId":"vansh284"},"content":"    private void addThemeListener() {","lastModifiedDate":"2023-10-29"},{"lineNumber":226,"author":{"gitId":"vansh284"},"content":"        logic.addThemeListener(new ChangeListener\u003cTheme\u003e() {","lastModifiedDate":"2023-10-29"},{"lineNumber":227,"author":{"gitId":"vansh284"},"content":"            @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":228,"author":{"gitId":"vansh284"},"content":"            public void changed(ObservableValue\u003c? extends Theme\u003e observable, Theme oldValue, Theme newValue) {","lastModifiedDate":"2023-10-29"},{"lineNumber":229,"author":{"gitId":"vansh284"},"content":"                if (oldValue \u003d\u003d newValue) {","lastModifiedDate":"2023-10-29"},{"lineNumber":230,"author":{"gitId":"vansh284"},"content":"                    return;","lastModifiedDate":"2023-10-29"},{"lineNumber":231,"author":{"gitId":"vansh284"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":232,"author":{"gitId":"vansh284"},"content":"                scene.getStylesheets().clear();","lastModifiedDate":"2023-10-29"},{"lineNumber":233,"author":{"gitId":"vansh284"},"content":"                scene.getStylesheets().add(getClass().getResource(\"/view/Extensions.css\").toExternalForm());","lastModifiedDate":"2023-10-29"},{"lineNumber":234,"author":{"gitId":"vansh284"},"content":"                if (newValue.equals(Theme.DARK)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":235,"author":{"gitId":"vansh284"},"content":"                    scene.getStylesheets().add(getClass().getResource(\"/view/DarkTheme.css\").toExternalForm());","lastModifiedDate":"2023-10-29"},{"lineNumber":236,"author":{"gitId":"vansh284"},"content":"                } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":237,"author":{"gitId":"vansh284"},"content":"                    scene.getStylesheets().add(getClass().getResource(\"/view/LightTheme.css\").toExternalForm());","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"vansh284"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"vansh284"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"vansh284":29,"angkyakdifp":16,"-":195,"alvinlim277":2}},{"path":"src/main/java/seedu/address/ui/MedicalHistoryView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"public class MedicalHistoryView extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    private static final String fxml \u003d \"MedicalHistoryView.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"    private Label medicalHistory;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    private Label id;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"     * Creates a {@code PersonCode} with the given {@code Person}.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    public MedicalHistoryView(MedicalHistory medicalHistory, int displayedIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"        super(fxml);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"        this.medicalHistory.setText(medicalHistory.value);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"        this.id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":26}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vansh284":1,"angkyakdifp":2,"-":53}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"    private Label personType;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        // Solution below adapted from AI tool output","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        // Set the text initially to handle the case when personList is empty","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"            personType.setText(\"No data found\");","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        } else if (personList.get(0) instanceof Patient) {","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            personType.setText(\"Patients\");","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"            personType.setText(\"Specialists\");","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        personList.addListener(","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"                new ListChangeListener\u003cPerson\u003e() {","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"                    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"                    public void onChanged(Change\u003c? extends Person\u003e c) {","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"                        if (personList.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"                            personType.setText(\"No data found\");","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"                        } else if (personList.get(0) instanceof Patient) {","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"                            personType.setText(\"Patients\");","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"                        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"                            personType.setText(\"Specialists\");","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"                        }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"                    }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        );","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"angkyakdifp":3,"vansh284":1,"-":48,"alvinlim277":25}},{"path":"src/main/java/seedu/address/ui/ViewPatientPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import com.sun.javafx.collections.ObservableListWrapper;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":" * Panel containing the patients details.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"public class ViewPatientPanel extends ViewPersonPanel {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"    private static final String card \u003d \"ViewPatientPanel.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    private Label age;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    private ListView\u003cMedicalHistory\u003e medicalHistoryListView;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"     * Creates a {@code PatientCard} with the given {@code patient} and index to display.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"    public ViewPatientPanel(Patient patient) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"        super(patient, card);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"        age.setText(\": \" + patient.getAge().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistoryListView.setItems(new ObservableListWrapper\u003c\u003e(patient.getMedicalHistory()","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"                .stream().collect(Collectors.toList())));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistoryListView.setCellFactory(listView -\u003e new MedicalHistoryViewCell());","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"    class MedicalHistoryViewCell extends ListCell\u003cMedicalHistory\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"        protected void updateItem(MedicalHistory medicalHistory, boolean empty) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"            super.updateItem(medicalHistory, empty);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"            if (empty || medicalHistory \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"                setText(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"                setGraphic(new MedicalHistoryView(medicalHistory, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":52}},{"path":"src/main/java/seedu/address/ui/ViewPersonPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":" * Panel containing the person details.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"public class ViewPersonPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"    public final Person person;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"    private Label personType;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"    private Label name;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    private Label phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"    private Label email;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    private FlowPane viewTags;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"    public ViewPersonPanel(Person person, String fxml) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        super(fxml);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        phone.setText(\": \" + person.getPhone().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"        email.setText(\": \" + person.getEmail().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"                .forEach(tag -\u003e viewTags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"     * Update the person that are going to be viewed.","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"     * @param person the person that is going to be viewed","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"     * @return updated version of ViewPersonPanel","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"    public static ViewPersonPanel updatePerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"            return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"            return new ViewPatientPanel((Patient) person);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"            return new ViewSpecialistPanel((Specialist) person);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":69}},{"path":"src/main/java/seedu/address/ui/ViewSpecialistPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":" * Panel containing the specialist details.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"public class ViewSpecialistPanel extends ViewPersonPanel {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"    private static final String card \u003d \"ViewSpecialistPanel.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    private Label specialty;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"    // Label is named as such due to \u0027location\u0027 being a reserved keyword.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    private Label spLocation;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"     * Creates a {@code SpecialistCard} with the given {@code specialist} and index to display.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"    public ViewSpecialistPanel(Specialist specialist) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"        super(specialist, card);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        spLocation.setText(\": \" + specialist.getLocation().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"        specialty.setText(\": \" + specialist.getSpecialty().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":28}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"    background-color: #1b3a4b; /* Used in the default.html file */","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    -fx-base: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    -fx-control-inner-background: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #1b3a4b;","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #272640;","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #312244;","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #006466;","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"angkyakdifp"},"content":".cell_view_name_label {","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-size: 40px;","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"angkyakdifp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"angkyakdifp"},"content":".cell_view_medicalHistory_label {","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-size: 30px;","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"angkyakdifp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"angkyakdifp"},"content":".cell_view_field_label {","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"angkyakdifp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"     -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"     -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"vansh284"},"content":"     -fx-border-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":171,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2023-10-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":205,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":229,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"vansh284"},"content":"  -fx-text-fill: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #212f45;","lastModifiedDate":"2023-10-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent #1b3a4b transparent #1b3a4b;","lastModifiedDate":"2023-10-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: #000000 #000000 #ffffff #000000;","lastModifiedDate":"2023-10-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":355,"author":{"gitId":"vansh284"},"content":"    fx-border-color: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent, #1b3a4b, transparent, #1b3a4b;","lastModifiedDate":"2023-10-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":377,"author":{"gitId":"angkyakdifp"},"content":"#medicalHistory {","lastModifiedDate":"2023-10-20"},{"lineNumber":378,"author":{"gitId":"angkyakdifp"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-20"},{"lineNumber":379,"author":{"gitId":"angkyakdifp"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-20"},{"lineNumber":380,"author":{"gitId":"angkyakdifp"},"content":"    -fx-width: 100%;","lastModifiedDate":"2023-10-20"},{"lineNumber":381,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":382,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":383,"author":{"gitId":"angkyakdifp"},"content":"#medicalHistory .label {","lastModifiedDate":"2023-10-20"},{"lineNumber":384,"author":{"gitId":"angkyakdifp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-20"},{"lineNumber":385,"author":{"gitId":"angkyakdifp"},"content":"    -fx-background-color: #0a6a0c;","lastModifiedDate":"2023-10-20"},{"lineNumber":386,"author":{"gitId":"angkyakdifp"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-20"},{"lineNumber":387,"author":{"gitId":"angkyakdifp"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-20"},{"lineNumber":388,"author":{"gitId":"angkyakdifp"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-20"},{"lineNumber":389,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-10-20"},{"lineNumber":390,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":391,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":392,"author":{"gitId":"angkyakdifp"},"content":"#viewTags {","lastModifiedDate":"2023-10-25"},{"lineNumber":393,"author":{"gitId":"angkyakdifp"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-25"},{"lineNumber":394,"author":{"gitId":"angkyakdifp"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-25"},{"lineNumber":395,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":396,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":397,"author":{"gitId":"angkyakdifp"},"content":"#viewTags .label {","lastModifiedDate":"2023-10-25"},{"lineNumber":398,"author":{"gitId":"angkyakdifp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-25"},{"lineNumber":399,"author":{"gitId":"angkyakdifp"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-25"},{"lineNumber":400,"author":{"gitId":"angkyakdifp"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-25"},{"lineNumber":401,"author":{"gitId":"angkyakdifp"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-25"},{"lineNumber":402,"author":{"gitId":"angkyakdifp"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-25"},{"lineNumber":403,"author":{"gitId":"angkyakdifp"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2023-10-25"},{"lineNumber":404,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":405,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":406,"author":{"gitId":"vansh284"},"content":"#listPanelTitle {","lastModifiedDate":"2023-10-29"},{"lineNumber":407,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":408,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":409,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #3e1f47;","lastModifiedDate":"2023-10-29"},{"lineNumber":410,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":411,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":412,"author":{"gitId":"vansh284"},"content":".viewPersonPanel {","lastModifiedDate":"2023-10-29"},{"lineNumber":413,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":414,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":415,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":416,"author":{"gitId":"vansh284"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2023-10-29"},{"lineNumber":417,"author":{"gitId":"vansh284"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-10-29"},{"lineNumber":418,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":419,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":420,"author":{"gitId":"vansh284"},"content":".personListView {","lastModifiedDate":"2023-10-29"},{"lineNumber":421,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":422,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"vansh284":60,"angkyakdifp":47,"-":315}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: #d6120f !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vansh284":1,"-":19}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":".background {","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"    background-color: #52b69a; /* Used in the default.html file */","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":".label {","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":".label-bright {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":".label-header {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":".text-field {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":".tab-pane {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":".table-view {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    -fx-base: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    -fx-control-inner-background: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        transparent","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        transparent","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":".split-pane {","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":".list-view {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":".list-cell {","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #52b69a;","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #4ea8de;","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #56cfe1;","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #99d98c;","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":".list-cell .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":".cell_big_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":".cell_small_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"vansh284"},"content":".cell_view_name_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 40px;","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":".cell_view_medicalHistory_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 30px;","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":".cell_view_field_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"vansh284"},"content":".stack-pane {","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"     -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"vansh284"},"content":".pane-with-border {","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"     -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"vansh284"},"content":"     -fx-border-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"vansh284"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"vansh284"},"content":".status-bar {","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"vansh284"},"content":".result-display {","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":171,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"vansh284"},"content":".result-display .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":178,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-10-29"},{"lineNumber":179,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":180,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":181,"author":{"gitId":"vansh284"},"content":".status-bar .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-29"},{"lineNumber":185,"author":{"gitId":"vansh284"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"vansh284"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-29"},{"lineNumber":189,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":191,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"vansh284"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"vansh284"},"content":".grid-pane {","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-29"},{"lineNumber":202,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":204,"author":{"gitId":"vansh284"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-29"},{"lineNumber":205,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":207,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":208,"author":{"gitId":"vansh284"},"content":".context-menu {","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":210,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":211,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":212,"author":{"gitId":"vansh284"},"content":".context-menu .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":213,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":214,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":215,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":216,"author":{"gitId":"vansh284"},"content":".menu-bar {","lastModifiedDate":"2023-10-29"},{"lineNumber":217,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":218,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":219,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":220,"author":{"gitId":"vansh284"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":221,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":222,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-29"},{"lineNumber":223,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":224,"author":{"gitId":"vansh284"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-29"},{"lineNumber":225,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":226,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":227,"author":{"gitId":"vansh284"},"content":".menu .left-container {","lastModifiedDate":"2023-10-29"},{"lineNumber":228,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":229,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":230,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":231,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":232,"author":{"gitId":"vansh284"},"content":"/*","lastModifiedDate":"2023-10-29"},{"lineNumber":233,"author":{"gitId":"vansh284"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-29"},{"lineNumber":234,"author":{"gitId":"vansh284"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-29"},{"lineNumber":235,"author":{"gitId":"vansh284"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-29"},{"lineNumber":236,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":237,"author":{"gitId":"vansh284"},"content":".button {","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"vansh284"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"vansh284"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"vansh284"},"content":".button:hover {","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"vansh284"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"vansh284"},"content":"  -fx-background-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"vansh284"},"content":"  -fx-text-fill: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"vansh284"},"content":".button:focused {","lastModifiedDate":"2023-10-29"},{"lineNumber":259,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2023-10-29"},{"lineNumber":260,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":261,"author":{"gitId":"vansh284"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-29"},{"lineNumber":262,"author":{"gitId":"vansh284"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":263,"author":{"gitId":"vansh284"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":264,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":265,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":266,"author":{"gitId":"vansh284"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-29"},{"lineNumber":267,"author":{"gitId":"vansh284"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-29"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":269,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":270,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":271,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":272,"author":{"gitId":"vansh284"},"content":".button:default {","lastModifiedDate":"2023-10-29"},{"lineNumber":273,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-29"},{"lineNumber":274,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-29"},{"lineNumber":275,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":276,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":277,"author":{"gitId":"vansh284"},"content":".button:default:hover {","lastModifiedDate":"2023-10-29"},{"lineNumber":278,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-29"},{"lineNumber":279,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":280,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":281,"author":{"gitId":"vansh284"},"content":".dialog-pane {","lastModifiedDate":"2023-10-29"},{"lineNumber":282,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":283,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":284,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":285,"author":{"gitId":"vansh284"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-29"},{"lineNumber":286,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":287,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":288,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":289,"author":{"gitId":"vansh284"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-29"},{"lineNumber":290,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-29"},{"lineNumber":291,"author":{"gitId":"vansh284"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-29"},{"lineNumber":292,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":293,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":294,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":295,"author":{"gitId":"vansh284"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-29"},{"lineNumber":296,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":297,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":298,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":299,"author":{"gitId":"vansh284"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-29"},{"lineNumber":300,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-29"},{"lineNumber":301,"author":{"gitId":"vansh284"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-29"},{"lineNumber":302,"author":{"gitId":"vansh284"},"content":"    -fx-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":303,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":304,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":305,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":306,"author":{"gitId":"vansh284"},"content":".scroll-bar {","lastModifiedDate":"2023-10-29"},{"lineNumber":307,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":308,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":309,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":310,"author":{"gitId":"vansh284"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-29"},{"lineNumber":311,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #a9d6e5;","lastModifiedDate":"2023-10-29"},{"lineNumber":312,"author":{"gitId":"vansh284"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-29"},{"lineNumber":313,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":314,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":315,"author":{"gitId":"vansh284"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-29"},{"lineNumber":316,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":317,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":318,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":319,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":320,"author":{"gitId":"vansh284"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-29"},{"lineNumber":321,"author":{"gitId":"vansh284"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-29"},{"lineNumber":322,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":323,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":324,"author":{"gitId":"vansh284"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-29"},{"lineNumber":325,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-29"},{"lineNumber":326,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":327,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":328,"author":{"gitId":"vansh284"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-29"},{"lineNumber":329,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":330,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":331,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":332,"author":{"gitId":"vansh284"},"content":"#cardPane {","lastModifiedDate":"2023-10-29"},{"lineNumber":333,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":334,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":335,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":336,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":337,"author":{"gitId":"vansh284"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-29"},{"lineNumber":338,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-29"},{"lineNumber":339,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-10-29"},{"lineNumber":340,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":341,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":342,"author":{"gitId":"vansh284"},"content":"#commandTextField {","lastModifiedDate":"2023-10-29"},{"lineNumber":343,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent #52b69a transparent #52b69a;","lastModifiedDate":"2023-10-29"},{"lineNumber":344,"author":{"gitId":"vansh284"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":345,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: #ffffff #ffffff #000000 #ffffff;","lastModifiedDate":"2023-10-29"},{"lineNumber":346,"author":{"gitId":"vansh284"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":347,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":348,"author":{"gitId":"vansh284"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-29"},{"lineNumber":349,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-29"},{"lineNumber":350,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":351,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":352,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":353,"author":{"gitId":"vansh284"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-10-29"},{"lineNumber":354,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":355,"author":{"gitId":"vansh284"},"content":"    fx-border-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":356,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":357,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":358,"author":{"gitId":"vansh284"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":359,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: transparent, #52b69a, transparent, #52b69a;","lastModifiedDate":"2023-10-29"},{"lineNumber":360,"author":{"gitId":"vansh284"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":361,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":362,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":363,"author":{"gitId":"vansh284"},"content":"#tags {","lastModifiedDate":"2023-10-29"},{"lineNumber":364,"author":{"gitId":"vansh284"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-29"},{"lineNumber":365,"author":{"gitId":"vansh284"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-29"},{"lineNumber":366,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":367,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":368,"author":{"gitId":"vansh284"},"content":"#tags .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":369,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":370,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-29"},{"lineNumber":371,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-29"},{"lineNumber":372,"author":{"gitId":"vansh284"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":373,"author":{"gitId":"vansh284"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":374,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-29"},{"lineNumber":375,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":376,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":377,"author":{"gitId":"vansh284"},"content":"#medicalHistory {","lastModifiedDate":"2023-10-29"},{"lineNumber":378,"author":{"gitId":"vansh284"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-29"},{"lineNumber":379,"author":{"gitId":"vansh284"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-29"},{"lineNumber":380,"author":{"gitId":"vansh284"},"content":"    -fx-width: 100%;","lastModifiedDate":"2023-10-29"},{"lineNumber":381,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":382,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":383,"author":{"gitId":"vansh284"},"content":"#medicalHistory .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":384,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":385,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #0a6a0c;","lastModifiedDate":"2023-10-29"},{"lineNumber":386,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-29"},{"lineNumber":387,"author":{"gitId":"vansh284"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":388,"author":{"gitId":"vansh284"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":389,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-10-29"},{"lineNumber":390,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":391,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":392,"author":{"gitId":"vansh284"},"content":"#viewTags {","lastModifiedDate":"2023-10-29"},{"lineNumber":393,"author":{"gitId":"vansh284"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-29"},{"lineNumber":394,"author":{"gitId":"vansh284"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-29"},{"lineNumber":395,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":396,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":397,"author":{"gitId":"vansh284"},"content":"#viewTags .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":398,"author":{"gitId":"vansh284"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":399,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-29"},{"lineNumber":400,"author":{"gitId":"vansh284"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-29"},{"lineNumber":401,"author":{"gitId":"vansh284"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":402,"author":{"gitId":"vansh284"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":403,"author":{"gitId":"vansh284"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2023-10-29"},{"lineNumber":404,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":405,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":406,"author":{"gitId":"vansh284"},"content":"#listPanelTitle {","lastModifiedDate":"2023-10-29"},{"lineNumber":407,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":408,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":409,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: #34a0a4;","lastModifiedDate":"2023-10-29"},{"lineNumber":410,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":411,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":412,"author":{"gitId":"vansh284"},"content":".viewPersonPanel {","lastModifiedDate":"2023-10-29"},{"lineNumber":413,"author":{"gitId":"vansh284"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":414,"author":{"gitId":"vansh284"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":415,"author":{"gitId":"vansh284"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":416,"author":{"gitId":"vansh284"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2023-10-29"},{"lineNumber":417,"author":{"gitId":"vansh284"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-10-29"},{"lineNumber":418,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":419,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":420,"author":{"gitId":"vansh284"},"content":".personListView {","lastModifiedDate":"2023-10-29"},{"lineNumber":421,"author":{"gitId":"vansh284"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-29"},{"lineNumber":422,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"vansh284":422}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"         title\u003d\"DoConnek Pro\" minWidth\u003d\"900\" minHeight\u003d\"750\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    \u003cScene fx:id\u003d\"scene\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150\" minHeight\u003d\"100.0\" prefHeight\u003d\"150.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"          \u003cVBox minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"          \u003cVBox minWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"            \u003cStackPane fx:id\u003d\"viewPersonPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"angkyakdifp":17,"vansh284":1,"-":50}},{"path":"src/main/resources/view/MedicalHistoryView.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"            \u003cInsets left\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_view_field_label\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"        \u003cLabel fx:id\u003d\"medicalHistory\" text\u003d\"\\$first\" styleClass\u003d\"cell_view_field_label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":25}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"\u003cVBox fx:id\u003d\"personListPanel\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"  \u003cVBox fx:id\u003d\"listPanelTitle\" VBox.vgrow\u003d\"ALWAYS\" maxHeight\u003d\"40\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"      \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    \u003cLabel fx:id\u003d\"personType\" styleClass\u003d\"cell_view_medicalHistory_label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"  \u003cVBox minHeight\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkyakdifp":8,"vansh284":2,"-":7}},{"path":"src/main/resources/view/ViewPatientPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"\u003cVBox styleClass\u003d\"viewPersonPanel\" minWidth\u003d\"480.0\" HBox.hgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    \u003cVBox minWidth\u003d\"440.0\" prefWidth\u003d\"440.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"        \u003cVBox minWidth\u003d\"440.0\" prefWidth\u003d\"470.0 \" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"            \u003cLabel fx:id\u003d\"personType\" styleClass\u003d\"patientType, cell_view_field_label\" text\u003d\"Patient\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"                \u003cInsets bottom\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"            \u003cLabel minHeight\u003d\"70\" id\u003d\"name\" fx:id\u003d\"name\" styleClass\u003d\"cell_view_name_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"            \u003cFlowPane fx:id\u003d\"viewTags\" style\u003d\"-fx-font-size: 15;\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel minWidth\u003d\"200.0\" styleClass\u003d\"cell_view_field_label\" text\u003d\"Phone number\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_view_field_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"                    \u003cInsets bottom\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel minWidth\u003d\"200.0\" styleClass\u003d\"cell_view_field_label\" text\u003d\"Email\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_view_field_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"                    \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel minWidth\u003d\"200.0\" styleClass\u003d\"cell_view_field_label\" text\u003d\"Age\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_view_field_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"                    \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"25.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"            \u003cLabel styleClass\u003d\"cell_view_medicalHistory_label\" text\u003d\"Medical History: \" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"                \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        \u003cListView fx:id\u003d\"medicalHistoryListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":53,"vansh284":3}},{"path":"src/main/resources/view/ViewSpecialistPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"\u003cVBox styleClass\u003d\"viewPersonPanel\" minWidth\u003d\"480.0\" HBox.hgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"    \u003cVBox minWidth\u003d\"440.0\" prefWidth\u003d\"440.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"        \u003cVBox minWidth\u003d\"440.0\" prefWidth\u003d\"470.0 \" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"            \u003cLabel fx:id\u003d\"personType\" styleClass\u003d\"specialistType, cell_view_field_label\" text\u003d\"Specialist\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"                \u003cInsets bottom\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"            \u003cLabel minHeight\u003d\"70\" id\u003d\"name\" fx:id\u003d\"name\" styleClass\u003d\"cell_view_name_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"            \u003cFlowPane fx:id\u003d\"viewTags\" style\u003d\"-fx-font-size: 15;\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel minWidth\u003d\"200.0\" styleClass\u003d\"cell_view_field_label\" text\u003d\"Phone number\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_view_field_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"                    \u003cInsets bottom\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel minWidth\u003d\"200.0\" styleClass\u003d\"cell_view_field_label\" text\u003d\"Email\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_view_field_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"                    \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel minWidth\u003d\"200.0\" styleClass\u003d\"cell_view_field_label\" text\u003d\"Location\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel fx:id\u003d\"spLocation\" styleClass\u003d\"cell_view_field_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"                    \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel minWidth\u003d\"200.0\" styleClass\u003d\"cell_view_field_label\" text\u003d\"Specialty\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"                \u003cLabel fx:id\u003d\"specialty\" styleClass\u003d\"cell_view_field_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"                    \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"25.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":52,"vansh284":2}},{"path":"src/test/java/seedu/address/commons/core/ShortcutSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMAND_WORD_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMAND_WORD_2;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_ALIAS_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_ALIAS_2;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"public class ShortcutSettingsTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"        ShortcutSettings shortcutSettings1 \u003d new ShortcutSettings();","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"        shortcutSettings1.registerShortcut(SHORTCUT_ALIAS_1, COMMAND_WORD_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        ShortcutSettings shortcutSettings2 \u003d new ShortcutSettings();","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        shortcutSettings2.registerShortcut(SHORTCUT_ALIAS_2, COMMAND_WORD_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(shortcutSettings1.equals(shortcutSettings1));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        ShortcutSettings test \u003d new ShortcutSettings();","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        test.registerShortcut(SHORTCUT_ALIAS_1, COMMAND_WORD_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(shortcutSettings1.equals(test));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(shortcutSettings1.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(shortcutSettings1.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        // different mappings -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(shortcutSettings1.equals(shortcutSettings2));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(shortcutSettings1.equals(new ShortcutSettings()));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"alvinlim277":39}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"                StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", () -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"                StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"alvinlim277"},"content":"    //---------------- Tests for wordsContainSubstringIgnoreCase --------------------------------------","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"alvinlim277"},"content":"    /*","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"alvinlim277"},"content":"     * Invalid equivalence partitions for word: null, empty","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"alvinlim277"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"alvinlim277"},"content":"     * The three test cases below test one invalid input at a time.","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"alvinlim277"},"content":"    public void wordsContainSubstringIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"alvinlim277"},"content":"                StringUtil.wordsContainSubstringIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"alvinlim277"},"content":"    public void wordsContainSubstringIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalArgumentException.class, \"Substring parameter cannot be empty\", () -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"alvinlim277"},"content":"                StringUtil.wordsContainSubstringIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"alvinlim277"},"content":"    public void wordsContainSubstringIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"alvinlim277"},"content":"                StringUtil.wordsContainSubstringIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"alvinlim277"},"content":"    /*","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"alvinlim277"},"content":"     * Valid equivalence partitions for substring:","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"alvinlim277"},"content":"     *   - any substring","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"     *   - substrings containing symbols/numbers","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"alvinlim277"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"alvinlim277"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"alvinlim277"},"content":"     *   - empty string","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"alvinlim277"},"content":"     *   - one word","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"alvinlim277"},"content":"     *   - multiple words","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"alvinlim277"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"alvinlim277"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"alvinlim277"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"alvinlim277"},"content":"     *   - last word in sentence","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"alvinlim277"},"content":"     *   - middle word in sentence","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"alvinlim277"},"content":"     *   - matches multiple words","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"alvinlim277"},"content":"     *   - matches part of a word","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"alvinlim277"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"alvinlim277"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"alvinlim277"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"alvinlim277"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"alvinlim277"},"content":"    public void wordsContainSubstringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"alvinlim277"},"content":"        // Empty sentence","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(StringUtil.wordsContainSubstringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(StringUtil.wordsContainSubstringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"alvinlim277"},"content":"        // Matches a partial word in the sentence","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"alvinlim277"},"content":"        // Sentence word bigger than query word","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(StringUtil.wordsContainSubstringIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"alvinlim277"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(StringUtil.wordsContainSubstringIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"alvinlim277"},"content":"        // Matches partial word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(StringUtil.wordsContainSubstringIgnoreCase(\"aaa bBb ccc\", \"Bb\")); // First word (boundary case)","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(StringUtil.wordsContainSubstringIgnoreCase(\"aaa bBb ccc@1\", \"C@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"alvinlim277"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(StringUtil.wordsContainSubstringIgnoreCase(\"  AAA   bBb   ccc  \", \"aa\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"alvinlim277"},"content":"        // Only one word in sentence (boundary case)","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(StringUtil.wordsContainSubstringIgnoreCase(\"Aaa\", \"aa\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(StringUtil.wordsContainSubstringIgnoreCase(\"aaa bbb ccc\", \"  cc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"alvinlim277"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(StringUtil.wordsContainSubstringIgnoreCase(\"AAA bBb ccc  bbb\", \"bB\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":140,"alvinlim277":81}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_TYPE_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" \" + CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"        assertCommandSuccess(listCommand, ListCommand.PATIENT_MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"    public void getSelectedPerson_null_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(logic.getSelectedPerson(), null);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"vansh284"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + PERSON_TYPE_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"alvinlim277"},"content":"                + EMAIL_DESC_AMY + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"vansh284"},"content":"        Person expectedPerson \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Kokseng1":2,"vansh284":7,"angkyakdifp":6,"-":167,"alvinlim277":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(PersonType.PATIENT.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"                expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"    public void execute_newSpecialist_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        Person validPerson \u003d new SpecialistBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Kokseng1":3,"vansh284":2,"-":50,"alvinlim277":10}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.commons.core.ShortcutSettings;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        Person alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        Person bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"     * A default model stub that have all of the methods failing","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"alvinlim277"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"alvinlim277"},"content":"        public ShortcutSettings getShortcutSettings() {","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"alvinlim277"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"alvinlim277"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"alvinlim277"},"content":"        public void setShortcutSettings(ShortcutSettings shortcutSettings) {","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"alvinlim277"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"alvinlim277"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"alvinlim277"},"content":"        public String registerShortcut(ShortcutAlias shortcutAlias, CommandWord commandWord) {","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"alvinlim277"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"alvinlim277"},"content":"        public String removeShortcut(ShortcutAlias shortcutAlias) {","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"alvinlim277"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"alvinlim277"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"alvinlim277"},"content":"        public String getShortcut(String alias) {","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"alvinlim277"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"angkyakdifp"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"angkyakdifp"},"content":"        public Person getSelectedPerson() {","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"angkyakdifp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"angkyakdifp"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"angkyakdifp"},"content":"        public void updateSelectedPerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"angkyakdifp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"angkyakdifp"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"angkyakdifp"},"content":"        public boolean isSelectedEmpty() {","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"angkyakdifp"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"Kokseng1"},"content":"        public boolean hasHistory() {","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"Kokseng1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"Kokseng1"},"content":"        public boolean canRedo() {","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"Kokseng1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"Kokseng1"},"content":"        public void undo() {","lastModifiedDate":"2023-11-06"},{"lineNumber":216,"author":{"gitId":"Kokseng1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"Kokseng1"},"content":"        public void redo() {","lastModifiedDate":"2023-11-06"},{"lineNumber":221,"author":{"gitId":"Kokseng1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"Kokseng1"},"content":"        public void commit() {","lastModifiedDate":"2023-11-06"},{"lineNumber":226,"author":{"gitId":"Kokseng1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"vansh284"},"content":"        public String getPrevCommandString(String currentCommandString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"vansh284"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"vansh284"},"content":"        public String getPassedCommandString(String currentCommandString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"vansh284"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"vansh284"},"content":"        public void addCommandString(String commandString) {","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"vansh284"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"vansh284"},"content":"        public void setTheme(Theme theme) {","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"vansh284"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"vansh284"},"content":"        public void addThemeListener(ChangeListener\u003c? super Theme\u003e changeListener) {","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"vansh284"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"alvinlim277"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":291,"author":{"gitId":"alvinlim277"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"alvinlim277"},"content":"            // Allow this method to be called as AddCommand::execute now affects the filtered list.","lastModifiedDate":"2023-10-16"},{"lineNumber":293,"author":{"gitId":"alvinlim277"},"content":"            return;","lastModifiedDate":"2023-10-16"},{"lineNumber":294,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":300,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":301,"author":{"gitId":"Kokseng1"},"content":"        /**","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"Kokseng1"},"content":"         * override ModelStub to not throw an error, but does nothing","lastModifiedDate":"2023-10-25"},{"lineNumber":303,"author":{"gitId":"Kokseng1"},"content":"         */","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"Kokseng1"},"content":"        public void commit() {","lastModifiedDate":"2023-11-06"},{"lineNumber":306,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Kokseng1":33,"vansh284":32,"angkyakdifp":12,"-":199,"alvinlim277":33}},{"path":"src/test/java/seedu/address/logic/commands/AddShortcutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"public class AddShortcutCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddShortcutCommand(null, null));","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    public void execute_newMapping_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand addShortcutCommand \u003d new AddShortcutCommand(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(AddShortcutCommand.MESSAGE_SUCCESS, \"del --\u003e delete\");","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(addShortcutCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    public void execute_duplicateAlias_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        ModelManager modelWithExistingMapping \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        modelWithExistingMapping.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand addShortcutCommand \u003d new AddShortcutCommand(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(ListCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(AddShortcutCommand.MESSAGE_SUCCESS, \"del --\u003e list\")","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"                + \"\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"                + String.format(AddShortcutCommand.MESSAGE_REPLACED, \"del --\u003e delete\");","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(ListCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        assertCommandSuccess(addShortcutCommand, modelWithExistingMapping,","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"                expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"    public void execute_duplicateMapping_correctMessage() {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"        ModelManager modelWithExistingMapping \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        modelWithExistingMapping.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand addShortcutCommand \u003d new AddShortcutCommand(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(AddShortcutCommand.MESSAGE_DUPLICATE, \"del --\u003e delete\");","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"        assertCommandSuccess(addShortcutCommand, modelWithExistingMapping,","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"                expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand addShortcutFirstCommand \u003d new AddShortcutCommand(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(ListCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand addShortcutSecondCommand \u003d new AddShortcutCommand(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand addShortcutThirdCommand \u003d new AddShortcutCommand(new ShortcutAlias(\"foo\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(addShortcutFirstCommand.equals(addShortcutFirstCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand test \u003d new AddShortcutCommand(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(ListCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(addShortcutFirstCommand.equals(test));","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(addShortcutFirstCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(addShortcutFirstCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(addShortcutFirstCommand.equals(addShortcutSecondCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"        // different alias -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(addShortcutFirstCommand.equals(addShortcutThirdCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"alvinlim277"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand addShortcutFirstCommand \u003d new AddShortcutCommand(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(ListCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"alvinlim277"},"content":"        String expected \u003d AddShortcutCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"alvinlim277"},"content":"                + \"{shortcutAlias\u003d\" + \"del\"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"alvinlim277"},"content":"                + \", \"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"alvinlim277"},"content":"                + \"command\u003d\" + ListCommand.COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"alvinlim277"},"content":"                + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expected, addShortcutFirstCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":6,"alvinlim277":115}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Kokseng1":1,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_WORD;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SHORTCUT;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    public static final String VALID_LOCATION_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"    public static final String VALID_LOCATION_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public static final String VALID_AGE_THIRTY \u003d \"30\";","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"    public static final String VALID_MEDICAL_HISTORY_OSTEOPOROSIS \u003d \"Osteoporosis\";","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"    public static final String VALID_MEDICAL_HISTORY_ANEMIA \u003d \"Anemia\";","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"    public static final String VALID_SPECIALTY_DERMATOLOGY \u003d \"Dermatology\";","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    public static final String VALID_SPECIALTY_ORTHOPAEDIC \u003d \"orthopaedic\";","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    public static final String PERSON_TYPE_AMY \u003d \" \" + PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    public static final String PERSON_TYPE_BOB \u003d \" \" + SPECIALIST_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"    public static final String LOCATION_DESC_AMY \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"    public static final String LOCATION_DESC_BOB \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public static final String AGE_DESC_AMY \u003d \" \" + PREFIX_AGE + VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"    public static final String MEDICAL_HISTORY_DESC_AMY \u003d \" \" + PREFIX_MEDICALHISTORY","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"            + VALID_MEDICAL_HISTORY_ANEMIA;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"    public static final String SPECIALTY_DESC_BOB \u003d \" \" + PREFIX_SPECIALTY + VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for addresses","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"    public static final String INVALID_SPECIALTY_DESC \u003d \" \" + PREFIX_SPECIALTY; // empty string invalid for specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"    public static final String INVALID_AGE_DESC \u003d \" \" + PREFIX_AGE + \"67Y\"; // \u0027Y\u0027 not allowed in ages","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"angkyakdifp"},"content":"    public static final String INVALID_MEDICAL_HISTORY_DESC \u003d \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"angkyakdifp"},"content":"            + PREFIX_MEDICALHISTORY; // empty string invalid for medical history","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"    public static final EditCommand.EditSpecialistDescriptor DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"    public static final ShortcutAlias SHORTCUT_ALIAS_1 \u003d new ShortcutAlias(\"del\");","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"    public static final ShortcutAlias SHORTCUT_ALIAS_2 \u003d new ShortcutAlias(\"li\");","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"    public static final CommandWord COMMAND_WORD_1 \u003d new CommandWord(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"    public static final CommandWord COMMAND_WORD_2 \u003d new CommandWord(ListCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"    public static final String SHORTCUT_DESC_VALID \u003d \" \" + PREFIX_SHORTCUT + SHORTCUT_ALIAS_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"    public static final String SHORTCUT_DESC_INVALID \u003d \" \" + PREFIX_SHORTCUT + COMMAND_WORD_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"    public static final String COMMANDWORD_DESC_VALID \u003d \" \" + PREFIX_COMMAND_WORD + COMMAND_WORD_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"    public static final String COMMANDWORD_DESC_INVALID \u003d \" \" + PREFIX_COMMAND_WORD + SHORTCUT_ALIAS_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"        DESC_AMY \u003d (EditCommand.EditPatientDescriptor) new EditPatientDescriptorBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"                .withMedicalHistory(VALID_MEDICAL_HISTORY_ANEMIA)","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"        DESC_BOB \u003d (EditCommand.EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"                .withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"                .withSpecialty(VALID_SPECIALTY_DERMATOLOGY)","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"alvinlim277"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"    @SuppressWarnings(\"checkstyle:EmptyCatchBlock\")","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"Kokseng1"},"content":"    public static void assertCommandFailure(Command command, Model actualModel,","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Kokseng1"},"content":"                                            String expectedMessage) {","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"Kokseng1"},"content":"     * Executes the given {@code input} from {@code logicManager}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Kokseng1"},"content":"     * actual command result and {@code expectedCommandResult} are equal.","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"Kokseng1"},"content":"     * @param logicManager","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"Kokseng1"},"content":"     * @param input","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Kokseng1"},"content":"     * @param expectedException","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"Kokseng1"},"content":"    public static void assertExceptionExecutedFromLogicManager(LogicManager logicManager, String input,","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"Kokseng1"},"content":"                                                                  Exception expectedException) {","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"Kokseng1"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"Kokseng1"},"content":"            commandResult \u003d logicManager.execute(input);","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"Kokseng1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"Kokseng1"},"content":"            assertEquals(expectedException, e);","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Kokseng1"},"content":"            return;","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"Kokseng1"},"content":"        fail(\"Expected an exception but no exception was thrown. Command result : \" + commandResult);","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"Kokseng1"},"content":"     * Executes the given {@code input} from {@code logicManager}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"Kokseng1"},"content":"     * actual command result and {@code expectedCommandResult} are equal.","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"Kokseng1"},"content":"     * @param logicManager","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"Kokseng1"},"content":"     * @param input","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"Kokseng1"},"content":"     * @param expectedCommandResult","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"Kokseng1"},"content":"    public static void assertCommandResultExecutedFromLogicManager(LogicManager logicManager, String input,","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"Kokseng1"},"content":"                                                               CommandResult expectedCommandResult) {","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"Kokseng1"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Kokseng1"},"content":"            commandResult \u003d logicManager.execute(input);","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"Kokseng1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"Kokseng1"},"content":"            fail(\"Expected CommandResult but exception was thrown : \" + e + \" : \" + e.getMessage());","lastModifiedDate":"2023-11-07"},{"lineNumber":207,"author":{"gitId":"Kokseng1"},"content":"            return;","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Kokseng1"},"content":"        assertEquals(expectedCommandResult, commandResult);","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kokseng1":49,"vansh284":10,"angkyakdifp":8,"Gavino3o":2,"-":114,"alvinlim277":28}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    public void execute_validSingleIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        StringBuilder expectedMessageBuilder \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"                new StringBuilder(String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS_HEADER, 1));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        expectedMessageBuilder.append(String.format(\"\\n%1$d. %2$s\", 1,","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"                Messages.formatShortForm(personToDelete)));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.canRedo();","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessageBuilder.toString(), expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    public void execute_validMultipleIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e indexList \u003d Arrays.asList(Index.fromOneBased(1),","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"                Index.fromOneBased(2),","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"                Index.fromOneBased(4));","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        StringBuilder expectedMessageBuilder \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"                new StringBuilder(String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS_HEADER, indexList.size()));","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        for (int i \u003d 0; i \u003c indexList.size(); i++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"            Index index \u003d indexList.get(i);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"            Person currPerson \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"            personsToDelete.add(currPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"            expectedMessageBuilder.append(String.format(\"\\n%1$d. %2$s\", i + 1,","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"                            Messages.formatShortForm(currPerson)));","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexList);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        for (Person person: personsToDelete) {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"            expectedModel.deletePerson(person);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessageBuilder.toString(), expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        Index validIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e invalidIndexes \u003d Arrays.asList(validIndex, outOfBoundIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidIndexes);","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"    public void execute_validSingleIndexFilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"        StringBuilder expectedMessageBuilder \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"                new StringBuilder(String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS_HEADER, 1));","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"        expectedMessageBuilder.append(String.format(\"\\n%1$d. %2$s\", 1,","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"                Messages.formatShortForm(personToDelete)));","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessageBuilder.toString(), expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e firstIndexList \u003d Arrays.asList(Index.fromOneBased(1), Index.fromOneBased(2));","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e secondIndexList \u003d Arrays.asList(Index.fromOneBased(2), Index.fromOneBased(3));","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(firstIndexList);","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(secondIndexList);","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(firstIndexList);","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e indexList \u003d Arrays.asList(Index.fromOneBased(1), Index.fromOneBased(2));","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexList);","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndexes\u003d\" + indexList","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"alvinlim277"},"content":"                + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kokseng1":6,"Gavino3o":50,"-":101,"alvinlim277":1}},{"path":"src/test/java/seedu/address/logic/commands/DeleteShortcutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_ALIAS_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_ALIAS_2;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"public class DeleteShortcutCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteShortcutCommand(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    public void execute_mappingExists_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        ArrayList\u003cShortcutAlias\u003e aliasList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        aliasList.add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand deleteShortcutCommand \u003d new DeleteShortcutCommand(aliasList);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(DeleteShortcutCommand.MESSAGE_SUCCESS, \"del --\u003e delete\");","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        ModelManager beforeModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        beforeModel.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        ModelManager afterModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"        afterModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(deleteShortcutCommand, beforeModel, expectedMessage, afterModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"    public void execute_onlySomeMappingsExist_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        ArrayList\u003cShortcutAlias\u003e aliasList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        aliasList.add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        aliasList.add(SHORTCUT_ALIAS_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand deleteShortcutCommand \u003d new DeleteShortcutCommand(aliasList);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(DeleteShortcutCommand.MESSAGE_SUCCESS, \"del --\u003e delete\")","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"                + String.format(DeleteShortcutCommand.MESSAGE_NONEXISTENT, SHORTCUT_ALIAS_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        ModelManager beforeModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        beforeModel.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        ModelManager afterModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"        afterModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(deleteShortcutCommand, beforeModel, expectedMessage, afterModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"    public void execute_mappingsDoNotExist_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        ArrayList\u003cShortcutAlias\u003e aliasList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"        aliasList.add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"        aliasList.add(SHORTCUT_ALIAS_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand deleteShortcutCommand \u003d new DeleteShortcutCommand(aliasList);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(DeleteShortcutCommand.MESSAGE_NONEXISTENT, SHORTCUT_ALIAS_1)","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"                + String.format(DeleteShortcutCommand.MESSAGE_NONEXISTENT, SHORTCUT_ALIAS_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"        ModelManager beforeModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        ModelManager afterModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(deleteShortcutCommand, beforeModel, expectedMessage, afterModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand deleteShortcutFirstCommand \u003d new DeleteShortcutCommand(new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"                add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand deleteShortcutSecondCommand \u003d new DeleteShortcutCommand(new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"                add(SHORTCUT_ALIAS_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(deleteShortcutFirstCommand.equals(deleteShortcutFirstCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(deleteShortcutFirstCommand.equals(new DeleteShortcutCommand(new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"                add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"        })));","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(deleteShortcutFirstCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"alvinlim277"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(deleteShortcutFirstCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"        // different aliases -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(deleteShortcutFirstCommand.equals(deleteShortcutSecondCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"alvinlim277"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand deleteShortcutFirstCommand \u003d new DeleteShortcutCommand(new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"alvinlim277"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"alvinlim277"},"content":"                add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"alvinlim277"},"content":"        String firstExpected \u003d DeleteShortcutCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"alvinlim277"},"content":"                + \"{shortcutAliasList\u003d\" + \"[\" + SHORTCUT_ALIAS_1 + \"]}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(firstExpected, deleteShortcutFirstCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand deleteShortcutSecondCommand \u003d new DeleteShortcutCommand(new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"alvinlim277"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"alvinlim277"},"content":"                add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"alvinlim277"},"content":"                add(SHORTCUT_ALIAS_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"alvinlim277"},"content":"        String secondExpected \u003d DeleteShortcutCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"alvinlim277"},"content":"                + \"{shortcutAliasList\u003d\" + \"[\"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"alvinlim277"},"content":"                + SHORTCUT_ALIAS_1 + \", \"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"alvinlim277"},"content":"                + SHORTCUT_ALIAS_2 + \"]}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(secondExpected, deleteShortcutSecondCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":5,"alvinlim277":135}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPatient));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        expectedModel.updateSelectedPerson(editedPatient);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        model.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(lastPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        PersonBuilder personInList \u003d new SpecialistBuilder((Specialist) lastPerson);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        EditPersonDescriptor descriptor \u003d new EditSpecialistDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"                new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"        expectedModel.updateSelectedPerson(editedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"        Person editedPerson \u003d new PatientBuilder((Patient) personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"        EditCommand editCommand \u003d new EditCommand(new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"                new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"        expectedModel.updateSelectedPerson(editedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"        // Setup descriptor of the first person of the list","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor descriptor \u003d new EditPatientDescriptorBuilder((Patient) firstPerson).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"        // Attempting to update second person into first person","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"        // Viewing second person","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(secondPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(firstPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"        EditCommand editCommand \u003d new EditCommand(new EditPatientDescriptorBuilder((Patient) personInList).build());","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"        final EditCommand standardCommand \u003d new EditCommand(DESC_AMY);","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(copyDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(standardCommand.equals(new EditCommand(DESC_BOB)));","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"        EditCommand editCommand \u003d new EditCommand(editPersonDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Kokseng1":7,"vansh284":11,"Gavino3o":25,"-":114,"alvinlim277":9}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_OSTEOPOROSIS;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptorBuilder(DESC_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        // different medical history -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"                .withMedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        String expected \u003d EditPatientDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"                + editPatientDescriptor.getEmail().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getTags().orElse(null) + \", age\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getAge().orElse(null) + \", medical history\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"                + editPatientDescriptor.getMedicalHistory().orElse(null) + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, editPatientDescriptor.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"vansh284":19,"angkyakdifp":1,"-":50,"alvinlim277":7}},{"path":"src/test/java/seedu/address/logic/commands/EditSpecialistDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_ORTHOPAEDIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"public class EditSpecialistDescriptorTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor descriptorWithSameValues \u003d new EditSpecialistDescriptorBuilder(DESC_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        assertTrue(DESC_BOB.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        assertTrue(DESC_BOB.equals(DESC_BOB));","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(5));","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(DESC_AMY));","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"                .withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        editedBob \u003d new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"                .withLocation(VALID_LOCATION_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        // different specialty -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"        editedBob \u003d new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"                .withSpecialty(VALID_SPECIALTY_ORTHOPAEDIC).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d new EditSpecialistDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        String expected \u003d EditSpecialistDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"                + editSpecialistDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"                + editSpecialistDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"                + editSpecialistDescriptor.getEmail().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"                + editSpecialistDescriptor.getTags().orElse(null) + \", location\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"                + editSpecialistDescriptor.getLocation().orElse(null) + \", specialty\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"                + editSpecialistDescriptor.getSpecialty().orElse(null) + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, editSpecialistDescriptor.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":1,"vansh284":68,"alvinlim277":14}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.AgeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.SpecialtyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    private static final String WHITESPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    public void findCommandEquals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap1 \u003d setupPatientFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap2 \u003d setupSpecialistFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand1 \u003d new FindCommand(findPredicateMap1, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand2 \u003d new FindCommand(findPredicateMap2, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findCommand1.equals(findCommand1));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(findPredicateMap1, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findCommand1.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findCommand1.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findCommand1.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"        // different person type -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findCommand1.equals(findCommand2));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"    public void findPredicateMapEquals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPatientFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap smallerFindPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"        smallerFindPredicateMap.put(PREFIX_NAME,","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Lopez\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findPredicateMap.equals(findPredicateMap));","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"        // same values -\u003e return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMapCopy \u003d setupPatientFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findPredicateMap.equals(findPredicateMapCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findPredicateMap.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findPredicateMap.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"        // different size -\u003e short circuits and returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findPredicateMap.equals(smallerFindPredicateMap));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupPatientFindPredicateMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"        // Find Predicates for a Patient","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"        NameContainsKeywordsPredicate nameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Fabio\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"        PhoneContainsKeywordsPredicate phoneContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"89934991\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"        EmailContainsKeywordsPredicate emailContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"patient@gmail.com\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"        AgeContainsKeywordsPredicate ageContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"                new AgeContainsKeywordsPredicate(Arrays.asList(\"35\", \"40\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"        TagsContainsKeywordsPredicate tagsContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"                new TagsContainsKeywordsPredicate(Arrays.asList(\"tag1\", \"tag2\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"        MedHistoryContainsKeywordsPredicate medHistoryContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"                new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Bronchitis\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, nameContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, phoneContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, emailContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_AGE, ageContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, tagsContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, medHistoryContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupSpecialistFindPredicateMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"        // Find Predicates for a Specialist","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"        NameContainsKeywordsPredicate nameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Selena\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"        PhoneContainsKeywordsPredicate phoneContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"90237753\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"        EmailContainsKeywordsPredicate emailContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"specialist@gmail.com\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"        LocationContainsKeywordsPredicate locationContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"                new LocationContainsKeywordsPredicate(Collections.singletonList(\"311, Clementi Ave 2, #02-25\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"        TagsContainsKeywordsPredicate tagsContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"                new TagsContainsKeywordsPredicate(Arrays.asList(\"tag2\", \"tag3\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"        SpecialtyContainsKeywordsPredicate specialtyContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"                new SpecialtyContainsKeywordsPredicate(Arrays.asList(\"Surgery\", \"Haematology\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, nameContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, phoneContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, emailContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_LOCATION, locationContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, tagsContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, specialtyContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"Gavino3o"},"content":"    public void execute_zeroKeywords_allPatientsListed() {","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonZeroKeywordsPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_AGE, prepareAgePredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, prepareMedHistPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":166,"author":{"gitId":"Gavino3o"},"content":"    public void execute_zeroKeywords_allSpecialistsListed() {","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"Gavino3o"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonZeroKeywordsPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_LOCATION, prepareLocationPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, prepareSpecialtyPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"Gavino3o"},"content":"    public void execute_multipleSpecialtyKeywordsOnly_multipleSpecialistFound() {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"Gavino3o"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, prepareSpecialtyPredicate(\"Orthopaedic Physiotherapy\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(Arrays.asList(FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"Gavino3o"},"content":"    public void execute_multipleNameKeywordsOnly_multiplePatientsFound() {","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"Gavino3o"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, prepareNamePredicate(\"Alice Kunz Daniel\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"Gavino3o"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"Gavino3o"},"content":"    public void nameContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, prepareNamePredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"vansh284"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"Gavino3o"},"content":"    public void phoneContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, preparePhonePredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"Gavino3o"},"content":"    public void emailContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, prepareEmailPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"Gavino3o"},"content":"    public void tagsContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, prepareTagsPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":239,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"Gavino3o"},"content":"    public void medHistContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, prepareMedHistPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"Gavino3o"},"content":"    public void specialtyContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, prepareSpecialtyPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.SPECIALIST + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":265,"author":{"gitId":"Gavino3o"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-14"},{"lineNumber":266,"author":{"gitId":"Gavino3o"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"Gavino3o"},"content":"    private PhoneContainsKeywordsPredicate preparePhonePredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"Gavino3o"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"Gavino3o"},"content":"    private EmailContainsKeywordsPredicate prepareEmailPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"Gavino3o"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":283,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":284,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code TagsContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":285,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":286,"author":{"gitId":"Gavino3o"},"content":"    private TagsContainsKeywordsPredicate prepareTagsPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":287,"author":{"gitId":"Gavino3o"},"content":"        return new TagsContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":288,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":289,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":291,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code MedHistoryContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":293,"author":{"gitId":"Gavino3o"},"content":"    private MedHistoryContainsKeywordsPredicate prepareMedHistPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":294,"author":{"gitId":"Gavino3o"},"content":"        return new MedHistoryContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":296,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":297,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":298,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":299,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code SpecialtyContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":300,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":301,"author":{"gitId":"Gavino3o"},"content":"    private SpecialtyContainsKeywordsPredicate prepareSpecialtyPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":302,"author":{"gitId":"Gavino3o"},"content":"        return new SpecialtyContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":303,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":304,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":305,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":306,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code AgeContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":307,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":308,"author":{"gitId":"Gavino3o"},"content":"    private AgeContainsKeywordsPredicate prepareAgePredicate(String userInput) {","lastModifiedDate":"2023-10-17"},{"lineNumber":309,"author":{"gitId":"Gavino3o"},"content":"        return new AgeContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-17"},{"lineNumber":310,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":311,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":312,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":313,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code LocationContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":314,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"Gavino3o"},"content":"    private LocationContainsKeywordsPredicate prepareLocationPredicate(String userInput) {","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"Gavino3o"},"content":"        return new LocationContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":319,"author":{"gitId":"Gavino3o"},"content":"    private Predicate\u003cPerson\u003e combinePersonPredicates(FindPredicateMap findPredicateMap, PersonType personType) {","lastModifiedDate":"2023-10-17"},{"lineNumber":320,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d person -\u003e findPredicateMap.getAllPredicates().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"Gavino3o"},"content":"                .map(pred -\u003e pred.test(person))","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"Gavino3o"},"content":"                .reduce(true, (x, y) -\u003e x \u0026\u0026 y);","lastModifiedDate":"2023-10-16"},{"lineNumber":323,"author":{"gitId":"Gavino3o"},"content":"        return predicate.and(personType.getSearchPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":325,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":326,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupPersonZeroKeywordsPredicateMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":327,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":328,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, prepareNamePredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":329,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, preparePhonePredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":330,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, prepareEmailPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":331,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, prepareTagsPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":332,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Kokseng1":2,"Gavino3o":256,"vansh284":2,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.model.person.PersonType.PATIENT;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.model.person.PersonType.SPECIALIST;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    public void executePatient_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(new ListCommand(PATIENT), model, ListCommand.PATIENT_MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"                expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    public void executeSpecialist_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(new ListCommand(SPECIALIST), model, ListCommand.SPECIALIST_MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    public void executePatient_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(new ListCommand(PATIENT), model, ListCommand.PATIENT_MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Kokseng1":5,"-":35,"alvinlim277":9}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandResultExecutedFromLogicManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertExceptionExecutedFromLogicManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"public class RedoCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    private LogicManager getNewLogicManager() {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        return new LogicManager(model, new Storage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"            public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"            public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"                return null;","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"            public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"                return null;","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"        });","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"    private static void deleteFirstPerson(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"        model.deletePerson(firstPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        // set up of both models\u0027 undo/redo history","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"    public void execute() {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"        // multiple redoable states in model","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.redo();","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"        // single redoable state in model","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.redo();","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        // no redoable state in model","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"        assertCommandFailure(new RedoCommand(), model, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"    public void redoAddShortcutCommandSuccess() {","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Kokseng1"},"content":"        LogicManager logicManager \u003d getNewLogicManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"Kokseng1"},"content":"        //multiple successions of addsc and undo","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del2\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del3\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"Kokseng1"},"content":"        //all previously added and then undone should throw unknown command error when called","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del3 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"Kokseng1"},"content":"        model.redo();","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"Kokseng1"},"content":"        model.redo();","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"Kokseng1"},"content":"        model.redo();","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Kokseng1"},"content":"        String expectedFeedback \u003d \"Deleted 1 Person(s):\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"Kokseng1"},"content":"                + \"1. Patient: Alice Pauline; Phone: 94351253\";","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"Kokseng1"},"content":"        //redone addsc should be executable","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"Kokseng1"},"content":"        assertCommandResultExecutedFromLogicManager(logicManager, \"del 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"Kokseng1"},"content":"                new CommandResult(expectedFeedback));","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"Kokseng1"},"content":"        //final addsc to make sure previous unknown command errors are not flukes","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del4\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"Kokseng1"},"content":"        String commandResultString \u003d \"Deleted 1 Person(s):\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"Kokseng1"},"content":"                + \"1. Patient: Benson Meier; Phone: 98765432\";","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"Kokseng1"},"content":"        assertCommandResultExecutedFromLogicManager(logicManager, \"del4 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"Kokseng1"},"content":"                new CommandResult(commandResultString));","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"Kokseng1"},"content":"    public void redoDeleteShortcutCommandSuccess() {","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"Kokseng1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"Kokseng1"},"content":"        LogicManager logicManager \u003d getNewLogicManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"Kokseng1"},"content":"        //add and test shortcut works","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del2\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"Kokseng1"},"content":"        String commandResultString \u003d \"Deleted 1 Person(s):\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"Kokseng1"},"content":"                + \"1. Patient: Alice Pauline; Phone: 94351253\";","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"Kokseng1"},"content":"        assertCommandResultExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"Kokseng1"},"content":"                new CommandResult(commandResultString));","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"Kokseng1"},"content":"        //remove and test shortcut doesn\u0027t work","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().removeShortcut(new ShortcutAlias(\"del2\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":176,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Kokseng1":184}},{"path":"src/test/java/seedu/address/logic/commands/ThemeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public class ThemeCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public void execute_validTheme_success() {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        ThemeCommand themeCommand \u003d new ThemeCommand(Theme.LIGHT);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d String.format(ThemeCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"                Theme.LIGHT);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(themeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    public void execute_nullTheme_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        assertThrows(AssertionError.class, () -\u003e new ThemeCommand(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        ThemeCommand themeFirstCommand \u003d new ThemeCommand(Theme.LIGHT);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        ThemeCommand themeSecondCommand \u003d new ThemeCommand(Theme.DARK);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        assertTrue(themeFirstCommand.equals(themeFirstCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        ThemeCommand themeFirstCommandCopy \u003d new ThemeCommand(Theme.LIGHT);","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        assertTrue(themeFirstCommand.equals(themeFirstCommandCopy));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        assertFalse(themeFirstCommand.equals(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        assertFalse(themeFirstCommand.equals(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        // different theme -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        assertFalse(themeFirstCommand.equals(themeSecondCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        ThemeCommand themeCommand \u003d new ThemeCommand(Theme.DARK);","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        String expected \u003d ThemeCommand.class.getCanonicalName() + \"{theme\u003d\" + Theme.DARK","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"                + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, themeCommand.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"Kokseng1":1,"vansh284":66}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandResultExecutedFromLogicManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertExceptionExecutedFromLogicManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"    private LogicManager getNewLogicManager() {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"        return new LogicManager(model, new Storage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"            public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"            public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"            public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"            public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"                return null;","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"            @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"            public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"                return null;","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        });","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"     * Deletes the first person in {@code model}\u0027s filtered list from {@code model}\u0027s address book.","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"    public static void deleteFirstPerson(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"        model.deletePerson(firstPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"        // set up of models\u0027 undo/redo history","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"    public void execute() {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"        // multiple undoable states in model","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"        // single undoable state in model","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"        expectedModel.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        // no undoable states in model","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"    public void undoAddShortcutCommandSuccess() {","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Kokseng1"},"content":"        LogicManager logicManager \u003d getNewLogicManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"Kokseng1"},"content":"        //multiple successions of addsc and undo","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del2\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del3\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"Kokseng1"},"content":"        //all previously added and then undone should throw unknown command error when called","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del3 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"Kokseng1"},"content":"        //final addsc to make sure previous unknown command errors are not flukes","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del4\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":141,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"Kokseng1"},"content":"        String commandResultString \u003d \"Deleted 1 Person(s):\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"Kokseng1"},"content":"                + \"1. Patient: Alice Pauline; Phone: 94351253\";","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"Kokseng1"},"content":"        assertCommandResultExecutedFromLogicManager(logicManager, \"del4 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"Kokseng1"},"content":"                new CommandResult(commandResultString));","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"Kokseng1"},"content":"    public void undoDeleteShortcutCommandSuccess() {","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"Kokseng1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"Kokseng1"},"content":"        LogicManager logicManager \u003d getNewLogicManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"Kokseng1"},"content":"        //add and test shortcut works","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().registerShortcut(new ShortcutAlias(\"del2\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"Kokseng1"},"content":"                new CommandWord(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"Kokseng1"},"content":"        String commandResultString \u003d \"Deleted 1 Person(s):\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"Kokseng1"},"content":"                + \"1. Patient: Alice Pauline; Phone: 94351253\";","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"Kokseng1"},"content":"        assertCommandResultExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"Kokseng1"},"content":"                new CommandResult(commandResultString));","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"Kokseng1"},"content":"        //remove and test shortcut doesnt work","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Kokseng1"},"content":"        model.getShortcutSettings().removeShortcut(new ShortcutAlias(\"del2\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"Kokseng1"},"content":"        model.commit();","lastModifiedDate":"2023-11-06"},{"lineNumber":165,"author":{"gitId":"Kokseng1"},"content":"        assertExceptionExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"Kokseng1"},"content":"                new ParseException(MESSAGE_UNKNOWN_COMMAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"Kokseng1"},"content":"        //undo and test shortcut works again","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"Kokseng1"},"content":"        model.undo();","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"Kokseng1"},"content":"        commandResultString \u003d \"Deleted 1 Person(s):\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"Kokseng1"},"content":"                + \"1. Patient: Benson Meier; Phone: 98765432\";","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"Kokseng1"},"content":"        assertCommandResultExecutedFromLogicManager(logicManager, \"del2 1\",","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"Kokseng1"},"content":"                new CommandResult(commandResultString));","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Kokseng1":175}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":" * {@code ViewCommand}.","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"                Messages.format(personToView));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        expectedModel.updateSelectedPerson(personToView);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"angkyakdifp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"angkyakdifp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"angkyakdifp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"angkyakdifp"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"angkyakdifp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"angkyakdifp"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"angkyakdifp"},"content":"        String expected \u003d ViewCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"angkyakdifp"},"content":"                + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(expected, viewCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kokseng1":3,"angkyakdifp":91,"vansh284":1}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AGE_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEDICAL_HISTORY_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SPECIALTY_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public void parse_allFieldsPresentPatient_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        Person expectedPatient \u003d new PatientBuilder(AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"                new AddCommand(expectedPatient), PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"        Person expectedPatientMultipleTags \u003d new PatientBuilder(AMY).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"                new AddCommand(expectedPatientMultipleTags), PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"    public void parse_allFieldsPresentSpecialist_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        Person expectedSpecialist \u003d new SpecialistBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"                        + EMAIL_DESC_BOB + LOCATION_DESC_BOB + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"angkyakdifp"},"content":"                new AddCommand(expectedSpecialist),","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"        Person expectedSpecialistMultipleTags \u003d new SpecialistBuilder(BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"                        VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"angkyakdifp"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"                new AddCommand(expectedSpecialistMultipleTags), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"        String validExpectedSpecialistString \u003d validExpectedPersonString + SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"        String validExpectedPatientString \u003d validExpectedPersonString + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, NAME_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, PHONE_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, EMAIL_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, LOCATION_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"        // multiple ages","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, AGE_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"angkyakdifp"},"content":"                validExpectedSpecialistString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"alvinlim277"},"content":"                        + NAME_DESC_AMY + LOCATION_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"angkyakdifp"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE),","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_NAME_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_EMAIL_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_PHONE_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_LOCATION_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"vansh284"},"content":"        // invalid specialty","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, INVALID_SPECIALTY_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SPECIALTY), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, INVALID_AGE_DESC + validExpectedPatientString,","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":183,"author":{"gitId":"Kokseng1"},"content":"        // invalid specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":184,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_SPECIALTY_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"Kokseng1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SPECIALTY), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, validExpectedPatientString + INVALID_AGE_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"vansh284"},"content":"        Person expectedPerson \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"alvinlim277"},"content":"                        + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"vansh284"},"content":"                new AddCommand(expectedPerson), PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"Kokseng1"},"content":"        String expectedMessageSpecialist \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"Kokseng1"},"content":"                AddCommand.MESSAGE_USAGE_SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"Kokseng1"},"content":"        String expectedMessagePatient \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"Kokseng1"},"content":"                AddCommand.MESSAGE_USAGE_PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"Kokseng1"},"content":"                        + VALID_LOCATION_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"vansh284"},"content":"        // missing specialty prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"Kokseng1"},"content":"                + LOCATION_DESC_BOB + VALID_SPECIALTY_DERMATOLOGY, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"vansh284"},"content":"        // missing age prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, VALID_AGE_THIRTY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_AMY, expectedMessagePatient, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"Kokseng1"},"content":"                        + VALID_LOCATION_BOB, expectedMessagePatient, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"Kokseng1"},"content":"                Name.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"Kokseng1"},"content":"                Phone.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":251,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"Kokseng1"},"content":"                Email.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":256,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"alvinlim277"},"content":"                        + INVALID_LOCATION_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"alvinlim277"},"content":"                Location.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":261,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"Kokseng1"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":265,"author":{"gitId":"vansh284"},"content":"        // invalid specialty","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_SPECIALTY_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"                Specialty.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"alvinlim277"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_AGE_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"vansh284"},"content":"                        + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"vansh284"},"content":"                Age.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"alvinlim277"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AGE_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"vansh284"},"content":"                        + INVALID_MEDICAL_HISTORY_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"vansh284"},"content":"                MedicalHistory.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":283,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"alvinlim277"},"content":"                        + EMAIL_DESC_BOB + INVALID_LOCATION_DESC + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":285,"author":{"gitId":"vansh284"},"content":"                Name.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":288,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":289,"author":{"gitId":"alvinlim277"},"content":"                        + EMAIL_DESC_BOB + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"angkyakdifp"},"content":"                        + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":291,"author":{"gitId":"Kokseng1"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE_SPECIALIST),","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"angkyakdifp"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-13"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Kokseng1":25,"vansh284":70,"angkyakdifp":27,"-":125,"alvinlim277":47}},{"path":"src/test/java/seedu/address/logic/parser/AddShortcutCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMANDWORD_DESC_VALID;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMAND_WORD_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_ALIAS_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_DESC_VALID;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"public class AddShortcutCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    private AddShortcutCommandParser parser \u003d new AddShortcutCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public void parse_validInputs_returnsAddShortcutCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicSuccess(parser, SHORTCUT_DESC_VALID + COMMANDWORD_DESC_VALID,","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"                new AddShortcutCommand(SHORTCUT_ALIAS_1, COMMAND_WORD_1));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public void parse_notAllTagsPresent_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        // Missing command word","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicFailure(parser, SHORTCUT_DESC_VALID,","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        // Missing alias","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicFailure(parser, COMMANDWORD_DESC_VALID,","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"alvinlim277":37}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMANDWORD_DESC_VALID;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMAND_WORD_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_ALIAS_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_DESC_VALID;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.DeleteShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.FindPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"    public void parseCommand_addShortcut() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        AddShortcutCommand command \u003d (AddShortcutCommand) parser.parseCommand(AddShortcutCommand.COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"                + SHORTCUT_DESC_VALID + COMMANDWORD_DESC_VALID);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(new AddShortcutCommand(SHORTCUT_ALIAS_1, COMMAND_WORD_1), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"    public void parseCommand_deleteShortcut() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"        DeleteShortcutCommand command \u003d (DeleteShortcutCommand) parser.parseCommand(DeleteShortcutCommand.COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"                + SHORTCUT_DESC_VALID);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(new DeleteShortcutCommand(new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"                add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"        }), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_add_patient() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PatientUtil.getAddCommand(patient));","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_add_specialist() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"        Specialist specialist \u003d new SpecialistBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(SpecialistUtil.getAddCommand(specialist));","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"        assertEquals(new AddCommand(specialist), command);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e indexList \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"                Arrays.asList(Index.fromOneBased(1), Index.fromOneBased(2), Index.fromOneBased(4));","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"1 2 4\");","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(new DeleteCommand(indexList), command);","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_edit_patient() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"        Patient patient \u003d (Patient) new PatientBuilder()","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"                .withMedicalHistory(\"MedHistory1\")","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"                .withTags(\"Tag1\", \"Tag2\")","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"                .build();","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"angkyakdifp"},"content":"        model.addPerson(patient);","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(patient);","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"angkyakdifp"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"        String input \u003d EditCommand.COMMAND_WORD + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(input);","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(new EditCommand(descriptor), command);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"angkyakdifp"},"content":"        model.deletePerson(patient);","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_edit_specialist() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"        Specialist specialist \u003d (Specialist) new SpecialistBuilder()","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"                .withSpecialty(\"TestSpecialty\")","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"                .withLocation(\"TestLocation\")","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"                .withTags(\"Tag1\", \"Tag2\")","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"                .build();","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"angkyakdifp"},"content":"        model.addPerson(specialist);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(specialist);","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"        EditSpecialistDescriptor descriptor \u003d new EditSpecialistDescriptorBuilder(specialist).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"        String input \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"                + \" \" + SpecialistUtil.getEditSpecialistDescriptorDetails(descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(input);","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(new EditCommand(descriptor), command);","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"angkyakdifp"},"content":"        model.deletePerson(specialist);","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"    public void parseCommand_complexEdit_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"        Patient patient \u003d (Patient) new PatientBuilder()","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"                .withMedicalHistory(\"MedHistory1\")","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"                .withTags(\"Tag1\", \"Tag2\")","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"                .build();","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"        Specialist specialist \u003d (Specialist) new SpecialistBuilder()","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"                .withSpecialty(\"TestSpecialty\")","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"                .withLocation(\"TestLocation\")","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"                .withTags(\"Tag1\", \"Tag2\")","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"                .build();","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"        String userInput1 \u003d EditCommand.COMMAND_WORD + \" \" + PATIENT_TAG;","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"Gavino3o"},"content":"        String userInput2 \u003d EditCommand.COMMAND_WORD + \" \" + SPECIALIST_TAG;","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"angkyakdifp"},"content":"        model.addPerson(patient);","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(patient);","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"                EditCommand.MESSAGE_USAGE_PATIENT), () -\u003e parser.parseCommand(userInput1));","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"angkyakdifp"},"content":"        model.deletePerson(patient);","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"angkyakdifp"},"content":"        model.addPerson(specialist);","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(specialist);","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"                EditCommand.MESSAGE_USAGE_SPECIALIST), () -\u003e parser.parseCommand(userInput2));","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"angkyakdifp"},"content":"        model.deletePerson(specialist);","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"Gavino3o"},"content":"    public void parseCommand_find_patientByName() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"vansh284"},"content":"                FindCommand.COMMAND_WORD + \" \" + CliSyntax.PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"                        + PREFIX_NAME","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"vansh284"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(findPredicateMap, command.getPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(PersonType.PATIENT, command.getPersonType());","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"Gavino3o"},"content":"    public void parseCommand_find_specialistByNameAndTags() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"tag1\", \"tag2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"vansh284"},"content":"                FindCommand.COMMAND_WORD + \" \" + CliSyntax.SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"Gavino3o"},"content":"                        + PREFIX_NAME","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"Gavino3o"},"content":"                        + nameKeywords.stream().collect(Collectors.joining(\" \")) + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"Gavino3o"},"content":"                        + PREFIX_TAG","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"Gavino3o"},"content":"                        + tagKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, new TagsContainsKeywordsPredicate(tagKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(findPredicateMap, command.getPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(PersonType.SPECIALIST, command.getPersonType());","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":201,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"angkyakdifp"},"content":"    public void parseCommand_view_patient() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"angkyakdifp"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"angkyakdifp"},"content":"                ViewCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(new ViewCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":215,"author":{"gitId":"vansh284"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"vansh284"},"content":"                ListCommand.COMMAND_WORD + \" \" + CliSyntax.PATIENT_TAG) instanceof ListCommand);","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":221,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"angkyakdifp"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":227,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"angkyakdifp"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":230,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"Gavino3o"},"content":"    public void parseCommand_basicCommandAsComplexCommand_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":234,"author":{"gitId":"Gavino3o"},"content":"        String deleteInput \u003d DeleteCommand.COMMAND_WORD + \" \" + PATIENT_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"Gavino3o"},"content":"                        -\u003e parser.parseCommand(deleteInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"Gavino3o"},"content":"        String undoInput \u003d UndoCommand.COMMAND_WORD + \" \" + SPECIALIST_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"Gavino3o"},"content":"                        -\u003e parser.parseCommand(undoInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"Gavino3o"},"content":"        String redoInput \u003d RedoCommand.COMMAND_WORD + \" \" + PATIENT_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"Gavino3o"},"content":"                        -\u003e parser.parseCommand(redoInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"Gavino3o"},"content":"        String addShortcutInput \u003d AddShortcutCommand.COMMAND_WORD + \" \" + SPECIALIST_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"Gavino3o"},"content":"                        -\u003e parser.parseCommand(addShortcutInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"Gavino3o"},"content":"        String delShortcutInput \u003d DeleteShortcutCommand.COMMAND_WORD + \" \" + PATIENT_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":256,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteShortcutCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"Gavino3o"},"content":"                        -\u003e parser.parseCommand(delShortcutInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"Gavino3o"},"content":"        String viewInput \u003d ViewCommand.COMMAND_WORD + \" \" + SPECIALIST_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"Gavino3o"},"content":"                        -\u003e parser.parseCommand(viewInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"Gavino3o"},"content":"        String themeInput \u003d ThemeCommand.COMMAND_WORD + \" \" + PATIENT_TAG;","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"Gavino3o"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"Gavino3o"},"content":"                        -\u003e parser.parseCommand(themeInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Gavino3o":113,"vansh284":33,"angkyakdifp":19,"-":78,"alvinlim277":26}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserComplex} is successful and the command created","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseComplexSuccess(ParserComplex\u003c? extends Command\u003e parserComplex, String userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"                                                 Command expectedCommand, PersonType personType) {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"            Command command \u003d parserComplex.parse(personType, userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserComplex} is unsuccessful and the error message","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseComplexFailure(ParserComplex\u003c? extends Command\u003e parserComplex,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"                                                 String userInput, String expectedMessage,","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"                                                 PersonType personType) {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"            parserComplex.parse(personType, userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserBasic} is successful and the command created","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseBasicSuccess(ParserBasic\u003c? extends Command\u003e parserBasic, String userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"                                                 Command expectedCommand) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"            Command command \u003d parserBasic.parse(userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserBasic} is unsuccessful and the error message","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseBasicFailure(ParserBasic\u003c? extends Command\u003e parserBasic, String userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"                                               String expectedMessage) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"            parserBasic.parse(userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"vansh284":3,"Gavino3o":1,"-":45,"alvinlim277":22}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validSingleIndexArg_returnsDeleteCommand() {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"        assertParseBasicSuccess(parser, \"1\", new DeleteCommand(List.of(INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validMultiIndexArg_returnsDeleteCommand() {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        List\u003cIndex\u003e indexList \u003d Arrays.asList(Index.fromOneBased(1),","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"                Index.fromOneBased(2), Index.fromOneBased(3));","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        assertParseBasicSuccess(parser, \"1 2 3\", new DeleteCommand(indexList));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"                + \"\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"                + DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    public void parse_multiArgSingleInvalid_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        assertParseBasicFailure(parser, \"1 2 a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"                + \"\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"                + DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"    public void parse_duplicatedIndexes_throwsParseException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        String[] duplicatedIndexes \u003d {\"1\", \"3\"};","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        assertParseBasicFailure(parser, \"1 1 2 3 3 4 5\",","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"                        Messages.getErrorMessageForDuplicateIndexes(duplicatedIndexes)","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"                                + \"\\n\" + DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Gavino3o":34,"-":29,"alvinlim277":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteShortcutCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_ALIAS_1;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SHORTCUT_DESC_VALID;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.DeleteShortcutCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"public class DeleteShortcutCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    private DeleteShortcutCommandParser parser \u003d new DeleteShortcutCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public void parse_validInputs_returnsDeleteShortcutCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicSuccess(parser, SHORTCUT_DESC_VALID,","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"                new DeleteShortcutCommand(new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"                    {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"                        add(SHORTCUT_ALIAS_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"                    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"                }));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    public void parse_invalidInputs_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        // Empty input","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicFailure(parser, \" \",","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"alvinlim277":35}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.Messages.MESSAGE_BLANK_ARGUMENTS;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"    private static final String NAME_EMPTY \u003d \" \" + PREFIX_NAME;","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"    private static final String PHONE_EMPTY \u003d \" \" + PREFIX_PHONE;","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"    private static final String AGE_EMPTY \u003d \" \" + PREFIX_AGE;","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"    private static final String LOCATION_EMPTY \u003d \" \" + PREFIX_LOCATION;","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_INVALID_SPECIALIST \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_INVALID_PATIENT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, \"\",","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"                EditCommand.MESSAGE_NOT_EDITED + \"\\n\" + EditCommand.MESSAGE_USAGE_PATIENT, PersonType.PATIENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, \"\",","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"                EditCommand.MESSAGE_NOT_EDITED + \"\\n\" + EditCommand.MESSAGE_USAGE_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"1 some random string\", MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"1 i/ string\", MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid phone","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid email","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid tag","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"                INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"                Name.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"        String userInput \u003d PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"                + EMAIL_DESC_AMY + LOCATION_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"Kokseng1"},"content":"        EditPersonDescriptor descriptor \u003d new EditSpecialistDescriptorBuilder()","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"alvinlim277"},"content":"                .withSpecialty(VALID_SPECIALTY_DERMATOLOGY).withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"alvinlim277"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"alvinlim277"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"    public void parse_somePersonFieldsSpecified_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"        // Specialists are used in this test to check Person Fields.","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs \u003d PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"        EditPersonDescriptor descriptor \u003d new EditCommand.EditSpecialistDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setPhone(new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setEmail(new Email(VALID_EMAIL_BOB));","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"Gavino3o"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"        String userInput \u003d NAME_DESC_AMY;","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"        EditPersonDescriptor descriptor \u003d new EditCommand.EditPatientDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setName(new Name(VALID_NAME_AMY));","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"Gavino3o"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"Gavino3o"},"content":"        userInput \u003d PHONE_DESC_AMY;","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"Gavino3o"},"content":"        descriptor \u003d new EditCommand.EditPatientDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setPhone(new Phone(VALID_PHONE_AMY));","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"Gavino3o"},"content":"        userInput \u003d EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"        descriptor \u003d new EditCommand.EditPatientDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setEmail(new Email(VALID_EMAIL_AMY));","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"Gavino3o"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"Gavino3o"},"content":"        userInput \u003d TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"Gavino3o"},"content":"        descriptor \u003d new EditCommand.EditPatientDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"Gavino3o"},"content":"        Set\u003cTag\u003e testTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"Gavino3o"},"content":"        testTags.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setTags(testTags);","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"Gavino3o"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"Gavino3o"},"content":"        String userInput \u003d INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE),","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"Gavino3o"},"content":"        userInput \u003d PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE),","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"Gavino3o"},"content":"        userInput \u003d PHONE_DESC_AMY + LOCATION_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"alvinlim277"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + LOCATION_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"alvinlim277"},"content":"                + PHONE_DESC_BOB + LOCATION_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION),","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":217,"author":{"gitId":"Gavino3o"},"content":"        userInput \u003d INVALID_PHONE_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"Gavino3o"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL),","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":226,"author":{"gitId":"Gavino3o"},"content":"        Patient firstPerson \u003d (Patient) model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":227,"author":{"gitId":"Gavino3o"},"content":"        model.updateSelectedPerson(firstPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":228,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs \u003d TAG_EMPTY;","lastModifiedDate":"2023-10-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"Gavino3o"},"content":"        // Expected edit command for clearing tags","lastModifiedDate":"2023-10-28"},{"lineNumber":232,"author":{"gitId":"Gavino3o"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d new EditCommand.EditPatientDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":233,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setTags(new HashSet\u003cTag\u003e());","lastModifiedDate":"2023-10-28"},{"lineNumber":234,"author":{"gitId":"Gavino3o"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"Gavino3o"},"content":"        PersonType personType \u003d model.getSelectedPerson() instanceof Patient","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"Gavino3o"},"content":"                ? PersonType.PATIENT","lastModifiedDate":"2023-10-28"},{"lineNumber":238,"author":{"gitId":"Gavino3o"},"content":"                : PersonType.SPECIALIST;","lastModifiedDate":"2023-10-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":240,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs, expectedCommand, personType);","lastModifiedDate":"2023-10-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"Gavino3o"},"content":"    public void parse_emptyPrefixArguments_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs \u003d NAME_EMPTY + PHONE_EMPTY;","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"Gavino3o"},"content":"        String expectedMessage \u003d String.format(MESSAGE_BLANK_ARGUMENTS,","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"Gavino3o"},"content":"                EditCommand.MESSAGE_USAGE_PATIENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, userInputArgs, expectedMessage, PersonType.PATIENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"Gavino3o"},"content":"        userInputArgs \u003d AGE_EMPTY;","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, userInputArgs, expectedMessage, PersonType.PATIENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"Gavino3o"},"content":"        expectedMessage \u003d String.format(MESSAGE_BLANK_ARGUMENTS,","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"Gavino3o"},"content":"                EditCommand.MESSAGE_USAGE_SPECIALIST);","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"Gavino3o"},"content":"        userInputArgs \u003d LOCATION_EMPTY;","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, userInputArgs, expectedMessage, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Kokseng1":12,"Gavino3o":90,"vansh284":15,"-":118,"alvinlim277":23}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.FindPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.AgeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.SpecialtyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    public void parse_invalidPreambleOnly_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, \" invalid input\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                FindCommand.MESSAGE_USAGE_PATIENT), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, \"  invalid input\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"                FindCommand.MESSAGE_USAGE_SPECIALIST), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    public void parse_invalidPreambleValidPrefix_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, \" invalid input n/Alex\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"                FindCommand.MESSAGE_USAGE_PATIENT), PersonType.PATIENT);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexFailure(parser, \"  invalid input p/98736621\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"                FindCommand.MESSAGE_USAGE_SPECIALIST), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_NAME + \" Alice Bob\", expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"92773291\", \"88765321\");","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, new PhoneContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_PHONE + \" 92773291 88765321\",","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_PHONE + \" \\n 92773291 \\n \\t 88765321  \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validEmailArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"timothy@gmail.com\", \"neumann@hotmail.com\");","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, new EmailContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_EMAIL + \" timothy@gmail.com neumann@hotmail.com\",","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_EMAIL + \" \\n timothy@gmail.com \\n \\t neumann@hotmail.com  \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validAgeAndMedHistArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e ageKeywords \u003d Arrays.asList(\"21\", \"37\");","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e medHistKeywords \u003d Arrays.asList(\"Bronchitis\", \"ADHD\", \"Diabetes\");","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_AGE, new AgeContainsKeywordsPredicate(ageKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, new MedHistoryContainsKeywordsPredicate(medHistKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs1 \u003d String.format(\" %s 21 37 %s Bronchitis ADHD Diabetes\",","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs2 \u003d String.format(\" %s 21 \\n 37 \\t %s Bronchitis \\n ADHD \\t Diabetes \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs1, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs2, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validSpecialtyAndLocationArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e specialtyKeywords \u003d Arrays.asList(\"Orthopaedic\", \"Neurology\");","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e locationKeywords \u003d Arrays.asList(\"Clementi\", \"Bukit\", \"Timah\");","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, new SpecialtyContainsKeywordsPredicate(specialtyKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_LOCATION, new LocationContainsKeywordsPredicate(locationKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs1 \u003d String.format(\" %s Orthopaedic Neurology %s Clementi Bukit Timah\",","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_SPECIALTY, PREFIX_LOCATION);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs2 \u003d String.format(\" %s Orthopaedic \\n Neurology \\t %s Clementi \\n Bukit \\t Timah \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_SPECIALTY, PREFIX_LOCATION);","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs1, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs2, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Kokseng1":3,"Gavino3o":100,"vansh284":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.CommandWord;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.logic.commands.ShortcutAlias;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    private static final String VALID_SHORTCUT \u003d \"del\";","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    private static final String VALID_COMMANDWORD \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    public void parseShortcutAlias_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        // Shortcuts should not include whitespaces","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseShortcutAlias(\" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        // Shortcuts should not match existing command keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseShortcutAlias(\"delete\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        // Shortcuts should not contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseShortcutAlias(\"n/\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"    public void parseShortcutAlias_validInput_success() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        ShortcutAlias expectedShortcutAlias \u003d new ShortcutAlias(VALID_SHORTCUT);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedShortcutAlias, ParserUtil.parseShortcutAlias(VALID_SHORTCUT));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        // Should trim leading and trailing whitespaces","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedShortcutAlias, ParserUtil.parseShortcutAlias(\" \" + VALID_SHORTCUT + \" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"    public void parseCommandWord_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        // Should match one of the existing default command keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCommandWord(\"del\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"    public void parseCommandWord_validInput_success() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"        CommandWord expectedShortcutAlias \u003d new CommandWord(VALID_COMMANDWORD);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedShortcutAlias, ParserUtil.parseCommandWord(VALID_COMMANDWORD));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        // Should trim leading and trailing whitespaces","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedShortcutAlias, ParserUtil.parseCommandWord(\" \" + VALID_COMMANDWORD + \" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_ADDRESS));","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"        Location expectedLocation \u003d new Location(VALID_ADDRESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_ADDRESS));","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"alvinlim277"},"content":"        Location expectedLocation \u003d new Location(VALID_ADDRESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(addressWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":189,"alvinlim277":45}},{"path":"src/test/java/seedu/address/logic/parser/ThemeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.Theme;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public class ThemeCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    private ThemeCommandParser parser \u003d new ThemeCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public void parse_validArgs_returnsThemeCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        assertParseBasicSuccess(parser, \"dArk\", new ThemeCommand(Theme.DARK));","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        assertParseBasicFailure(parser, \"darke\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"                ThemeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"vansh284":25}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":" * outside of the ViewCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":" * same path through the ViewCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        assertParseBasicSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"        assertParseBasicFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"                ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"angkyakdifp":30,"vansh284":3}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"    public void resetData_nullData_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Kokseng1":1,"vansh284":1,"-":103,"alvinlim277":2}},{"path":"src/test/java/seedu/address/model/CommandStringStashTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"public class CommandStringStashTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    public void addCommandString_withValidCommandString_addsCorrectly() {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash();","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        CommandStringStash expectedCommandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 0), 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        commandStringStash.addCommandString(\"0\");","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        assertEquals(expectedCommandStringStash, commandStringStash);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    public void addCommandString_withValidCommandString_evictsCorrectly() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"                createCmdStringStackIntegers(0, 19),","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"                20","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"                );","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        CommandStringStash expectedCommandStringStash \u003d new CommandStringStash(","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"                createCmdStringStackIntegers(1, 20),","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"                20","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        commandStringStash.addCommandString(\"20\");","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        assertEquals(expectedCommandStringStash, commandStringStash);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public void addCommandString_withValidCommandString_resetsCurrentCmd() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 9), 5);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        CommandStringStash expectedCommandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 10), 11);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        commandStringStash.addCommandString(\"10\");","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        assertEquals(expectedCommandStringStash, commandStringStash);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    public void addCommandString_withDuplicateCommandString_removesOldInstance() {","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 9), 6);","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        List\u003cString\u003e expectedCommandStringStack \u003d createCmdStringStackIntegers(0, 3);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        expectedCommandStringStack.addAll(createCmdStringStackIntegers(5, 9));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        expectedCommandStringStack.add(\"4\");","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        CommandStringStash expectedCommandStringStash \u003d new CommandStringStash(expectedCommandStringStack, 10);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        commandStringStash.addCommandString(\"4\");","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        assertEquals(expectedCommandStringStash, commandStringStash);","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    public void addCommandString_withNullCommandString_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        assertThrows(AssertionError.class, () -\u003e commandStringStash.addCommandString(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    public void getPrevCommandString_valid_getsCorrectly() {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 15), 9);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"8\", commandStringStash.getPrevCommandString(\"0\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"    public void getPrevCommandString_afterAdd_getsCorrectly() {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 15), 9);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"        commandStringStash.addCommandString(\"16\");","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"16\", commandStringStash.getPrevCommandString(\"0\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"    public void getPrevCommandString_withEmptyStack_getsCorrectly() {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(new ArrayList\u003c\u003e(), 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"0\", commandStringStash.getPrevCommandString(\"0\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    public void getPrevCommandString_withNoPrev_getsCorrectly() {","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(1, 5), 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"0\", commandStringStash.getPrevCommandString(\"0\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"    public void getPrevCommandString_withNullCommandString_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash();","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"        assertThrows(AssertionError.class, () -\u003e commandStringStash.getPrevCommandString(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"    public void getPassedCommandString_valid_getsCorrectly() {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 15), 9);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"10\", commandStringStash.getPassedCommandString(\"0\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"    public void getPassedCommandString_afterAdd_getsCorrectly() {","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(0, 15), 9);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"        commandStringStash.addCommandString(\"16\");","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"0\", commandStringStash.getPassedCommandString(\"0\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"    public void getPassedCommandString_withEmptyStack_getsCorrectly() {","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(new ArrayList\u003c\u003e(), 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"0\", commandStringStash.getPassedCommandString(\"0\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"    public void getPassedCommandString_withNoPassed_getsCorrectly() {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash(createCmdStringStackIntegers(1, 5), 4);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"        assertEquals(\"0\", commandStringStash.getPassedCommandString(\"0\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"    public void getPassedCommandString_withNullCommandString_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"        CommandStringStash commandStringStash \u003d new CommandStringStash();","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"        assertThrows(AssertionError.class, () -\u003e commandStringStash.getPassedCommandString(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"vansh284"},"content":"     * Helper function to create an array of integers in increasing or decreasing order","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"     * from {@code start} to {@code end}","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"    public List\u003cString\u003e createCmdStringStackIntegers(int start, int end) {","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"        int length \u003d end - start + 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"        List\u003cString\u003e cmdStringStack \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"vansh284"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"vansh284"},"content":"            cmdStringStack.add(String.valueOf(start + i));","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"        return cmdStringStack;","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"vansh284":151}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"angkyakdifp"},"content":"    public void getSelectedPerson_null_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(modelManager.getSelectedPerson(), null);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"angkyakdifp"},"content":"    public void getSelectedPerson_validPerson_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"angkyakdifp"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"angkyakdifp"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"angkyakdifp"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(modelManager.getSelectedPerson(), modelManager.getFilteredPersonList().get(0));","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"angkyakdifp"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"angkyakdifp"},"content":"    public void updateSelectedPerson_invalidPerson_returnsNull() {","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"angkyakdifp"},"content":"        Patient patient \u003d new PatientBuilder().withAge(\"30\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"angkyakdifp"},"content":"        modelManager.updateSelectedPerson(patient);","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(modelManager.getSelectedPerson(), null);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"angkyakdifp"},"content":"    public void updateSelectedPerson_validPerson_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"angkyakdifp"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"angkyakdifp"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"angkyakdifp"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"angkyakdifp"},"content":"        modelManager.updateSelectedPerson(modelManager.getFilteredPersonList().get(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(modelManager.getSelectedPerson(), modelManager.getFilteredPersonList().get(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"angkyakdifp"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"angkyakdifp"},"content":"        // different Selected Person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"angkyakdifp"},"content":"        modelManager.updateSelectedPerson(modelManager.getFilteredPersonList().get(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"angkyakdifp"},"content":"        modelManagerCopy.updateSelectedPerson(modelManagerCopy.getFilteredPersonList().get(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"angkyakdifp"},"content":"        ModelManager differentModelManager \u003d new ModelManager(differentAddressBook, userPrefs);","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(differentModelManager.equals(differentModelManager));","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"angkyakdifp"},"content":"        differentModelManager.addPerson(modelManager.getFilteredPersonList().get(0));","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"angkyakdifp"},"content":"        differentModelManager.addPerson(modelManager.getFilteredPersonList().get(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(modelManager.equals(differentModelManager));","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(differentModelManager.equals(modelManager));","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"angkyakdifp":51,"Gavino3o":1,"-":131}},{"path":"src/test/java/seedu/address/model/person/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"public class AgeTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Age(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public void constructor_invalidAge_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        String invalidAge \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge));","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public void isValidAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        // null Age","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        assertThrows(NullPointerException.class, () -\u003e Age.isValidAge(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        // invalid ages","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"-1\")); // negative numbers","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"150\")); // absurdly high age","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"age\")); // non-numeric","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"9p1\")); // alphabets within digits","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"3 4\")); // spaces within digits","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"34a\")); // trailing alphabets","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        // valid phone numbers","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"0\")); // edge case","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"6\")); // single digit","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"91\")); // double digits","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"114\")); // triple digits","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"149\")); // edge case","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        Age age \u003d new Age(\"30\");","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        assertTrue(age.equals(new Age(\"30\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        assertTrue(age.equals(age));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        assertFalse(age.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        assertFalse(age.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        assertFalse(age.equals(new Age(\"95\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"vansh284":64}},{"path":"src/test/java/seedu/address/model/person/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"public class LocationTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        // null address","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        // invalid addresses","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        // valid addresses","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(Location.isValidLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        Location location \u003d new Location(\"Valid Location\");","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(location.equals(new Location(\"Valid Location\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(location.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(location.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(location.equals(new Location(\"Other Valid Location\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"alvinlim277":56}},{"path":"src/test/java/seedu/address/model/person/MedHistoryContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"public class MedHistoryContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"    public void test_medicalHistoryContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        // One keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Collections.singletonList(\"Osteoporosis\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder().withMedicalHistory(\"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Diabetes\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder().withMedicalHistory(\"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        // One Keyword with Multiple Medical History","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Collections.singletonList(\"Osteoporosis\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder().withMedicalHistory(\"Diabetes\", \"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"        // Multiple Keyword with Multiple Medical History","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Asthma\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"                .withMedicalHistory(\"Diabetes\", \"Osteoporosis\", \"Asthma\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Diabetes\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"                .withMedicalHistory(\"Osteoporosis primary type 1\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"oSteOpoROsis\", \"dIaBeTeS\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"                .withMedicalHistory(\"Osteoporosis\", \"Diabetes\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"angkyakdifp"},"content":"    public void test_medicalHistoryDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"angkyakdifp"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(predicate.test(new PatientBuilder().withMedicalHistory(\"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"angkyakdifp"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(predicate.test(new PatientBuilder().withMedicalHistory(\"Anemia\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"angkyakdifp"},"content":"        // Keywords match phone, email and address, but does not match Medical History","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(predicate.test(new PatientBuilder().withMedicalHistory(\"Anemia\").withPhone(\"12345\")","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"angkyakdifp"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"angkyakdifp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate predicate \u003d new MedHistoryContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"angkyakdifp"},"content":"        String expected \u003d MedHistoryContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"angkyakdifp":104}},{"path":"src/test/java/seedu/address/model/person/MedicalHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_ANEMIA;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_OSTEOPOROSIS;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"public class MedicalHistoryTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MedicalHistory(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"    public void constructor_invalidMedicalHistory_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"        String invalidMedicalHistory \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidMedicalHistory));","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    public void isValidMedicalHistory() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        // null specialty","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(NullPointerException.class, () -\u003e MedicalHistory.isValidMedicalHistory(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        // invalid specialties","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(MedicalHistory.isValidMedicalHistory(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(MedicalHistory.isValidMedicalHistory(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"        // valid medical history","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(MedicalHistory.isValidMedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"        MedicalHistory medicalHistory \u003d new MedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(medicalHistory.equals(new MedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS)));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(medicalHistory.equals(medicalHistory));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(medicalHistory.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(medicalHistory.equals(VALID_MEDICAL_HISTORY_OSTEOPOROSIS));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(medicalHistory.equals(new MedicalHistory(VALID_MEDICAL_HISTORY_ANEMIA)));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"angkyakdifp":54}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":1,"vansh284":8,"-":76,"alvinlim277":1}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_OSTEOPOROSIS;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"public class PatientTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        // different age -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withAge(VALID_AGE_THIRTY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        // different medical history -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withMedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"                + \", age\u003d\" + ALICE.getAge()","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                + \", medical history\u003d\" + ALICE.getMedicalHistory() + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        // same name different personType -\u003e false","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(new PatientBuilder().build().isSamePerson(new SpecialistBuilder().build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        Person amyBee \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        Person evilAmyBee \u003d new PatientBuilder().withEmail(\"evilAmy@example.com\").build();","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        Person aliceBee \u003d new PatientBuilder().withName(\"Alice Bee\").build();","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        // same name same personType -\u003e true","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(new PatientBuilder().build().isSamePerson(new PatientBuilder().build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        // same object -\u003e true","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(aliceBee.isSamePerson(aliceBee));","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"        // same fields different name -\u003e false","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(amyBee.isSamePerson(aliceBee));","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        // same name different fields -\u003e true","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(amyBee.isSamePerson(evilAmyBee));","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":28,"angkyakdifp":6,"alvinlim277":25}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        Person person \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        Person editedBob \u003d new SpecialistBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d new SpecialistBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        Person aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"vansh284":12,"-":75,"alvinlim277":1}},{"path":"src/test/java/seedu/address/model/person/SpecialistTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_ORTHOPAEDIC;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class SpecialistTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        // different speciality -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        Person editedBob \u003d new SpecialistBuilder(BOB).withSpecialty(VALID_SPECIALTY_ORTHOPAEDIC).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        String expected \u003d Specialist.class.getCanonicalName() + \"{name\u003d\" + BOB.getName() + \", phone\u003d\" + BOB.getPhone()","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"                + \", email\u003d\" + BOB.getEmail() + \", tags\u003d\" + BOB.getTags() + \", location\u003d\" + BOB.getLocation()","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"                + \", specialty\u003d\" + BOB.getSpecialty() + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, BOB.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        // same name different personType -\u003e false","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(new SpecialistBuilder().build().isSamePerson(new PatientBuilder().build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        Person amyBee \u003d new SpecialistBuilder().build();","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        Person evilAmyBee \u003d new SpecialistBuilder().withEmail(\"evilAmy@example.com\").build();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        Person aliceBee \u003d new SpecialistBuilder().withName(\"Alice Bee\").build();","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        // same name same personType -\u003e true","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(new SpecialistBuilder().build().isSamePerson(new SpecialistBuilder().build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        // same object -\u003e true","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(aliceBee.isSamePerson(aliceBee));","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        // same fields different name -\u003e false","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(amyBee.isSamePerson(aliceBee));","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        // same name different fields -\u003e true","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(amyBee.isSamePerson(evilAmyBee));","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":1,"vansh284":27,"alvinlim277":24}},{"path":"src/test/java/seedu/address/model/person/SpecialtyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_ORTHOPAEDIC;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"public class SpecialtyTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Specialty(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    public void constructor_invalidSpecialty_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"        String invalidSpecialty \u003d \"\";","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidSpecialty));","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    public void isValidSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"        // null specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Specialty.isValidSpecialty(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        // invalid specialties","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(Specialty.isValidSpecialty(\"\")); // empty string","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(Specialty.isValidSpecialty(\" \")); // spaces only","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        // valid specialties","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        assertTrue(Specialty.isValidSpecialty(VALID_SPECIALTY_DERMATOLOGY));","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"        Specialty specialty \u003d new Specialty(VALID_SPECIALTY_ORTHOPAEDIC);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        assertTrue(specialty.equals(new Specialty(VALID_SPECIALTY_ORTHOPAEDIC)));","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        assertTrue(specialty.equals(specialty));","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(specialty.equals(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(specialty.equals(VALID_SPECIALTY_ORTHOPAEDIC));","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(specialty.equals(new Specialty(VALID_SPECIALTY_DERMATOLOGY)));","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"Kokseng1":54}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"vansh284":1,"-":171,"alvinlim277":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    private static final List\u003cJsonAdaptedMedicalHistory\u003e VALID_MEDICAL_HISTORY \u003d BENSON.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"            .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"            .map(JsonAdaptedMedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"            .collect(Collectors.toList());;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_AGE \u003d BENSON.getAge().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"    private static final String INVALID_MEDICAL_HISTORY \u003d \"#anemia\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    private static final String INVALID_AGE \u003d \"-1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    public void toModelType_invalidMedicalHistory_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cJsonAdaptedMedicalHistory\u003e invalidMedicalHistory \u003d new ArrayList\u003c\u003e(VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        invalidMedicalHistory.add(new JsonAdaptedMedicalHistory(INVALID_MEDICAL_HISTORY));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"                        VALID_AGE, invalidMedicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public void toModelType_invalidAge_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, INVALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d Age.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    public void toModelType_nullAge_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, null, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Age.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":36,"angkyakdifp":16,"alvinlim277":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_AGE \u003d BENSON.getAge().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"    private static final List\u003cJsonAdaptedMedicalHistory\u003e VALID_MEDICAL_HISTORY \u003d BENSON.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"            .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"            .map(JsonAdaptedMedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"            .collect(Collectors.toList());;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"vansh284":8,"angkyakdifp":4,"-":77,"alvinlim277":8}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedSpecialistTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"public class JsonAdaptedSpecialistTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    private static final String INVALID_SPECIALTY \u003d \"\";","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_NAME \u003d GEORGE.getName().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_PHONE \u003d GEORGE.getPhone().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_EMAIL \u003d GEORGE.getEmail().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    private static final String VALID_LOCATION \u003d GEORGE.getLocation().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_SPECIALTY \u003d GEORGE.getSpecialty().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d GEORGE.getTags().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_LOCATION, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"                        VALID_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"                        VALID_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"                Location.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    public void toModelType_validSpecialistDetails_returnsSpecialist() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"        JsonAdaptedSpecialist specialist \u003d new JsonAdaptedSpecialist(GEORGE);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        assertEquals(GEORGE, specialist.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    public void toModelType_invalidSpecialty_throwsIllegalValueException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"                        INVALID_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        String expectedMessage \u003d Specialty.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public void toModelType_nullSpeciality_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, null);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Specialty.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":28,"vansh284":18,"alvinlim277":27}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"                .toModelType();","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kokseng1":2,"-":46}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"public class EditPatientDescriptorBuilder extends EditPersonDescriptorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditPatientDescriptor());","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditPatientDescriptor(editPatientDescriptor));","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        setDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        editPersonDescriptorSetFields(patient);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        editPatientDescriptor.setAge(patient.getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        editPatientDescriptor.setMedicalHistory(patient.getMedicalHistory());","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"     * Sets the {@code Age} of the {@code EditAgeDescriptor} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public EditPersonDescriptorBuilder withAge(String age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        EditCommand.EditPatientDescriptor editPatientDescriptor \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"                (EditCommand.EditPatientDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        editPatientDescriptor.setAge(new Age(age));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"     * Sets the {@code MedicalHistory} of the {@code EditMedicalHistoryDescriptor} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"    public EditPersonDescriptorBuilder withMedicalHistory(String... medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        EditCommand.EditPatientDescriptor editPatientDescriptor \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"                (EditCommand.EditPatientDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        Set\u003cMedicalHistory\u003e medHistSet \u003d Stream.of(medicalHistory).map(MedicalHistory::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"        editPatientDescriptor.setMedicalHistory(medHistSet);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        return (EditPatientDescriptor) getDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":45,"angkyakdifp":18}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"public abstract class EditPersonDescriptorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"     * Sets the descriptor fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    public void editPersonDescriptorSetFields(Person person) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"     * Parses the {@code tag} into an empty {@code Set\u003ctag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"    public EditPersonDescriptorBuilder withEmptyTags() {","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"        descriptor.setTags(new HashSet\u003cTag\u003e());","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"    public abstract EditPersonDescriptor build();","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    public EditPersonDescriptor getDescriptor() {","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"    public void setDescriptor(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"        this.descriptor \u003d descriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Gavino3o":4,"vansh284":12,"-":70}},{"path":"src/test/java/seedu/address/testutil/EditSpecialistDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building EditSpecialistDescriptor objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"public class EditSpecialistDescriptorBuilder extends EditPersonDescriptorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public EditSpecialistDescriptorBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditSpecialistDescriptor());","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public EditSpecialistDescriptorBuilder(EditSpecialistDescriptor editSpecialistDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditSpecialistDescriptor(editSpecialistDescriptor));","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     * Returns an {@code EditSpecialistDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    public EditSpecialistDescriptorBuilder(Specialist specialist) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d new EditSpecialistDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        setDescriptor(editSpecialistDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        editPersonDescriptorSetFields(specialist);","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        editSpecialistDescriptor.setSpecialty(specialist.getSpecialty());","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"     * Sets the {@code Location} of the {@code EditSpecialtyDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    public EditSpecialistDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d (EditSpecialistDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        editSpecialistDescriptor.setLocation(new Location(location));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"     * Sets the {@code Specialty} of the {@code EditSpecialtyDescriptor} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    public EditSpecialistDescriptorBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d (EditSpecialistDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"        editSpecialistDescriptor.setSpecialty(new Specialty(specialty));","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public EditSpecialistDescriptor build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        return (EditSpecialistDescriptor) getDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":12,"vansh284":30,"alvinlim277":10}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class PatientBuilder extends PersonBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public static final String DEFAULT_AGE \u003d \"30\";","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    private Set\u003cMedicalHistory\u003e medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        super();","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        super(patientToCopy);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        age \u003d patientToCopy.getAge();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory \u003d patientToCopy.getMedicalHistory();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public Age getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        return age;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    public Set\u003cMedicalHistory\u003e getMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"     * Sets the {@code Age} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    public PatientBuilder withAge(String age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"     * Sets the {@code MedicalHistory} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"    public PatientBuilder withMedicalHistory(String ... medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        this.medicalHistory \u003d SampleDataUtil.getMedicalHistorySet(medicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public Patient build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"        return new Patient(getName(), getPhone(), getEmail(), getTags(), getAge(), getMedicalHistory());","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":39,"angkyakdifp":25,"alvinlim277":1}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"public class PatientUtil {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        return AddCommand.COMMAND_WORD + \" \" + PATIENT_TAG + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        patient.getMedicalHistory().stream().forEach(s -\u003e sb.append(PREFIX_MEDICALHISTORY + s.value + \" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_AGE + patient.getAge().value + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        descriptor.getAge().ifPresent(age -\u003e sb.append(PREFIX_AGE).append(age.value).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"        if (descriptor.getMedicalHistory().isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"            Set\u003cMedicalHistory\u003e medicalHistory \u003d descriptor.getMedicalHistory().get();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"            if (medicalHistory.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"                sb.append(PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"                medicalHistory.forEach(s -\u003e sb.append(PREFIX_MEDICALHISTORY).append(s.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"angkyakdifp"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"vansh284":19,"angkyakdifp":12,"-":43}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public abstract class PersonBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    private Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    public abstract Person build();","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        return name;","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"        return phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        return email;","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"        return tags;","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"vansh284":18,"-":81,"alvinlim277":2}},{"path":"src/test/java/seedu/address/testutil/SpecialistBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building Specialist objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class SpecialistBuilder extends PersonBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    public static final String DEFAULT_SPECIALTY \u003d \"Dermatology\";","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    public static final String DEFAULT_LOCATION \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    private Specialty specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    private Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * Creates a {@code SpecialistBuilder} with the default details.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    public SpecialistBuilder() {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"        super();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"        specialty \u003d new Specialty(DEFAULT_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     * Initializes the SpecialistBuilder with the data of {@code specialistToCopy}.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    public SpecialistBuilder(Specialist specialistToCopy) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        super(specialistToCopy);","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        specialty \u003d specialistToCopy.getSpecialty();","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        location \u003d specialistToCopy.getLocation();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        return location;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    public Specialty getSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        return specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"     * Sets the {@code Specialty} of the {@code Specialist} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"     * @param specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"     * @return PersonBuilder with specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    public SpecialistBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        this.specialty \u003d new Specialty(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"     * Sets the {@code Location} of the {@code Specialist} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"    public SpecialistBuilder withLocation(String location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    public Specialist build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        return new Specialist(getName(), getPhone(), getEmail(), getLocation(), getTags(), getSpecialty());","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":29,"vansh284":16,"alvinlim277":22}},{"path":"src/test/java/seedu/address/testutil/SpecialistUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":" * A utility class for Specialist.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"public class SpecialistUtil {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"     * Returns an add command string for adding the {@code specialist}.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    public static String getAddCommand(Specialist specialist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        return AddCommand.COMMAND_WORD + \" \" + SPECIALIST_TAG + \" \" + getSpecialistDetails(specialist);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code specialist}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public static String getSpecialistDetails(Specialist specialist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_NAME + specialist.getName().fullName + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_PHONE + specialist.getPhone().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_EMAIL + specialist.getEmail().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        sb.append(PREFIX_LOCATION + specialist.getLocation().value + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        specialist.getTags().stream().forEach(","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        sb.append(PREFIX_SPECIALTY + specialist.getSpecialty().value + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code EditSpecialistDescriptor}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public static String getEditSpecialistDescriptorDetails(EditSpecialistDescriptor descriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        descriptor.getLocation().ifPresent(address -\u003e sb.append(PREFIX_LOCATION).append(address.value).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        descriptor.getSpecialty().ifPresent(specialty -\u003e sb.append(PREFIX_SPECIALTY).append(specialty.value)","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Kokseng1":9,"vansh284":16,"-":35,"alvinlim277":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_ANEMIA;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    public static final Patient ALICE \u003d (Patient) new PatientBuilder().withAge(\"17\")","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"            .withMedicalHistory(\"Anemia\", \"Osteoporosis\")","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"    public static final Patient BENSON \u003d (Patient) new PatientBuilder().withAge(\"29\")","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"            .withMedicalHistory(\"Osteoporosis\")","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"    public static final Patient CARL \u003d (Patient) new PatientBuilder().withAge(\"47\")","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Carl Kurz\").withPhone(\"95352563\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    public static final Patient DANIEL \u003d (Patient) new PatientBuilder().withAge(\"78\").withMedicalHistory(\"Asthma\")","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"    public static final Specialist ELLE \u003d (Specialist) new SpecialistBuilder().withSpecialty(\"Dermatology\")","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(\"michegan ave\").withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    public static final Specialist FIONA \u003d (Specialist) new SpecialistBuilder().withSpecialty(\"Orthopaedic\")","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(\"little tokyo\").withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"    public static final Specialist GEORGE \u003d (Specialist) new SpecialistBuilder().withSpecialty(\"Physiotherapy\")","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(\"4th street\").withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public static final Patient HOON \u003d (Patient) new PatientBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"            .withAge(\"79\").withMedicalHistory(\"Diabetes\")","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"            .withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    public static final Specialist IDA \u003d (Specialist) new SpecialistBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"            .withSpecialty(\"Gynaecology\")","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"            .withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    public static final Patient AMY \u003d (Patient) new PatientBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"            .withAge(VALID_AGE_THIRTY).withMedicalHistory(VALID_MEDICAL_HISTORY_ANEMIA)","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"    public static final Specialist BOB \u003d (Specialist) new SpecialistBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(VALID_LOCATION_BOB).withSpecialty(VALID_SPECIALTY_DERMATOLOGY)","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"            .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Kokseng1":3,"vansh284":16,"angkyakdifp":11,"-":52,"alvinlim277":19}}]

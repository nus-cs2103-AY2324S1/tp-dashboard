[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W13-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W13-1/tp/graph/badge.svg?token\u003dJF1YGHQMCK)](https://codecov.io/gh/AY2324S1-CS2103T-W13-1/tp)","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"## DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"* DoConnek Pro is **a contact management app for General Practitioner (GP) clinic management staff.**\u003cbr\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"  * Adding, deleting and viewing patient information","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"  * Adding, deleting and viewing specialist information (for referrals)","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"  * Saving/loading contact information between sessions","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"-":7,"alvinlim277":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"# About Us","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"DoConnek Pro is developed by the W13-1 team.","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"### Vansh Nath","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"\u003cimg src\u003d\"images/vansh284.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"[[github](https://github.com/vansh284)]","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"[[portfolio](team/vansh284.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"* Role: Developer","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"* Responsibilities: Team lead, Integration","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"### Gavin Chiam Xiang Zhe","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"\u003cimg src\u003d\"images/gavino3o.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"[[github](http://github.com/gavino3o)]","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"[[portfolio](team/gavino3o.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"* Role: Developer","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"* Responsibilities: Code Quality, Deliverables and Deadlines, Git Expert","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"### Lim Jun Han, Alvin","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"\u003cimg src\u003d\"images/alvinlim277.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"[[github](http://github.com/alvinlim277)] ","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"[[portfolio](team/alvinlim277.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"* Responsibilities: Documentation, Testing ","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"### Ng Kok Seng","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"\u003cimg src\u003d\"images/kokseng1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"[[github](http://github.com/kokseng1)]","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"[[portfolio](team/kokseng1.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"  * Responsibilities: Scheduling and tracking, in charge of models","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"### Angky Akdi Frandy Putrakelana","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"\u003cimg src\u003d\"images/angkyakdifp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"[[github](http://github.com/angkyakdifp)]","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"[[portfolio](team/angkyakdifp.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"* Responsibilities: In Charge of UI, In Charge of Storage","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Kokseng1":5,"Gavino3o":9,"vansh284":6,"angkyakdifp":5,"-":31,"alvinlim277":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"vansh284"},"content":"The target users...","lastModifiedDate":"2023-09-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"vansh284"},"content":"* are management staff at a General Practitioner\u0027s Clinic","lastModifiedDate":"2023-09-26"},{"lineNumber":263,"author":{"gitId":"vansh284"},"content":"* need to keep track of the clinic\u0027s patients\u0027 details","lastModifiedDate":"2023-09-26"},{"lineNumber":264,"author":{"gitId":"vansh284"},"content":"* need to keep track of the affiliated specialists that the clinic refers patients to","lastModifiedDate":"2023-09-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"vansh284"},"content":"* prefer typing to mouse interactions","lastModifiedDate":"2023-09-26"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2023-09-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":270,"author":{"gitId":"vansh284"},"content":"**Value proposition**: A one-stop application that allows management of both a clinic\u0027s patient and specialist details faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-09-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"vansh284"},"content":"Priorities: Essential (must have) - `* * *`, Typical (nice to have) - `* *`, Novel (unlikely to have) - `*`","lastModifiedDate":"2023-09-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​                  | I want to …​                                                           | So that I can…​                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"angkyakdifp"},"content":"|---------|--------------------------|------------------------------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| `* * *` | new user                 | see usage instructions                                                 | refer to instructions when I forget how to use the App                |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | deal with patient and specialist records separately                    | easily do patient-specific or specialist-specific operations          |","lastModifiedDate":"2023-09-29"},{"lineNumber":282,"author":{"gitId":"Kokseng1"},"content":"| `* * *` | user                     | add a new patient to the records                                       | keep track of details of new patients                                 |","lastModifiedDate":"2023-10-01"},{"lineNumber":283,"author":{"gitId":"Kokseng1"},"content":"| `* * *` | user                     | delete individual patient details                                      | delete records of patients I no longer take care                      |","lastModifiedDate":"2023-10-01"},{"lineNumber":284,"author":{"gitId":"Kokseng1"},"content":"| `* *`   | user                     | edit details of existing patients                                      | make sure the patients\u0027 details are up to date                        |","lastModifiedDate":"2023-10-01"},{"lineNumber":285,"author":{"gitId":"Kokseng1"},"content":"| `* *`   | user                     | easily search for patient by name                                      | find relevant patient information quickly                             |","lastModifiedDate":"2023-10-01"},{"lineNumber":286,"author":{"gitId":"Kokseng1"},"content":"| `* * *` | user                     | access a patient\u0027s medical history                                     | provide more informed care based on the patient\u0027s medical history     |","lastModifiedDate":"2023-10-01"},{"lineNumber":287,"author":{"gitId":"Kokseng1"},"content":"| `* * *` | user                     | access a patient\u0027s contact number                                      | quickly get in contact with the patient                               |","lastModifiedDate":"2023-10-01"},{"lineNumber":288,"author":{"gitId":"vansh284"},"content":"| `* * *` | user                     | access a patient\u0027s age                                                 | provide age-specific care and treatment to the patient                |","lastModifiedDate":"2023-09-29"},{"lineNumber":289,"author":{"gitId":"vansh284"},"content":"| `* *`   | user                     | filter patient records by criteria such as medical condition and age   | simplify the process of finding specific patient information          |","lastModifiedDate":"2023-09-29"},{"lineNumber":290,"author":{"gitId":"vansh284"},"content":"| `*`     | user                     | customise tags for my patients                                         | have control over the organisation of my patients                     |","lastModifiedDate":"2023-09-29"},{"lineNumber":291,"author":{"gitId":"vansh284"},"content":"| `*`     | user                     | group delete patients by category or tag                               | save time when removing large amount of patient records               |","lastModifiedDate":"2023-09-29"},{"lineNumber":292,"author":{"gitId":"angkyakdifp"},"content":"| `* * *` | user                     | add a new specialist to the records                                    | keep track of details of new specialists patients can be referred to  |","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"angkyakdifp"},"content":"| `* *`   | user                     | edit details of existing specialists                                   | make sure the specialist details are up to date                       |","lastModifiedDate":"2023-10-05"},{"lineNumber":294,"author":{"gitId":"angkyakdifp"},"content":"| `* * *` | user                     | delete specialist details                                              | delete records of specialists I no longer work with                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"angkyakdifp"},"content":"| `* * *` | user                     | access specialist details                                              | provide relevant details to the patient I am refering                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"angkyakdifp"},"content":"| `* *`   | user                     | search for specialists by location                                     | refer patients to convenient specialists to minimise time             | ","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"Gavino3o"},"content":"| `* *`   | user                     | search for specialists by their speciality                             | refer patients to the right experts                                   |","lastModifiedDate":"2023-09-29"},{"lineNumber":298,"author":{"gitId":"Gavino3o"},"content":"| `*`     | user with poor eyesight  | customise font size and style of the App                               | easily read the information on the screen                             |","lastModifiedDate":"2023-09-29"},{"lineNumber":299,"author":{"gitId":"Gavino3o"},"content":"| `*`     | user who is colour blind | customise colour schemes of the App                                    | meet my accessibility needs                                           |","lastModifiedDate":"2023-09-29"},{"lineNumber":300,"author":{"gitId":"Gavino3o"},"content":"| `*`     | user who is a fast typer | perform all tasks will the CLI rather than the GUI                     | be more efficient in managing records                                 |","lastModifiedDate":"2023-09-29"},{"lineNumber":301,"author":{"gitId":"Gavino3o"},"content":"| `* *`   | user who is impatient    | add new keyboard shortcuts to the App                                  | save time when performing frequently repeated tasks                   |","lastModifiedDate":"2023-09-29"},{"lineNumber":302,"author":{"gitId":"alvinlim277"},"content":"| `*`     | lazy user                | import App data previously stored as a .CSV file directly into the App | save time on setting up the application                               |","lastModifiedDate":"2023-10-02"},{"lineNumber":303,"author":{"gitId":"alvinlim277"},"content":"| `*`     | lazy user                | export App data                                                        | share the data easily when required                                   |","lastModifiedDate":"2023-10-02"},{"lineNumber":304,"author":{"gitId":"alvinlim277"},"content":"| `* * *` | user                     | save the App data                                                      | retain data for future reference                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":305,"author":{"gitId":"alvinlim277"},"content":"| `* * *` | user                     | load previously saved App data                                         | examine past records/information                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":306,"author":{"gitId":"alvinlim277"},"content":"| `*`     | experienced user         | manipulate the save file directly                                      | make quick changes to data without having to open the application     |","lastModifiedDate":"2023-10-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Kokseng1"},"content":"(For all use cases below, the **System** is the `DoConnek Pro` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-09-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"Kokseng1"},"content":"2.  System shows a list of persons","lastModifiedDate":"2023-09-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"Kokseng1"},"content":"4.  System deletes the person","lastModifiedDate":"2023-09-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"Kokseng1"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-09-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"Kokseng1"},"content":"**Use case: Add a patient**","lastModifiedDate":"2023-09-26"},{"lineNumber":337,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":338,"author":{"gitId":"alvinlim277"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":339,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":340,"author":{"gitId":"Kokseng1"},"content":"1. User searches list to check if patient is already in the system","lastModifiedDate":"2023-09-28"},{"lineNumber":341,"author":{"gitId":"Kokseng1"},"content":"2. System shows that there are no entries matching the patient\u0027s name","lastModifiedDate":"2023-09-28"},{"lineNumber":342,"author":{"gitId":"Kokseng1"},"content":"3. User adds patient to the system","lastModifiedDate":"2023-09-28"},{"lineNumber":343,"author":{"gitId":"Kokseng1"},"content":"4. System confirms that the person has been added","lastModifiedDate":"2023-09-28"},{"lineNumber":344,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":345,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":346,"author":{"gitId":"alvinlim277"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":347,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":348,"author":{"gitId":"alvinlim277"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":349,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":350,"author":{"gitId":"Kokseng1"},"content":"* 3a. The given parameters are invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":351,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":352,"author":{"gitId":"Kokseng1"},"content":"  * 3a1. System shows an error message.","lastModifiedDate":"2023-09-28"},{"lineNumber":353,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":354,"author":{"gitId":"Kokseng1"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-09-26"},{"lineNumber":355,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":356,"author":{"gitId":"Gavino3o"},"content":"**Use case: Listing all patients**","lastModifiedDate":"2023-09-27"},{"lineNumber":357,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":358,"author":{"gitId":"Gavino3o"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":359,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":360,"author":{"gitId":"Gavino3o"},"content":"1. User requests to list all patients","lastModifiedDate":"2023-09-27"},{"lineNumber":361,"author":{"gitId":"Gavino3o"},"content":"2. System shows a list of all patients stored ","lastModifiedDate":"2023-09-27"},{"lineNumber":362,"author":{"gitId":"Gavino3o"},"content":"   ","lastModifiedDate":"2023-09-27"},{"lineNumber":363,"author":{"gitId":"Gavino3o"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":364,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":365,"author":{"gitId":"Gavino3o"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":366,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":367,"author":{"gitId":"Gavino3o"},"content":"* 1a. System detects invalid request format","lastModifiedDate":"2023-09-27"},{"lineNumber":368,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":369,"author":{"gitId":"Gavino3o"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-09-27"},{"lineNumber":370,"author":{"gitId":"Gavino3o"},"content":"  ","lastModifiedDate":"2023-09-27"},{"lineNumber":371,"author":{"gitId":"Gavino3o"},"content":"      Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":372,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":373,"author":{"gitId":"Gavino3o"},"content":"**Use case: Listing all specialists**","lastModifiedDate":"2023-09-27"},{"lineNumber":374,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":375,"author":{"gitId":"Gavino3o"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":376,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":377,"author":{"gitId":"Gavino3o"},"content":"1. User requests to list all specialists","lastModifiedDate":"2023-09-27"},{"lineNumber":378,"author":{"gitId":"Gavino3o"},"content":"2. System shows a list of all specialists stored ","lastModifiedDate":"2023-09-27"},{"lineNumber":379,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":380,"author":{"gitId":"Gavino3o"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":381,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":382,"author":{"gitId":"Gavino3o"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":383,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":384,"author":{"gitId":"Gavino3o"},"content":"* 1a. System detects invalid request format","lastModifiedDate":"2023-09-27"},{"lineNumber":385,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":386,"author":{"gitId":"Gavino3o"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-09-27"},{"lineNumber":387,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":388,"author":{"gitId":"Gavino3o"},"content":"      Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":389,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":390,"author":{"gitId":"angkyakdifp"},"content":"**Use case: Searching for patients**","lastModifiedDate":"2023-10-04"},{"lineNumber":391,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":392,"author":{"gitId":"angkyakdifp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":393,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":394,"author":{"gitId":"angkyakdifp"},"content":"1. User requests to find patients from a keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":395,"author":{"gitId":"angkyakdifp"},"content":"2. System shows a list of patients that match the keyword with their names.","lastModifiedDate":"2023-10-04"},{"lineNumber":396,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":397,"author":{"gitId":"angkyakdifp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":398,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":399,"author":{"gitId":"angkyakdifp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":400,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":401,"author":{"gitId":"angkyakdifp"},"content":"* 1a. System detects invalid request format","lastModifiedDate":"2023-10-04"},{"lineNumber":402,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":403,"author":{"gitId":"angkyakdifp"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":404,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":405,"author":{"gitId":"angkyakdifp"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":406,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":407,"author":{"gitId":"angkyakdifp"},"content":"* 1b. System could not find any patient from the keyword","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":409,"author":{"gitId":"angkyakdifp"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":410,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":411,"author":{"gitId":"angkyakdifp"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":412,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":413,"author":{"gitId":"alvinlim277"},"content":"**Use case: Exit the program**","lastModifiedDate":"2023-09-28"},{"lineNumber":414,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":415,"author":{"gitId":"alvinlim277"},"content":"**MSS**","lastModifiedDate":"2023-09-28"},{"lineNumber":416,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":417,"author":{"gitId":"alvinlim277"},"content":"1.  User requests to exit the program","lastModifiedDate":"2023-09-28"},{"lineNumber":418,"author":{"gitId":"alvinlim277"},"content":"2.  System exits the program","lastModifiedDate":"2023-09-28"},{"lineNumber":419,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":420,"author":{"gitId":"alvinlim277"},"content":"* 1a. System detects invalid request format.","lastModifiedDate":"2023-09-27"},{"lineNumber":421,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":422,"author":{"gitId":"alvinlim277"},"content":"  * 1a1. System shows an error message.","lastModifiedDate":"2023-09-27"},{"lineNumber":423,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":424,"author":{"gitId":"alvinlim277"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":425,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"vansh284"},"content":"4.  Should be made for use by a single user rather than multiple users.","lastModifiedDate":"2023-09-26"},{"lineNumber":434,"author":{"gitId":"vansh284"},"content":"5.  Any data should be stored locally in a human-editable text file without any use of a Database Management System.","lastModifiedDate":"2023-09-26"},{"lineNumber":435,"author":{"gitId":"vansh284"},"content":"6.  Should be usable with the download of a single JAR file of size less than 100 MB.","lastModifiedDate":"2023-09-26"},{"lineNumber":436,"author":{"gitId":"vansh284"},"content":"7.  Should not require any installation by the users.","lastModifiedDate":"2023-09-26"},{"lineNumber":437,"author":{"gitId":"vansh284"},"content":"7.  Should not depend on any remote server.","lastModifiedDate":"2023-09-26"},{"lineNumber":438,"author":{"gitId":"vansh284"},"content":"8.  The product should start from the given code base and be evolved/enhanced/morphed in a breadth-first incremental manner.","lastModifiedDate":"2023-09-26"},{"lineNumber":439,"author":{"gitId":"vansh284"},"content":"9.  The code should primarily follow the Object-oriented paradigm.","lastModifiedDate":"2023-09-26"},{"lineNumber":440,"author":{"gitId":"vansh284"},"content":"10. Should only use _appropriate third party frameworks/libraries/services_ that have been approved.","lastModifiedDate":"2023-09-26"},{"lineNumber":441,"author":{"gitId":"vansh284"},"content":"11. The product\u0027s _GUI should work well_ for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2023-09-26"},{"lineNumber":442,"author":{"gitId":"vansh284"},"content":"12. The product\u0027s _GUI should be usable_ for resolutions 1280x720 and higher, and, for screen scales 150%.","lastModifiedDate":"2023-09-26"},{"lineNumber":443,"author":{"gitId":"vansh284"},"content":"13. Should be intuitive to use for a user without a technical background.","lastModifiedDate":"2023-09-26"},{"lineNumber":444,"author":{"gitId":"vansh284"},"content":"13. The product is not required to handle printing of the patient and specialist records.","lastModifiedDate":"2023-09-26"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"vansh284"},"content":"* **Appropriate third party frameworks/libraries/systems**: Those frameworks/libraries/systems that are free, open-source, have permissive license terms, don\u0027t require installation by the users and don\u0027t violate other constraints.","lastModifiedDate":"2023-09-26"},{"lineNumber":452,"author":{"gitId":"vansh284"},"content":"* **GUI should work well**: The GUI should not cause resolution-related inconveniences for the user.","lastModifiedDate":"2023-09-26"},{"lineNumber":453,"author":{"gitId":"vansh284"},"content":"* **GUI should be usable**: The GUI\u0027s functions can all be used, although user-experience may be suboptimal.","lastModifiedDate":"2023-09-26"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kokseng1":22,"vansh284":29,"angkyakdifp":29,"Gavino3o":39,"-":361,"alvinlim277":26}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"DoConnek Pro is a **desktop app** that helps **General Practitioner Clinic Management Staff** manage their **contact information for patients and specialists**. It is optimized for **Command Line Interface (CLI) users** while having a **Graphical User Interface (GUI)**. This allows frequent tasks to be completed faster by typing in commands.","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"1. Download the latest `DocConnekPro.jar` from [here](https://github.com/AY2324S1-CS2103T-W13-1/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your DocConnek Pro.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar DocConnekPro.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"1. Type the command in the command input box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"   * `list -pa` : Lists all patients.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"   * `add -pa n/John p/12345678 a/21 m/Osteoporosis m/Rheumatoid arthritis` : Adds a patient named `John` to the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"   * `delete 3` : Deletes the 3rd person shown in the current list.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"* Commands acting on the address book must contain the `-pa` (for patient) and the `-sp` (for specialist) tag to specify which subset they ","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"would like the command to operate on.","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"  e.g. in `add -pa n/NAME`, `NAME` is a parameter which can be used as `add -pa n/John Doe`.","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"  e.g `n/NAME [m/MEDICAL_HISTORY]` can be used as `n/John Doe m/Osteoporosis` or as `n/John Doe`.","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"  e.g. `[m/MEDICAL_HISTORY]…​` can be used as ` ` (i.e. 0 times), `m/Osteoporosis`, `m/Osteoporosis m/Asthma` etc.","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"### Adding a patient or specialist: `add`","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"Adds a patient or specialist to the address book.","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"Format (for patients): `add -pa n/NAME p/PHONE_NUMBER a/AGE [m/MEDICAL_HISTORY]...​`\u003cbr\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"A patient can have any number of medical histories (including 0)","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"Format (for specialists): `add -sp n/NAME p/PHONE_NUMBER s/SPECIALISATION l/LOCATION`","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"* `add -pa n/John p/12345678 a/21 m/Osteoporosis m/Rheumatoid arthritis`","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"* `add -sp n/Jane p/73331515 s/Dermatologist l/Ang Mo Kio`","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"### Listing patient or specialist records: `list`","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"Shows a list of all patients or specialists in stored records.","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"Format: `list -PERSON_TYPE`","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"* `list -pa` Lists all patients in records.","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"* `list -sp` Lists all specialists in records.","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"### Locating persons by their attributes: `find`","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"Finds persons whose attributes contain any of the given keywords. ","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"Multiple attributes can be searched at once, the result will display any person","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"with all attributes containing any of the corresponding keywords in the command.","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"Format: `find -PERSON_TYPE [PREFIX/KEYWORDS]`","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"* `find -pa n/John` returns the patient `john` and the patient `John Doe`","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"* `find -sp n/alex david` returns the specialists `Alex Yeoh` and `David Li` ","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"* `find -sp n/Alex s/Orthopaedic` returns any specialists with the name `Alex` who has the `Orthopaedic` specialty","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"### Deleting a patient or specialist : `delete`","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"Deletes the specified patient or specialist from the stored records.","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"* The index **must be a positive integer** 1, 2, 3, …​ with a maximum value of the list size.","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"alvinlim277"},"content":"* `list -pa` followed by `delete 2` deletes the 2nd patient in the listed patients. ","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"* `find -sp n/Betsy` followed by `delete 1` deletes the 1st specialist from the specialists listed in the `find` command.","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"vansh284"},"content":"Clears all entries from the stored records.","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Kokseng1"},"content":"### Save and Load Data","lastModifiedDate":"2023-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Kokseng1"},"content":"The patient and specialist data will automatically be saved to the device’s harddrive every time the data is updated, and will automatically be loaded when the user starts the application. The user does not need to manually save any data.","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"DoConnek Pro data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":158,"author":{"gitId":"vansh284"},"content":"If your changes to the data file makes its format invalid, DoConnek Pro will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":161,"author":{"gitId":"Kokseng1"},"content":"### UI mock-up :","lastModifiedDate":"2023-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":163,"author":{"gitId":"alvinlim277"},"content":"![UI mock-up](images/Ui.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"alvinlim277"},"content":"**Add (patient)** | `add -pa n/NAME p/PHONE_NUMBER a/AGE [m/MEDICAL_HISTORY]...` \u003cbr\u003e e.g., `add -pa n/John p/12345678 a/21 m/Osteoporosis m/Rheumatoid arthritis`","lastModifiedDate":"2023-09-27"},{"lineNumber":185,"author":{"gitId":"alvinlim277"},"content":"**Add (specialist)** | `add -sp n/NAME p/PHONE_NUMBER s/SPECIALISATION l/LOCATION` \u003cbr\u003e e.g., `add -sp n/Jane p/73331515 s/Dermatologist l/Ang Mo Kio`","lastModifiedDate":"2023-09-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"Gavino3o"},"content":"**Find** | `find -PERSON_TYPE KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find -pa n/James Jake p/73281193`","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"vansh284"},"content":"**List** | `list -pa`","lastModifiedDate":"2023-09-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kokseng1":3,"vansh284":16,"angkyakdifp":6,"Gavino3o":15,"-":138,"alvinlim277":12}},{"path":"docs/team/alvinlim277.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"title: Lim Jun Han, Alvin Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"### Overview:","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"- *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"- **Code Contributed:**","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    - **User Guide:** *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    - **Developer Guide:** *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"- **Contributions beyond the project team:**","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"alvinlim277":26}},{"path":"docs/team/angkyakdifp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"title: Angky Akdi Frandy Putrakelana Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"### Overview:","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"- *to be added soon*","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"- **Code Contributed:**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"  - *to be added soon*","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"  - *to be added soon*","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"  - **User Guide:** *to be added soon*","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"  - **Developer Guide:** *to be added soon*","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"  - *to be added soon*","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"  - *to be added soon*","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"- **Contributions beyond the project team:**","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"  - *to be added soon*","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"angkyakdifp":26}},{"path":"docs/team/gavino3o.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"title: Gavin Chiam Xiang Zhe Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"### Overview:","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"- *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"- **Code Contributed:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"  - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"  - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"- **Contributions to Documentation:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"  - **User Guide:** *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"  - **Developer Guide:** *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"- **Contributions to team-based tasks:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"  - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"- **Review/mentoring contributions:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"  - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"- **Contributions beyond the project team:** ","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"  - *to be added soon*","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"Gavino3o":26}},{"path":"docs/team/kokseng1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"title: Ng Kok Seng Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"### Overview:","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"- *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"- **Code Contributed:**","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    - **User Guide:** *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    - **Developer Guide:** *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"- **Contributions beyond the project team:**","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"Kokseng1":26}},{"path":"docs/team/vansh284.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"title: Vansh Nath\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"## Project: DoConnek Pro","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"- **Code Contributed:** [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dvansh284\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"- **Contributions to Documentation:**","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    - **User Guide:**","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"      - Added documentation for the feature `delete`","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    - **Developer Guide:** *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"      - Added details of the non-functional requirements","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"- **Contributions beyond the project team:**","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    - *to be added soon*","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"vansh284":23}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"     * Adds specified String to the end of the toString return while keeping the format constant","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"     * @param stringToAdd string to be added","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"     * @param originalToString string to be added to","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"     * @return String consistent with Person#toString() format","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"    public static String addFieldToPersonToString(String stringToAdd, String originalToString) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(originalToString);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"        int insertIndex \u003d originalToString.length() - 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"        stringBuilder.insert(insertIndex, stringToAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"        return (stringBuilder.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kokseng1":15,"-":68}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_INVALID_PERSON_TYPE \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"            \"Invalid person type! Specify either \\\"-pa\\\" for patient or \\\"-sp\\\" for specialist\";","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_PERSON_TYPE_MISMATCH_INDEX \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            \"The person type tag does not match the person type at the specified index.\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"            Patient patient \u003d (Patient) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            builder.insert(0, \"Patient \")","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"                    .append(\"; Age: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"                    .append(patient.getAge())","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"                    .append(\"; Medical History: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"                    .append(patient.getMedicalHistory());","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        if (person instanceof Specialist) {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            Specialist specialist \u003d (Specialist) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"            builder.insert(0, \"Specialist \")","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"                    .append(\"; Specialty: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"                    .append(specialist.getSpecialty());","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":18,"vansh284":4,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_USAGE_GENERAL \u003d \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    private static final String PERSON_EXAMPLE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"            PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_LOCATION + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_PATIENT \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            + \": Adds a patient to the address book. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_MEDICALHISTORY + \"MEDICAL HISTORY \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"            + PREFIX_AGE + \"30 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"            + PREFIX_MEDICALHISTORY + \"Osteoporosis\";","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_SPECIALIST \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"            + \": Adds a specialist to the address book. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"Physiotherapist \";","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"        if (toAdd instanceof Patient) {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"            model.updateFilteredPersonList(PersonType.PATIENT.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"            model.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":31,"vansh284":2,"angkyakdifp":3,"-":74,"alvinlim277":8}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"            + \"1\";","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     * @param targetIndex of the person in the list to delete","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vansh284":5,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_USAGE_GENERAL \u003d \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \";","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    private static final String PERSON_EXAMPLE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"            PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_LOCATION + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"                    + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_PATIENT \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"            + \": Edit a patient in the address book. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_MEDICALHISTORY + \"MEDICAL HISTORY \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"            + PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"30 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_MEDICALHISTORY + \"Osteoporosis\";","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_SPECIALIST \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"            + \": edit a specialist in the address book. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"Physiotherapist \";","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"        if (editPersonDescriptor instanceof EditPatientDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"            this.editPersonDescriptor \u003d new EditPatientDescriptor((EditPatientDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"            this.editPersonDescriptor \u003d new EditSpecialistDescriptor((EditSpecialistDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"        Person editedPerson;","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"        if (personToEdit instanceof Patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"            if (!(editPersonDescriptor instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"                throw new CommandException(Messages.MESSAGE_PERSON_TYPE_MISMATCH_INDEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"            editedPerson \u003d createEditedPatient((Patient) personToEdit, (EditPatientDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"            if (!(editPersonDescriptor instanceof EditSpecialistDescriptor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"                throw new CommandException(Messages.MESSAGE_PERSON_TYPE_MISMATCH_INDEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"            editedPerson \u003d createEditedSpecialist((Specialist) personToEdit,","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"                    (EditSpecialistDescriptor) editPersonDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"vansh284"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"vansh284"},"content":"        Age updatedAge \u003d editPatientDescriptor.getAge().orElse(patientToEdit.getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"angkyakdifp"},"content":"        Set\u003cMedicalHistory\u003e updatedMedicalHistory \u003d editPatientDescriptor.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"angkyakdifp"},"content":"                .orElse(patientToEdit.getMedicalHistory());","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"alvinlim277"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedTags, updatedAge,","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"                updatedMedicalHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"     * Creates and returns a {@code Specialist} with the details of {@code specialistToEdit}","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"vansh284"},"content":"     * edited with {@code editSpecialistDescriptor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"vansh284"},"content":"    private static Specialist createEditedSpecialist(Specialist specialistToEdit,","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"vansh284"},"content":"                                                     EditSpecialistDescriptor editSpecialistDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"vansh284"},"content":"        assert specialistToEdit !\u003d null;","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"vansh284"},"content":"        Name updatedName \u003d editSpecialistDescriptor.getName().orElse(specialistToEdit.getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"vansh284"},"content":"        Phone updatedPhone \u003d editSpecialistDescriptor.getPhone().orElse(specialistToEdit.getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"vansh284"},"content":"        Email updatedEmail \u003d editSpecialistDescriptor.getEmail().orElse(specialistToEdit.getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"alvinlim277"},"content":"        Location updatedLocation \u003d editSpecialistDescriptor.getLocation().orElse(specialistToEdit.getLocation());","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"vansh284"},"content":"        Set\u003cTag\u003e updatedTags \u003d editSpecialistDescriptor.getTags().orElse(specialistToEdit.getTags());","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"Kokseng1"},"content":"        Specialty updatedSpecialty \u003d editSpecialistDescriptor.getSpecialty().orElse(specialistToEdit.getSpecialty());","lastModifiedDate":"2023-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":174,"author":{"gitId":"alvinlim277"},"content":"        return new Specialist(updatedName, updatedPhone, updatedEmail, updatedLocation, updatedTags, updatedSpecialty);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"vansh284"},"content":"    public abstract static class EditPersonDescriptor {","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"alvinlim277"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":301,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":303,"author":{"gitId":"vansh284"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-06"},{"lineNumber":304,"author":{"gitId":"vansh284"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-10-06"},{"lineNumber":305,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":306,"author":{"gitId":"vansh284"},"content":"    public static class EditPatientDescriptor extends EditPersonDescriptor {","lastModifiedDate":"2023-10-06"},{"lineNumber":307,"author":{"gitId":"vansh284"},"content":"        private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":308,"author":{"gitId":"angkyakdifp"},"content":"        private Set\u003cMedicalHistory\u003e medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":309,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":310,"author":{"gitId":"vansh284"},"content":"        /**","lastModifiedDate":"2023-10-06"},{"lineNumber":311,"author":{"gitId":"vansh284"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-06"},{"lineNumber":312,"author":{"gitId":"vansh284"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-06"},{"lineNumber":313,"author":{"gitId":"vansh284"},"content":"         */","lastModifiedDate":"2023-10-06"},{"lineNumber":314,"author":{"gitId":"vansh284"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":315,"author":{"gitId":"vansh284"},"content":"            super(toCopy);","lastModifiedDate":"2023-10-06"},{"lineNumber":316,"author":{"gitId":"angkyakdifp"},"content":"            setMedicalHistory(toCopy.medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":317,"author":{"gitId":"vansh284"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2023-10-15"},{"lineNumber":318,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":319,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":320,"author":{"gitId":"angkyakdifp"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":321,"author":{"gitId":"angkyakdifp"},"content":"        public void setMedicalHistory(Set\u003cMedicalHistory\u003e medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"angkyakdifp"},"content":"            this.medicalHistory \u003d (medicalHistory !\u003d null) ? new HashSet\u003c\u003e(medicalHistory) : null;","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":324,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":325,"author":{"gitId":"vansh284"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":326,"author":{"gitId":"vansh284"},"content":"            this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":327,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":328,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":329,"author":{"gitId":"angkyakdifp"},"content":"        public Optional\u003cSet\u003cMedicalHistory\u003e\u003e getMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":330,"author":{"gitId":"angkyakdifp"},"content":"            return (medicalHistory !\u003d null)","lastModifiedDate":"2023-10-17"},{"lineNumber":331,"author":{"gitId":"angkyakdifp"},"content":"                    ? Optional.of(Collections.unmodifiableSet(medicalHistory))","lastModifiedDate":"2023-10-17"},{"lineNumber":332,"author":{"gitId":"angkyakdifp"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":333,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":334,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":335,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":336,"author":{"gitId":"vansh284"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":337,"author":{"gitId":"vansh284"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":338,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":339,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":340,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":341,"author":{"gitId":"vansh284"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":342,"author":{"gitId":"angkyakdifp"},"content":"            if (super.equals(other) \u0026\u0026 other instanceof EditPatientDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":343,"author":{"gitId":"angkyakdifp"},"content":"                EditPatientDescriptor otherEditPatientDescriptor \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":344,"author":{"gitId":"vansh284"},"content":"                return Objects.equals(age, otherEditPatientDescriptor.age)","lastModifiedDate":"2023-10-15"},{"lineNumber":345,"author":{"gitId":"vansh284"},"content":"                        \u0026\u0026 Objects.equals(medicalHistory, otherEditPatientDescriptor.medicalHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":346,"author":{"gitId":"angkyakdifp"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":347,"author":{"gitId":"angkyakdifp"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":348,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":349,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":350,"author":{"gitId":"vansh284"},"content":"        public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":351,"author":{"gitId":"vansh284"},"content":"            String stringToAdd \u003d \", age\u003d\" + age + \", medical history\u003d\" + medicalHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":352,"author":{"gitId":"angkyakdifp"},"content":"            return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":353,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":354,"author":{"gitId":"angkyakdifp"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":355,"author":{"gitId":"angkyakdifp"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-13"},{"lineNumber":356,"author":{"gitId":"angkyakdifp"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":357,"author":{"gitId":"angkyakdifp"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":358,"author":{"gitId":"angkyakdifp"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-13"},{"lineNumber":359,"author":{"gitId":"vansh284"},"content":"            return super.isAnyFieldEdited() || CollectionUtil.isAnyNonNull(age, medicalHistory);","lastModifiedDate":"2023-10-15"},{"lineNumber":360,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":361,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":362,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":363,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":364,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":365,"author":{"gitId":"vansh284"},"content":"     * Stores the details to edit the specialist with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-06"},{"lineNumber":366,"author":{"gitId":"vansh284"},"content":"     * corresponding field value of the specialist.","lastModifiedDate":"2023-10-06"},{"lineNumber":367,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":368,"author":{"gitId":"vansh284"},"content":"    public static class EditSpecialistDescriptor extends EditPersonDescriptor {","lastModifiedDate":"2023-10-06"},{"lineNumber":369,"author":{"gitId":"Kokseng1"},"content":"        private Specialty specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":370,"author":{"gitId":"alvinlim277"},"content":"        private Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":371,"author":{"gitId":"vansh284"},"content":"        /**","lastModifiedDate":"2023-10-06"},{"lineNumber":372,"author":{"gitId":"vansh284"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-06"},{"lineNumber":373,"author":{"gitId":"vansh284"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-06"},{"lineNumber":374,"author":{"gitId":"vansh284"},"content":"         */","lastModifiedDate":"2023-10-06"},{"lineNumber":375,"author":{"gitId":"vansh284"},"content":"        public EditSpecialistDescriptor(EditSpecialistDescriptor toCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":376,"author":{"gitId":"vansh284"},"content":"            super(toCopy);","lastModifiedDate":"2023-10-06"},{"lineNumber":377,"author":{"gitId":"alvinlim277"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-10-16"},{"lineNumber":378,"author":{"gitId":"Kokseng1"},"content":"            setSpecialty(toCopy.specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":379,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":380,"author":{"gitId":"Kokseng1"},"content":"        public EditSpecialistDescriptor() {}","lastModifiedDate":"2023-10-10"},{"lineNumber":381,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":382,"author":{"gitId":"alvinlim277"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":383,"author":{"gitId":"alvinlim277"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":384,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":385,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":386,"author":{"gitId":"alvinlim277"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":387,"author":{"gitId":"alvinlim277"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":388,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":389,"author":{"gitId":"Kokseng1"},"content":"        public void setSpecialty(Specialty specialty) {","lastModifiedDate":"2023-10-10"},{"lineNumber":390,"author":{"gitId":"Kokseng1"},"content":"            this.specialty \u003d specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":391,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":392,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":393,"author":{"gitId":"Kokseng1"},"content":"        public Optional\u003cSpecialty\u003e getSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":394,"author":{"gitId":"Kokseng1"},"content":"            return Optional.ofNullable(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":395,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":396,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":397,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":398,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":399,"author":{"gitId":"vansh284"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":400,"author":{"gitId":"Kokseng1"},"content":"            if (super.equals(other) \u0026\u0026 other instanceof EditSpecialistDescriptor) {","lastModifiedDate":"2023-10-10"},{"lineNumber":401,"author":{"gitId":"Kokseng1"},"content":"                EditSpecialistDescriptor otherEditSpecialistDescriptor \u003d (EditSpecialistDescriptor) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":402,"author":{"gitId":"alvinlim277"},"content":"                return Objects.equals(specialty, otherEditSpecialistDescriptor.specialty)","lastModifiedDate":"2023-10-16"},{"lineNumber":403,"author":{"gitId":"alvinlim277"},"content":"                        \u0026\u0026 Objects.equals(location, otherEditSpecialistDescriptor.location);","lastModifiedDate":"2023-10-16"},{"lineNumber":404,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":405,"author":{"gitId":"Kokseng1"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":406,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":407,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":408,"author":{"gitId":"vansh284"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":409,"author":{"gitId":"vansh284"},"content":"        public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":410,"author":{"gitId":"alvinlim277"},"content":"            String stringToAdd \u003d \", location\u003d\" + location + \", specialty\u003d\" + specialty;","lastModifiedDate":"2023-10-16"},{"lineNumber":411,"author":{"gitId":"Kokseng1"},"content":"            return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":412,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":413,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":414,"author":{"gitId":"Kokseng1"},"content":"        /**","lastModifiedDate":"2023-10-10"},{"lineNumber":415,"author":{"gitId":"Kokseng1"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-10"},{"lineNumber":416,"author":{"gitId":"Kokseng1"},"content":"         */","lastModifiedDate":"2023-10-10"},{"lineNumber":417,"author":{"gitId":"Kokseng1"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":418,"author":{"gitId":"Kokseng1"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-10"},{"lineNumber":419,"author":{"gitId":"Kokseng1"},"content":"            return super.isAnyFieldEdited() || CollectionUtil.isAnyNonNull(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":420,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":421,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":422,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Kokseng1":69,"angkyakdifp":31,"vansh284":100,"-":201,"alvinlim277":21}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting DoConnek Pro as requested ...\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"alvinlim277":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_USAGE_GENERAL \u003d \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \";","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"    private static final String PERSON_EXAMPLE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"            PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_LOCATION + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_PATIENT \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            + \": Finds all Patients whose attributes contain any of \"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_MEDICALHISTORY + \"MEDICAL HISTORY \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"            + PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_AGE + \"30 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_MEDICALHISTORY + \"Osteoporosis\";","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_USAGE_SPECIALIST \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"            + \": Finds all Specialists whose attributes contain any of \"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"            + MESSAGE_USAGE_GENERAL","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"            + SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            + PERSON_EXAMPLE","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"            + PREFIX_SPECIALTY + \"Physiotherapist \";","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"    private final FindPredicateMap findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    private final PersonType personType;","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"     * @param findPredicateMap The predicate that describes the name being searched for","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"     * @param personType The type of person being searched for i.e. patient or specialist","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"    public FindCommand(FindPredicateMap findPredicateMap, PersonType personType) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"        this.findPredicateMap \u003d findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d person -\u003e findPredicateMap.getAllPredicates().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"                .map(pred -\u003e pred.test(person))","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"                .reduce(true, (x, y) -\u003e x \u0026\u0026 y);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        model.updateFilteredPersonList(predicate.and(personType.getSearchPredicate()));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap.equals(otherFindCommand.findPredicateMap)","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"                \u0026\u0026 personType.equals(otherFindCommand.personType);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"                .add(\"predicate\", findPredicateMap)","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"                .add(\"personType\", personType)","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"    public PersonType getPersonType() {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        return personType;","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"    public FindPredicateMap getPredicate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Kokseng1":34,"vansh284":10,"Gavino3o":33,"-":46,"alvinlim277":1}},{"path":"src/main/java/seedu/address/logic/commands/FindPredicateMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":" *  Stores mapping of prefixes to their respective predicates for a {@code find} command.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":" *  Keys are unique and each key should be associated with one predicate value.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":" *  Values for a given key are stored in a HashSet, and the insertion ordering is not maintained.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"public class FindPredicateMap {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    /** Prefixes mapped to their respective predicates **/","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    private final Map\u003cPrefix, Predicate\u003cPerson\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * Associates the specified predicate value with {@code prefix} key in this map.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     * @param prefix prefix key with which the specified argument value is to be associated","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     * @param predicateValue predicate value to be associated with the specified prefix key","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    public void put(Prefix prefix, Predicate\u003cPerson\u003e predicateValue) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        map.put(prefix, predicateValue);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"     * Returns the predicate value of {@code prefix}.","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    public Optional\u003cPredicate\u003cPerson\u003e\u003e getPredicateValue(Prefix prefix) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        return Optional.ofNullable(map.get(prefix));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"     * Returns all predicate value of {@code prefix}.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    public List\u003cPredicate\u003cPerson\u003e\u003e getAllPredicates() {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        if (map.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        return new ArrayList\u003c\u003e(map.values());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof FindPredicateMap)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap otherFindPredicateMap \u003d (FindPredicateMap) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        if (this.map.size() !\u003d otherFindPredicateMap.map.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        boolean isHashMapEquals \u003d this.map.equals(otherFindPredicateMap.map);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        boolean isKeyValueEquals \u003d this.map.keySet().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"                .map(key -\u003e otherFindPredicateMap.getPredicateValue(key).equals(this.getPredicateValue(key)))","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"                .reduce(true, (x, y) -\u003e x \u0026\u0026 y);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"        return isHashMapEquals || isKeyValueEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Gavino3o":73}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    public static final String PATIENT_MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    public static final String SPECIALIST_MESSAGE_SUCCESS \u003d \"Listed all specialists\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private final PersonType personType;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @param personType The type of person being listed i.e. patient or specialist","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    public ListCommand(PersonType personType) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        model.updateFilteredPersonList(personType.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        return new CommandResult(personType \u003d\u003d PersonType.PATIENT","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"                ? PATIENT_MESSAGE_SUCCESS","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"                : SPECIALIST_MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"alvinlim277":18}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"public class AddCommandParser implements ParserComplex\u003cAddCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public AddCommand parse(PersonType personType, String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        if (personType.equals(PersonType.PATIENT)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            Person person \u003d parsePatient(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            return new AddCommand(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        } else if (personType.equals(PersonType.SPECIALIST)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"            Person person \u003d parseSpecialist(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"            return new AddCommand(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_PERSON_TYPE));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    private Patient parsePatient(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"                        PREFIX_TAG, PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_AGE)","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"                PREFIX_AGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"        Set\u003cMedicalHistory\u003e medicalHistory \u003d ParserUtil.parseMedicalHistories(argMultimap","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"                .getAllValues(PREFIX_MEDICALHISTORY));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"        Patient patient \u003d new Patient(name, phone, email, tagList, age, medicalHistory);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        return patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"    private Specialist parseSpecialist(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"                        PREFIX_TAG, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LOCATION, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY)","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"                    AddCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_LOCATION, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"        Specialty specialty \u003d ParserUtil.parseSpecialty(argMultimap.getValue(PREFIX_SPECIALTY).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"        Specialist specialist \u003d new Specialist(name, phone, email, location, tagList, specialty);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"        return specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kokseng1":10,"vansh284":24,"angkyakdifp":10,"-":55,"alvinlim277":13}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"     * Used for initial separation of command word and args. Basic commands do not require a person type tag.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"            \"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"     * Used for initial separation of command word, person type and args. Complex commands require a person type tag.","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    private static final Pattern COMPLEX_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"            \"(?\u003ccommandWord\u003e\\\\S+)\\\\s(?\u003cpersonType\u003e-\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        final Matcher matcherBasic \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"        final Matcher matcherPersonType \u003d COMPLEX_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        if (matcherPersonType.matches()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"            final String commandWord \u003d matcherPersonType.group(\"commandWord\");","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"            final String personTypeWord \u003d matcherPersonType.group(\"personType\");","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"            final String arguments \u003d matcherPersonType.group(\"arguments\");","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"            // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"            // (i.e., FINE, FINER and lower) log messages such as the one below.","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"            logger.fine(","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"                    \"Command word: \" + commandWord + \"; Person type: \" + personTypeWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"            PersonType personType;","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"            if (personTypeWord.equals(PATIENT_TAG)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"                personType \u003d PersonType.PATIENT;","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"            } else if (personTypeWord.equals(SPECIALIST_TAG)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"                personType \u003d PersonType.SPECIALIST;","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"            } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"                throw new ParseException(MESSAGE_INVALID_PERSON_TYPE);","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"                return new AddCommandParser().parse(personType, arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"                return new EditCommandParser().parse(personType, arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"                return new FindCommandParser().parse(personType, arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"                return new ListCommand(personType);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"            default:","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"        } else if (matcherBasic.matches()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"            final String commandWord \u003d matcherBasic.group(\"commandWord\");","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"            final String arguments \u003d matcherBasic.group(\"arguments\");","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"            // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"            // (i.e., FINE, FINER and lower) log messages such as the one below.","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"            // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"            logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"            switch (commandWord) {","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"                return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"                return new ClearCommand();","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":117,"author":{"gitId":"Kokseng1"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"Kokseng1"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"Kokseng1"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"Kokseng1"},"content":"                throw new ParseException(MESSAGE_INVALID_PERSON_TYPE);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kokseng1":6,"vansh284":50,"-":66,"alvinlim277":9}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"    public static final Prefix PREFIX_MEDICALHISTORY \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    public static final Prefix PREFIX_SPECIALTY \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    /* Tag definitions */","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    public static final String PATIENT_TAG \u003d \"-pa\";","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    public static final String SPECIALIST_TAG \u003d \"-sp\";","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kokseng1":1,"vansh284":4,"angkyakdifp":1,"Gavino3o":1,"-":14,"alvinlim277":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"public class DeleteCommandParser implements ParserBasic\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":28,"alvinlim277":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"public class EditCommandParser implements ParserComplex\u003cEditCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    public EditCommand parse(PersonType personType, String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        if (personType.equals(PersonType.PATIENT)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"            return parsePatient(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        } else if (personType.equals(PersonType.SPECIALIST)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            return parseSpecialist(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_PERSON_TYPE));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    private EditCommand parsePatient(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"                        PREFIX_TAG, PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"                PREFIX_AGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"                    EditCommand.MESSAGE_USAGE_PATIENT), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"        if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"            editPatientDescriptor.setAge(ParserUtil.parseAge(argMultimap","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"                    .getValue(PREFIX_AGE).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"angkyakdifp"},"content":"        parseMedicalHistoriesForEdit(argMultimap.getAllValues(PREFIX_MEDICALHISTORY))","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"angkyakdifp"},"content":"                .ifPresent(editPatientDescriptor::setMedicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"        return new EditCommand(index, editPatientDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    private EditCommand parseSpecialist(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"                        PREFIX_TAG, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_LOCATION, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"        Index index;","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"                    EditCommand.MESSAGE_USAGE_SPECIALIST), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d new EditSpecialistDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"            editSpecialistDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"            editSpecialistDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"            editSpecialistDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"alvinlim277"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"alvinlim277"},"content":"            editSpecialistDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"        if (argMultimap.getValue(PREFIX_SPECIALTY).isPresent()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"Kokseng1"},"content":"            editSpecialistDescriptor.setSpecialty(ParserUtil.parseSpecialty(","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"Kokseng1"},"content":"                    argMultimap.getValue(PREFIX_SPECIALTY).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editSpecialistDescriptor::setTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"        if (!editSpecialistDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"        return new EditCommand(index, editSpecialistDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":149,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"angkyakdifp"},"content":"     * Parses {@code Collection\u003cString\u003e medicalHistories} into a {@code Set\u003cMedicalHistory\u003e}","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"angkyakdifp"},"content":"     * if {@code medicalHistories} is non-empty.","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"angkyakdifp"},"content":"     * If {@code medicalHistories} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"angkyakdifp"},"content":"     * {@code Set\u003cMedicalHistories\u003e} containing zero medical history.","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"angkyakdifp"},"content":"    private Optional\u003cSet\u003cMedicalHistory\u003e\u003e parseMedicalHistoriesForEdit(Collection\u003cString\u003e medicalHistories)","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"angkyakdifp"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"angkyakdifp"},"content":"        assert medicalHistories !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"angkyakdifp"},"content":"        if (medicalHistories.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"angkyakdifp"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"angkyakdifp"},"content":"        Collection\u003cString\u003e medHistSet \u003d medicalHistories.size() \u003d\u003d 1 \u0026\u0026 medicalHistories.contains(\"\")","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"angkyakdifp"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"angkyakdifp"},"content":"                : medicalHistories;","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"angkyakdifp"},"content":"        return Optional.of(ParserUtil.parseMedicalHistories(medHistSet));","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Kokseng1":13,"vansh284":42,"angkyakdifp":25,"-":80,"alvinlim277":7}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.FindPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.predicates.AgeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.predicates.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.SpecialtyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":" * Parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"public class FindCommandParser implements ParserComplex\u003cFindCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public FindCommand parse(PersonType personType, String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"            if (personType.equals(PersonType.PATIENT)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"                        FindCommand.MESSAGE_USAGE_PATIENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"            if (personType.equals(PersonType.SPECIALIST)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"                        FindCommand.MESSAGE_USAGE_SPECIALIST));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        if (personType.equals(PersonType.PATIENT)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"            return parsePatient(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        } else if (personType.equals(PersonType.SPECIALIST)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"            return parseSpecialist(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_PERSON_TYPE));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"    private FindCommand parsePatient(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"                        PREFIX_TAG, PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonPredicates(argMultimap);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"            List\u003cString\u003e ageKeyWords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_AGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_AGE, new AgeContainsKeywordsPredicate(ageKeyWords));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_MEDICALHISTORY).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e medHistKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_MEDICALHISTORY,","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"                    new MedHistoryContainsKeywordsPredicate(medHistKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        return new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"    private FindCommand parseSpecialist(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"                        PREFIX_TAG, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"                PREFIX_LOCATION, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonPredicates(argMultimap);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"            List\u003cString\u003e addressKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_LOCATION);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_LOCATION, new LocationContainsKeywordsPredicate(addressKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_SPECIALTY).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e specialtyKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_SPECIALTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_SPECIALTY, new SpecialtyContainsKeywordsPredicate(specialtyKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"        return new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"    private List\u003cString\u003e splitKeywordsByWhitespace(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(prefix).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"            String trimmedArgs \u003d argMultimap.getValue(prefix).get().trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"            String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"            return Arrays.asList(keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupPersonPredicates(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e nameKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_NAME);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e phoneKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_PHONE);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_PHONE, new PhoneContainsKeywordsPredicate(phoneKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e emailKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_EMAIL, new EmailContainsKeywordsPredicate(emailKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"            List\u003cString\u003e tagKeywords \u003d splitKeywordsByWhitespace(argMultimap, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"            findPredicateMap.put(PREFIX_TAG, new TagsContainsKeywordsPredicate(tagKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Kokseng1":10,"vansh284":7,"Gavino3o":81,"-":26,"alvinlim277":10}},{"path":"src/main/java/seedu/address/logic/parser/ParserBasic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":" * Represents a ParserBasic that is able to parse basic user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"public interface ParserBasic\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":14,"alvinlim277":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserComplex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Represents a ParserComplex that is able to parse complex user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public interface ParserComplex\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    T parse(PersonType personType, String userInput) throws ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"vansh284":2,"-":13,"alvinlim277":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":" * Contains utility methods used for parsing strings in the various *ParserComplex classes.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"     * Parses a {@code String specialty} into a {@code Specialty}.","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"     * @throws ParseException if the given {@code specialty} is invalid.","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"    public static Specialty parseSpecialty(String specialty) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"        requireNonNull(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"        String trimmedSpecialty \u003d specialty.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"        if (!Specialty.isValidSpecialty(trimmedSpecialty)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            throw new ParseException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"        return new Specialty(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"angkyakdifp"},"content":"     * Parses a {@code String medicalHistory} into a {@code MedicalHistory}.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"angkyakdifp"},"content":"     * @throws ParseException if the given {@code medicalHistory} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"angkyakdifp"},"content":"    public static MedicalHistory parseMedicalHistory(String medicalHistory) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"angkyakdifp"},"content":"        requireNonNull(medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"angkyakdifp"},"content":"        String trimmedSpecialty \u003d medicalHistory.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"angkyakdifp"},"content":"        if (!Specialty.isValidSpecialty(trimmedSpecialty)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"angkyakdifp"},"content":"            throw new ParseException(MedicalHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"angkyakdifp"},"content":"        return new MedicalHistory(medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"angkyakdifp"},"content":"     * Parses {@code Collection\u003cString\u003e medicalHistories} into a {@code Set\u003cMedicalHistory\u003e}.","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"angkyakdifp"},"content":"    public static Set\u003cMedicalHistory\u003e parseMedicalHistories(Collection\u003cString\u003e medicalHistories) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"angkyakdifp"},"content":"        requireNonNull(medicalHistories);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"angkyakdifp"},"content":"        final Set\u003cMedicalHistory\u003e medHistSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"angkyakdifp"},"content":"        for (String medicalhistory : medicalHistories) {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"angkyakdifp"},"content":"            medHistSet.add(parseMedicalHistory(medicalhistory));","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"        return medHistSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"alvinlim277"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"alvinlim277"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"alvinlim277"},"content":"        String trimmedAddress \u003d location.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"alvinlim277"},"content":"        if (!Location.isValidLocation(trimmedAddress)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"alvinlim277"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"alvinlim277"},"content":"        return new Location(trimmedAddress);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"vansh284"},"content":"     * Parses {@code String age} into a {@code Age}.","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"vansh284"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"vansh284"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"vansh284"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"vansh284"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"vansh284"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"vansh284"},"content":"        if (!Age.isValidAge(trimmedAge)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"vansh284"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"vansh284"},"content":"        return new Age(trimmedAge);","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kokseng1":16,"vansh284":16,"angkyakdifp":27,"-":114,"alvinlim277":10}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    /** {@code Predicate} that always evaluates to true */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":86,"alvinlim277":1}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        // DoConnek Pro shows all patients on startup by default.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        updateFilteredPersonList(PersonType.PATIENT.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":148,"alvinlim277":4}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" * Represents a Person\u0027s age in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class Age {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"            \"Age should only contain numbers between 0 and 149 both inclusive.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\b[0-9]|[1-9][0-9]|1[0-4][0-9]\\\\b\";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Constructs a {@code Age}.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * @param age A valid age.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public Age(String age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        value \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * Returns true if a given string is a valid age.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        if (!(other instanceof Age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        Age otherAge \u003d (Age) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        return value.equals(otherAge.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"vansh284":60}},{"path":"src/main/java/seedu/address/model/person/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":" * Represents a Person\u0027s location in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class Location {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     * @param location A valid location.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    public Location(String location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        value \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof Location)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        Location otherLocation \u003d (Location) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        return value.equals(otherLocation.value);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":49,"alvinlim277":16}},{"path":"src/main/java/seedu/address/model/person/MedicalHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":" * Represents a Patient\u0027s medical history in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"public class MedicalHistory {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"            \"Medical History should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"     * The first character of the Medical History must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"     * @param medicalHistoryInput A valid medical history.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"    public MedicalHistory(String medicalHistoryInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"        requireNonNull(medicalHistoryInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        checkArgument(isValidMedicalHistory(medicalHistoryInput), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"        this.value \u003d medicalHistoryInput;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"     * Returns true if a given string is a valid medical history.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    public static boolean isValidMedicalHistory(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        if (!(other instanceof MedicalHistory)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        MedicalHistory otherMedicalHistory \u003d (MedicalHistory) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        return value.equals(otherMedicalHistory.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"angkyakdifp":65}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private final Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"    private final Set\u003cMedicalHistory\u003e medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    public Patient(Name name, Phone phone, Email email, Set\u003cTag\u003e tags, Age age,","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"                   Set\u003cMedicalHistory\u003e medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"        this.medicalHistory \u003d medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    public Age getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        return age;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"    public Set\u003cMedicalHistory\u003e getMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        String stringToAdd \u003d \", age\u003d\" + age + \", medical history\u003d\" + medicalHistory;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        return super.equals(other)","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"                \u0026\u0026 age.equals(otherPatient.getAge())","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"                \u0026\u0026 medicalHistory.equals(otherPatient.medicalHistory);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":33,"angkyakdifp":20,"alvinlim277":4}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" * Represents a Person in the location book.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public abstract class Person {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vansh284":1,"-":103,"alvinlim277":4}},{"path":"src/main/java/seedu/address/model/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" * This enum encapsulates the types of people that the address book can deal with.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"public enum PersonType {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    PATIENT(person -\u003e person instanceof Patient), SPECIALIST(person -\u003e person instanceof Specialist);","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    /** {@code Predicate} that evaluates to true when {@code Person} matches the {@code PersonType}*/","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    private final Predicate\u003cPerson\u003e searchPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    PersonType(Predicate\u003cPerson\u003e searchPredicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"        this.searchPredicate \u003d searchPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public Predicate\u003cPerson\u003e getSearchPredicate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        return searchPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":7,"alvinlim277":15}},{"path":"src/main/java/seedu/address/model/person/Specialist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * Represents a Specialist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public class Specialist extends Person {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    private final Specialty specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    private final Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public Specialist(Name name, Phone phone, Email email, Location location, Set\u003cTag\u003e tags, Specialty specialty) {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        String stringToAdd \u003d \", location\u003d\" + location + \", specialty\u003d\" + specialty;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        return StringUtil.addFieldToPersonToString(stringToAdd, super.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"     * Returns true if the other object is a specialist and have the same identity and data fields.","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        if (!(other instanceof Specialist)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        Specialist otherSpecialist \u003d (Specialist) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        return super.equals(other)","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"                \u0026\u0026 location.equals(otherSpecialist.location)","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                \u0026\u0026 specialty.equals(otherSpecialist.specialty);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        return location;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    public Specialty getSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"        return specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":23,"vansh284":26,"alvinlim277":11}},{"path":"src/main/java/seedu/address/model/person/Specialty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":" * Represents a Specialist\u0027s specialty in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"public class Specialty {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"            \"Specialty should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    /*","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"     * The first character of the Specialty must not be a whitespace,","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    public final String value;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     * @param specialtyInput A valid specialty.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    public Specialty(String specialtyInput) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        requireNonNull(specialtyInput);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        checkArgument(isValidSpecialty(specialtyInput), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        value \u003d specialtyInput;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"     * Returns true if a given string is a valid specialty.","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    public static boolean isValidSpecialty(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        if (!(other instanceof Specialty)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        Specialty otherSpecialty \u003d (Specialty) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"        return value.equals(otherSpecialty.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"Kokseng1":65}},{"path":"src/main/java/seedu/address/model/person/predicates/AgeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * Tests that a {@code Patient}\u0027s {@code Age} matches any of the keywords given.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class AgeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    public AgeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        if (!(person instanceof Patient)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        // It is safe to type cast Person to Patient due to the guard clause above.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        Patient patient \u003d (Patient) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getAge().value, keyword));","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        if (!(other instanceof AgeContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        AgeContainsKeywordsPredicate otherAgeContainsKeywordsPredicate \u003d (AgeContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        return keywords.equals(otherAgeContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"vansh284":53}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":12,"-":34}},{"path":"src/main/java/seedu/address/model/person/predicates/LocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":" * Tests that a {@code Person}\u0027s {@code Location} matches any of the keywords given.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"public class LocationContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    public LocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        if (!(person instanceof Specialist)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        // It is safe to type cast Person to Specialist due to the guard clause above.","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        Specialist specialist \u003d (Specialist) person;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(specialist.getLocation().value, keyword));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        if (!(other instanceof LocationContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        LocationContainsKeywordsPredicate otherLocationContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"                (LocationContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        return keywords.equals(otherLocationContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":10,"-":29,"alvinlim277":15}},{"path":"src/main/java/seedu/address/model/person/predicates/MedHistoryContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Patient}\u0027s {@code Medical History} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"public class MedHistoryContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public MedHistoryContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        if (!(person instanceof Patient)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        // It is safe to type cast Person to Patient due to the guard clause above.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        Patient patient \u003d (Patient) person;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"        return patient.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"                .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"                .map(medicalHistory -\u003e keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                        .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(medicalHistory.value, keyword)))","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"                .reduce(false, (x, y) -\u003e x || y);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof MedHistoryContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        MedHistoryContainsKeywordsPredicate otherMedHistoryContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"                (MedHistoryContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherMedHistoryContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":52,"angkyakdifp":6}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":2,"-":43}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        PhoneContainsKeywordsPredicate otherPhoneContainsKeywordsPredicate \u003d (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherPhoneContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":15,"-":31}},{"path":"src/main/java/seedu/address/model/person/predicates/SpecialtyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Specialist}\u0027s {@code Specialty} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"public class SpecialtyContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public SpecialtyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        if (!(person instanceof Specialist)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        // It is safe to type cast Person to Specialist due to the guard clause above.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        Specialist specialist \u003d (Specialist) person;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(specialist.getSpecialty().value, keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof SpecialtyContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        SpecialtyContainsKeywordsPredicate otherSpecialtyContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"                (SpecialtyContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherSpecialtyContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":56}},{"path":"src/main/java/seedu/address/model/person/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"        return person.getTags()","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"                .stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"                .map(tag -\u003e keywords","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"                        .stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)))","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"                .reduce(false, (x, y) -\u003e x || y);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        if (!(other instanceof TagsContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        TagsContainsKeywordsPredicate otherTagsContainsKeywordsPredicate \u003d (TagsContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        return keywords.equals(otherTagsContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Gavino3o":50}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"                getTagSet(\"friends\"), new Age(\"24\"), getMedicalHistorySet(\"Diabetes\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"            new Specialist(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"                new Location(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Specialty(\"Physiotherapist\")),","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                getTagSet(\"neighbours\"), new Age(\"114\"), getMedicalHistorySet(\"Anemia\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"                getTagSet(\"family\"), new Age(\"9\"), getMedicalHistorySet(\"Osteoporosis\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"            new Specialist(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"                new Location(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                getTagSet(\"classmates\"), new Specialty(\"Orthopaedic\")),","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"            new Specialist(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"                new Location(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                getTagSet(\"colleagues\"), new Specialty(\"Dermatology\"))","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"     * Returns a medical history set containing the list of strings given.","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"    public static Set\u003cMedicalHistory\u003e getMedicalHistorySet(String... strings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"                .map(MedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Kokseng1":6,"vansh284":7,"angkyakdifp":12,"-":41,"alvinlim277":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMedicalHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":" * Jackson-friendly version of {@link MedicalHistory}.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"class JsonAdaptedMedicalHistory {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"    private final String medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"     * Constructs a {@code JsonAdaptedMedicalHistory} with the given {@code medicalHistory}.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"    public JsonAdaptedMedicalHistory(String medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"        this.medicalHistory \u003d medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"     * Converts a given {@code MedicalHistory} into this class for Jackson use.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"    public JsonAdaptedMedicalHistory(MedicalHistory source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory \u003d source.value;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"    @JsonValue","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    public String getTagName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"     * Converts this Jackson-friendly adapted medical history object into the model\u0027s {@code MedicalHistory} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted medical history.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"    public MedicalHistory toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        if (!MedicalHistory.isValidMedicalHistory(medicalHistory)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"            throw new IllegalValueException(MedicalHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        return new MedicalHistory(medicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"angkyakdifp":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"class JsonAdaptedPatient extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    private final String age;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"    private final List\u003cJsonAdaptedMedicalHistory\u003e medicalHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"age\") String age,","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"                              @JsonProperty(\"MedicalHistory\") List\u003cJsonAdaptedMedicalHistory\u003e medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"        if (medicalHistory !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"            this.medicalHistory.addAll(medicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        super(source);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        this.age \u003d source.getAge().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory.addAll(source.getMedicalHistory().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"                .map(JsonAdaptedMedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"    public List\u003cJsonAdaptedMedicalHistory\u003e getMedicalHistory() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public String getAge() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                    Age.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        return age;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"        final List\u003cMedicalHistory\u003e patientMedicalHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"        for (JsonAdaptedMedicalHistory medicalHistory: getMedicalHistory()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"            patientMedicalHistory.add(medicalHistory.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        final Phone modelPhone \u003d new Phone(getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        final Age age \u003d new Age(getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"        final Set\u003cMedicalHistory\u003e medicalHistory \u003d new HashSet\u003c\u003e(patientMedicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelTags, age, medicalHistory);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":53,"angkyakdifp":23,"alvinlim277":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"abstract class JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    public abstract Person toModelType() throws IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public String getName() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        return name;","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    public String getPhone() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"        return phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"    public String getEmail() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"        return email;","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"        return tags;","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"vansh284":13,"-":83,"alvinlim277":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSpecialist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"class JsonAdaptedSpecialist extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    private final String specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    private final String location;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    public JsonAdaptedSpecialist(Specialist source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        super(source);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"        specialty \u003d source.getSpecialty().value;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    public JsonAdaptedSpecialist(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"                                 @JsonProperty(\"email\") String email, @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"                                 @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"                                 @JsonProperty(\"Specialty\") String specialty) {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    public String getLocation() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        return location;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"    public String getSpecialty() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        if (specialty \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"                    Specialty.class.getSimpleName()));","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        if (!Specialty.isValidSpecialty(specialty)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            throw new IllegalValueException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"        return specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"    public Specialist toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        final Phone modelPhone \u003d new Phone(getPhone());","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        final Location modelLocation \u003d new Location(getLocation());","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"        final Specialty modelSpecialty \u003d new Specialty(getSpecialty());","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        return new Specialist(modelName, modelPhone, modelEmail, modelLocation, modelTags, modelSpecialty);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":27,"vansh284":28,"alvinlim277":19}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    private final List\u003cJsonAdaptedSpecialist\u003e specialists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients,","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"                                       @JsonProperty(\"specialists\") List\u003cJsonAdaptedSpecialist\u003e specialists) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        this.specialists.addAll(specialists);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        patients.addAll(source.getPersonList().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"                .filter(p -\u003e p instanceof Patient)","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"                .map(p -\u003e new JsonAdaptedPatient((Patient) p))","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        specialists.addAll(source.getPersonList().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"                .filter(p -\u003e p instanceof Specialist)","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                .map(p -\u003e new JsonAdaptedSpecialist((Specialist) p))","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : patients) {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : specialists) {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"vansh284":24,"-":55}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * A UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class PatientCard extends PersonCard {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    private static final String card \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    private Label age;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"    private FlowPane medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"     * Creates a {@code PatientCard} with the given {@code patient} and index to display.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        super(patient, displayedIndex, card);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        age.setText(patient.getAge().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        patient.getMedicalHistory().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"                .sorted(Comparator.comparing(medicalHistory -\u003e medicalHistory.value))","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"                .forEach(medicalHistory -\u003e this.medicalHistory.getChildren().add(new Label(medicalHistory.value)));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":20,"angkyakdifp":12}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"public abstract class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    private Label personType;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    public PersonCard(Person person, int displayedIndex, String fxml) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        super(fxml);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vansh284":6,"-":50}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"                if (person instanceof Patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"                    setGraphic(new PatientCard((Patient) person, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"                } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"                    setGraphic(new SpecialistCard((Specialist) person, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"vansh284":7,"-":48}},{"path":"src/main/java/seedu/address/ui/SpecialistCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * A UI component that displays information of a {@code Specialist}.","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class SpecialistCard extends PersonCard {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    private static final String card \u003d \"SpecialistListCard.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    private Label specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    // Label is named as such due to \u0027location\u0027 being a reserved keyword.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    private Label spLocation;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"     * Creates a {@code SpecialistCard} with the given {@code specialist} and index to display.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    public SpecialistCard(Specialist specialist, int displayedIndex) {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        super(specialist, displayedIndex, card);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        spLocation.setText(specialist.getLocation().value);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        specialty.setText(specialist.getSpecialty().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":6,"vansh284":17,"alvinlim277":5}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"         title\u003d\"DoConnek Pro\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"alvinlim277":1}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"      \u003cLabel fx:id\u003d\"personType\" styleClass\u003d\"cell_small_label\" style\u003d\"-fx-text-fill: aqua\" text\u003d\"Patient\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"      \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"      \u003cFlowPane fx:id\u003d\"medicalHistory\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vansh284":2,"angkyakdifp":1,"-":35}},{"path":"src/main/resources/view/SpecialistListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"            \u003cLabel fx:id\u003d\"personType\" styleClass\u003d\"cell_small_label\" style\u003d\"-fx-text-fill: greenyellow\" text\u003d\"Specialist\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"            \u003cLabel fx:id\u003d\"spLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"            \u003cLabel fx:id\u003d\"specialty\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$specialty\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":1,"vansh284":36,"alvinlim277":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_TYPE_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" \" + CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"        assertCommandSuccess(listCommand, ListCommand.PATIENT_MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"vansh284"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + PERSON_TYPE_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"alvinlim277"},"content":"                + EMAIL_DESC_AMY + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"vansh284"},"content":"        Person expectedPerson \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vansh284":7,"angkyakdifp":1,"-":168,"alvinlim277":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(PersonType.PATIENT.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    public void execute_newSpecialist_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        Person validPerson \u003d new SpecialistBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"vansh284":2,"-":51,"alvinlim277":10}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        Person validPerson \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        Person alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        Person bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"alvinlim277"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"alvinlim277"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"alvinlim277"},"content":"            // Allow this method to be called as AddCommand::execute now affects the filtered list.","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"alvinlim277"},"content":"            return;","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"vansh284":5,"-":199,"alvinlim277":6}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    public static final String VALID_LOCATION_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    public static final String VALID_LOCATION_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    public static final String VALID_AGE_THIRTY \u003d \"30\";","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"    public static final String VALID_MEDICAL_HISTORY_OSTEOPOROSIS \u003d \"Osteoporosis\";","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"    public static final String VALID_MEDICAL_HISTORY_ANEMIA \u003d \"Anemia\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"    public static final String VALID_SPECIALTY_DERMATOLOGY \u003d \"Dermatology\";","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"    public static final String VALID_SPECIALTY_ORTHOPAEDIC \u003d \"orthopaedic\";","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    public static final String PERSON_TYPE_AMY \u003d \" \" + PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    public static final String PERSON_TYPE_BOB \u003d \" \" + SPECIALIST_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"    public static final String LOCATION_DESC_AMY \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    public static final String LOCATION_DESC_BOB \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    public static final String AGE_DESC_AMY \u003d \" \" + PREFIX_AGE + VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"    public static final String MEDICAL_HISTORY_DESC_AMY \u003d \" \" + PREFIX_MEDICALHISTORY","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"            + VALID_MEDICAL_HISTORY_ANEMIA;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"    public static final String SPECIALTY_DESC_BOB \u003d \" \" + PREFIX_SPECIALTY + VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for addresses","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"    public static final String INVALID_SPECIALTY_DESC \u003d \" \" + PREFIX_SPECIALTY; // empty string invalid for specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"    public static final String INVALID_AGE_DESC \u003d \" \" + PREFIX_AGE + \"67Y\"; // \u0027Y\u0027 not allowed in ages","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"    public static final String INVALID_MEDICAL_HISTORY_DESC \u003d \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"angkyakdifp"},"content":"            + PREFIX_MEDICALHISTORY; // empty string invalid for medical history","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"    public static final EditCommand.EditSpecialistDescriptor DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"        DESC_AMY \u003d (EditCommand.EditPatientDescriptor) new EditPatientDescriptorBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"                .withMedicalHistory(VALID_MEDICAL_HISTORY_ANEMIA)","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"        DESC_BOB \u003d (EditCommand.EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"                .withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"                .withSpecialty(VALID_SPECIALTY_DERMATOLOGY)","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kokseng1":6,"vansh284":10,"angkyakdifp":8,"Gavino3o":1,"-":114,"alvinlim277":16}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"                + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"vansh284":1,"-":119,"alvinlim277":1}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPatient));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        model.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        PersonBuilder personInList \u003d new SpecialistBuilder((Specialist) lastPerson);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        EditPersonDescriptor descriptor \u003d new EditSpecialistDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(PersonType.SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPatientDescriptor());","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"        Person editedPerson \u003d new PatientBuilder((Patient) personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor descriptor \u003d new EditPatientDescriptorBuilder((Patient) firstPerson).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"alvinlim277"},"content":"                new EditPatientDescriptorBuilder((Patient) personInList).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"alvinlim277"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPatientDescriptor((EditPatientDescriptor) DESC_AMY);","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"vansh284":13,"-":166,"alvinlim277":13}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_OSTEOPOROSIS;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptorBuilder(DESC_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        // different medical history -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"                .withMedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        editedAmy \u003d (EditPatientDescriptor) new EditPatientDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        String expected \u003d EditPatientDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"                + editPatientDescriptor.getEmail().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getTags().orElse(null) + \", age\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"                + editPatientDescriptor.getAge().orElse(null) + \", medical history\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"                + editPatientDescriptor.getMedicalHistory().orElse(null) + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, editPatientDescriptor.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"vansh284":19,"angkyakdifp":1,"-":50,"alvinlim277":7}},{"path":"src/test/java/seedu/address/logic/commands/EditSpecialistDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_ORTHOPAEDIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"public class EditSpecialistDescriptorTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor descriptorWithSameValues \u003d new EditSpecialistDescriptorBuilder(DESC_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        assertTrue(DESC_BOB.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        assertTrue(DESC_BOB.equals(DESC_BOB));","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(5));","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(DESC_AMY));","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"                .withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        editedBob \u003d new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"                .withLocation(VALID_LOCATION_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        // different specialty -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"        editedBob \u003d new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"                .withSpecialty(VALID_SPECIALTY_ORTHOPAEDIC).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d (EditSpecialistDescriptor) new EditSpecialistDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d new EditSpecialistDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        String expected \u003d EditSpecialistDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"                + editSpecialistDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"                + editSpecialistDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"                + editSpecialistDescriptor.getEmail().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"                + editSpecialistDescriptor.getTags().orElse(null) + \", location\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"                + editSpecialistDescriptor.getLocation().orElse(null) + \", specialty\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"                + editSpecialistDescriptor.getSpecialty().orElse(null) + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, editSpecialistDescriptor.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":1,"vansh284":68,"alvinlim277":14}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.AgeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.SpecialtyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    private static final String WHITESPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"    //TODO: Change equals method, remember to do the tags.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    public void findCommandEquals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap1 \u003d setupPatientFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap2 \u003d setupSpecialistFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand1 \u003d new FindCommand(findPredicateMap1, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand2 \u003d new FindCommand(findPredicateMap2, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findCommand1.equals(findCommand1));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(findPredicateMap1, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findCommand1.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findCommand1.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findCommand1.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"        // different person type -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findCommand1.equals(findCommand2));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"    public void findPredicateMapEquals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPatientFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap smallerFindPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"        smallerFindPredicateMap.put(PREFIX_NAME,","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Lopez\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findPredicateMap.equals(findPredicateMap));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        // same values -\u003e return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMapCopy \u003d setupPatientFindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"        assertTrue(findPredicateMap.equals(findPredicateMapCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findPredicateMap.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findPredicateMap.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"        // different size -\u003e short circuits and returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"        assertFalse(findPredicateMap.equals(smallerFindPredicateMap));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupPatientFindPredicateMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"        // Find Predicates for a Patient","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        NameContainsKeywordsPredicate nameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Fabio\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"        PhoneContainsKeywordsPredicate phoneContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"89934991\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"        EmailContainsKeywordsPredicate emailContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"patient@gmail.com\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        AgeContainsKeywordsPredicate ageContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"                new AgeContainsKeywordsPredicate(Arrays.asList(\"35\", \"40\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"        TagsContainsKeywordsPredicate tagsContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"                new TagsContainsKeywordsPredicate(Arrays.asList(\"tag1\", \"tag2\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"        MedHistoryContainsKeywordsPredicate medHistoryContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"                new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Bronchitis\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, nameContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, phoneContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, emailContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_AGE, ageContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, tagsContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, medHistoryContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupSpecialistFindPredicateMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"        // Find Predicates for a Specialist","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"        NameContainsKeywordsPredicate nameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Selena\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"        PhoneContainsKeywordsPredicate phoneContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"90237753\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"        EmailContainsKeywordsPredicate emailContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"specialist@gmail.com\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"        LocationContainsKeywordsPredicate locationContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"                new LocationContainsKeywordsPredicate(Collections.singletonList(\"311, Clementi Ave 2, #02-25\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"        TagsContainsKeywordsPredicate tagsContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"                new TagsContainsKeywordsPredicate(Arrays.asList(\"tag2\", \"tag3\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"        SpecialtyContainsKeywordsPredicate specialtyContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"                new SpecialtyContainsKeywordsPredicate(Arrays.asList(\"Surgery\", \"Haematology\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, nameContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, phoneContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, emailContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_LOCATION, locationContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, tagsContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, specialtyContainsKeywordsPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"    public void execute_zeroKeywords_allPatientsListed() {","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonZeroKeywordsPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_AGE, prepareAgePredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, prepareMedHistPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":167,"author":{"gitId":"Gavino3o"},"content":"    public void execute_zeroKeywords_allSpecialistsListed() {","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"Gavino3o"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d setupPersonZeroKeywordsPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_LOCATION, prepareLocationPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, prepareSpecialtyPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"Gavino3o"},"content":"    public void execute_multipleSpecialtyKeywordsOnly_multipleSpecialistFound() {","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"Gavino3o"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, prepareSpecialtyPredicate(\"Orthopaedic Physiotherapy\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"Gavino3o"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(Arrays.asList(FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"Gavino3o"},"content":"    public void execute_multipleNameKeywordsOnly_multiplePatientsFound() {","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"Gavino3o"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, prepareNamePredicate(\"Alice Kunz Daniel\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d combinePersonPredicates(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"Gavino3o"},"content":"        FindCommand command \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"Gavino3o"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"Gavino3o"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"Gavino3o"},"content":"    public void nameContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, prepareNamePredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"vansh284"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"Gavino3o"},"content":"    public void phoneContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, preparePhonePredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"Gavino3o"},"content":"    public void emailContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, prepareEmailPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"Gavino3o"},"content":"    public void tagsContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":235,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, prepareTagsPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"Gavino3o"},"content":"    public void medHistContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, prepareMedHistPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.PATIENT + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"Gavino3o"},"content":"    public void specialtyContainsKeywordsPredicateToStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, prepareSpecialtyPredicate(\"keyword\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"Gavino3o"},"content":"        FindCommand findCommand \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"Gavino3o"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + findPredicateMap","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"Gavino3o"},"content":"                + \", personType\u003d\" + PersonType.SPECIALIST + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":266,"author":{"gitId":"Gavino3o"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-14"},{"lineNumber":267,"author":{"gitId":"Gavino3o"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"Gavino3o"},"content":"    private PhoneContainsKeywordsPredicate preparePhonePredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"Gavino3o"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"Gavino3o"},"content":"    private EmailContainsKeywordsPredicate prepareEmailPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"Gavino3o"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":283,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":284,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":285,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code TagsContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":286,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":287,"author":{"gitId":"Gavino3o"},"content":"    private TagsContainsKeywordsPredicate prepareTagsPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":288,"author":{"gitId":"Gavino3o"},"content":"        return new TagsContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":289,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":291,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code MedHistoryContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":293,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":294,"author":{"gitId":"Gavino3o"},"content":"    private MedHistoryContainsKeywordsPredicate prepareMedHistPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"Gavino3o"},"content":"        return new MedHistoryContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":296,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":297,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":298,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":299,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":300,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code SpecialtyContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":301,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":302,"author":{"gitId":"Gavino3o"},"content":"    private SpecialtyContainsKeywordsPredicate prepareSpecialtyPredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":303,"author":{"gitId":"Gavino3o"},"content":"        return new SpecialtyContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-16"},{"lineNumber":304,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":305,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":306,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":307,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code AgeContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":308,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":309,"author":{"gitId":"Gavino3o"},"content":"    private AgeContainsKeywordsPredicate prepareAgePredicate(String userInput) {","lastModifiedDate":"2023-10-17"},{"lineNumber":310,"author":{"gitId":"Gavino3o"},"content":"        return new AgeContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-17"},{"lineNumber":311,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":312,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":313,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":314,"author":{"gitId":"Gavino3o"},"content":"     * Parses {@code userInput} into a {@code LocationContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"Gavino3o"},"content":"    private LocationContainsKeywordsPredicate prepareLocationPredicate(String userInput) {","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"Gavino3o"},"content":"        return new LocationContainsKeywordsPredicate(Arrays.asList(userInput.split(WHITESPACE_REGEX)));","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":319,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":320,"author":{"gitId":"Gavino3o"},"content":"    private Predicate\u003cPerson\u003e combinePersonPredicates(FindPredicateMap findPredicateMap, PersonType personType) {","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"Gavino3o"},"content":"        Predicate\u003cPerson\u003e predicate \u003d person -\u003e findPredicateMap.getAllPredicates().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"Gavino3o"},"content":"                .map(pred -\u003e pred.test(person))","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"Gavino3o"},"content":"                .reduce(true, (x, y) -\u003e x \u0026\u0026 y);","lastModifiedDate":"2023-10-16"},{"lineNumber":324,"author":{"gitId":"Gavino3o"},"content":"        return predicate.and(personType.getSearchPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":326,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":327,"author":{"gitId":"Gavino3o"},"content":"    private FindPredicateMap setupPersonZeroKeywordsPredicateMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":328,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":329,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, prepareNamePredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":330,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, preparePhonePredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":331,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, prepareEmailPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":332,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, prepareTagsPredicate(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":333,"author":{"gitId":"Gavino3o"},"content":"        return findPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":258,"vansh284":2,"-":75}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.model.person.PersonType.PATIENT;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.model.person.PersonType.SPECIALIST;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    public void executePatient_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        assertCommandSuccess(new ListCommand(PATIENT), model, ListCommand.PATIENT_MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    public void executeSpecialist_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        expectedModel.updateFilteredPersonList(SPECIALIST.getSearchPredicate());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        assertCommandSuccess(new ListCommand(SPECIALIST), model, ListCommand.SPECIALIST_MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"    public void executePatient_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        assertCommandSuccess(new ListCommand(PATIENT), model, ListCommand.PATIENT_MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":35,"alvinlim277":12}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AGE_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEDICAL_HISTORY_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SPECIALTY_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public void parse_allFieldsPresentPatient_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        Person expectedPatient \u003d new PatientBuilder(AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"                new AddCommand(expectedPatient), PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"        Person expectedPatientMultipleTags \u003d new PatientBuilder(AMY).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"                new AddCommand(expectedPatientMultipleTags), PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"    public void parse_allFieldsPresentSpecialist_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        Person expectedSpecialist \u003d new SpecialistBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"                        + EMAIL_DESC_BOB + LOCATION_DESC_BOB + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"angkyakdifp"},"content":"                new AddCommand(expectedSpecialist),","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"        Person expectedSpecialistMultipleTags \u003d new SpecialistBuilder(BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"                        VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"angkyakdifp"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"                new AddCommand(expectedSpecialistMultipleTags), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"        String validExpectedSpecialistString \u003d validExpectedPersonString + SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"        String validExpectedPatientString \u003d validExpectedPersonString + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, NAME_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, PHONE_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, EMAIL_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, LOCATION_DESC_AMY + validExpectedSpecialistString,","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"        // multiple ages","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, AGE_DESC_AMY + validExpectedPatientString,","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"angkyakdifp"},"content":"                validExpectedSpecialistString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"alvinlim277"},"content":"                        + NAME_DESC_AMY + LOCATION_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"angkyakdifp"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE),","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_NAME_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_EMAIL_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_PHONE_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_LOCATION_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"vansh284"},"content":"        // invalid specialty","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, INVALID_SPECIALTY_DESC + validExpectedSpecialistString,","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SPECIALTY), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, INVALID_AGE_DESC + validExpectedPatientString,","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":183,"author":{"gitId":"Kokseng1"},"content":"        // invalid specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":184,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, validExpectedSpecialistString + INVALID_SPECIALTY_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"Kokseng1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SPECIALTY), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, validExpectedPatientString + INVALID_AGE_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"vansh284"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"vansh284"},"content":"        Person expectedPerson \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"alvinlim277"},"content":"                        + AGE_DESC_AMY + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"vansh284"},"content":"                new AddCommand(expectedPerson), PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"Kokseng1"},"content":"        String expectedMessageSpecialist \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"Kokseng1"},"content":"                AddCommand.MESSAGE_USAGE_SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"Kokseng1"},"content":"        String expectedMessagePatient \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"Kokseng1"},"content":"                AddCommand.MESSAGE_USAGE_PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"Kokseng1"},"content":"                        + VALID_LOCATION_BOB + SPECIALTY_DESC_BOB, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"vansh284"},"content":"        // missing specialty prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"Kokseng1"},"content":"                + LOCATION_DESC_BOB + VALID_SPECIALTY_DERMATOLOGY, expectedMessageSpecialist, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"vansh284"},"content":"        // missing age prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, VALID_AGE_THIRTY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"Kokseng1"},"content":"                        + LOCATION_DESC_AMY, expectedMessagePatient, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"Kokseng1"},"content":"                        + VALID_LOCATION_BOB, expectedMessagePatient, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"Kokseng1"},"content":"                Name.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"Kokseng1"},"content":"                Phone.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":251,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"Kokseng1"},"content":"                Email.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":256,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"alvinlim277"},"content":"                        + INVALID_LOCATION_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"alvinlim277"},"content":"                Location.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":261,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"Kokseng1"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":265,"author":{"gitId":"vansh284"},"content":"        // invalid specialty","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"alvinlim277"},"content":"                        + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_SPECIALTY_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"vansh284"},"content":"                Specialty.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"alvinlim277"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_AGE_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"vansh284"},"content":"                        + MEDICAL_HISTORY_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"vansh284"},"content":"                Age.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"vansh284"},"content":"        // invalid age","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"vansh284"},"content":"        assertParseComplexFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"alvinlim277"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AGE_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"vansh284"},"content":"                        + INVALID_MEDICAL_HISTORY_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"vansh284"},"content":"                MedicalHistory.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":283,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"alvinlim277"},"content":"                        + EMAIL_DESC_BOB + INVALID_LOCATION_DESC + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":285,"author":{"gitId":"vansh284"},"content":"                Name.MESSAGE_CONSTRAINTS, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":288,"author":{"gitId":"angkyakdifp"},"content":"        assertParseComplexFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":289,"author":{"gitId":"alvinlim277"},"content":"                        + EMAIL_DESC_BOB + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"angkyakdifp"},"content":"                        + SPECIALTY_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":291,"author":{"gitId":"Kokseng1"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE_SPECIALIST),","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"angkyakdifp"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-13"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Kokseng1":25,"vansh284":70,"angkyakdifp":27,"-":125,"alvinlim277":47}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.FindPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_add_patient() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PatientUtil.getAddCommand(patient));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_add_specialist() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        Specialist specialist \u003d new SpecialistBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(SpecialistUtil.getAddCommand(specialist));","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        assertEquals(new AddCommand(specialist), command);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_delete_patient() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_delete_specialist() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_edit_patient() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"angkyakdifp"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"angkyakdifp"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"                + \" \" + CliSyntax.PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"    public void parseCommand_edit_specialist() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"        Specialist person \u003d new SpecialistBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor descriptor \u003d new EditSpecialistDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"                + \" \" + CliSyntax.SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"                + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"                + \" \" + SpecialistUtil.getEditSpecialistDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"    public void parseCommand_find_patientByName() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"                FindCommand.COMMAND_WORD + \" \" + CliSyntax.PATIENT_TAG + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"                        + PREFIX_NAME","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(findPredicateMap, command.getPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(PersonType.PATIENT, command.getPersonType());","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"    public void parseCommand_find_specialistByNameAndTags() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"tag1\", \"tag2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"                FindCommand.COMMAND_WORD + \" \" + CliSyntax.SPECIALIST_TAG + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"                        + PREFIX_NAME","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"                        + nameKeywords.stream().collect(Collectors.joining(\" \")) + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"                        + PREFIX_TAG","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"                        + tagKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_TAG, new TagsContainsKeywordsPredicate(tagKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(findPredicateMap, command.getPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"        assertEquals(PersonType.SPECIALIST, command.getPersonType());","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"                ListCommand.COMMAND_WORD + \" \" + CliSyntax.PATIENT_TAG) instanceof ListCommand);","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"angkyakdifp"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"angkyakdifp"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Kokseng1":1,"Gavino3o":24,"vansh284":49,"angkyakdifp":6,"-":75,"alvinlim277":2}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserComplex} is successful and the command created","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseComplexSuccess(ParserComplex\u003c? extends Command\u003e parserComplex, String userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"                                                 Command expectedCommand, PersonType personType) {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"            Command command \u003d parserComplex.parse(personType, userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserComplex} is unsuccessful and the error message","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseComplexFailure(ParserComplex\u003c? extends Command\u003e parserComplex,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"                                                 String userInput, String expectedMessage,","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"                                                 PersonType personType) {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"            parserComplex.parse(personType, userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserComplex} is successful and the command created","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseBasicSuccess(ParserBasic\u003c? extends Command\u003e parserBasic, String userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"                                                 Command expectedCommand) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"            Command command \u003d parserBasic.parse(userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parserComplex} is unsuccessful and the error message","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    public static void assertParseBasicFailure(ParserBasic\u003c? extends Command\u003e parserBasic, String userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"                                               String expectedMessage) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"            parserBasic.parse(userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"vansh284":3,"Gavino3o":1,"-":45,"alvinlim277":22}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseBasicSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        assertParseBasicFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":28,"alvinlim277":5}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.EditSpecialistDescriptorBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_INVALID_SPECIALIST \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    private static final String MESSAGE_INVALID_PATIENT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"\", MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"1 some random string\", MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"1 i/ string\", MESSAGE_INVALID_SPECIALIST, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid phone","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid email","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT); // invalid tag","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"                PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"                Tag.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"alvinlim277"},"content":"                \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"                Name.MESSAGE_CONSTRAINTS, PersonType.PATIENT);","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":124,"author":{"gitId":"alvinlim277"},"content":"                + EMAIL_DESC_AMY + LOCATION_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"Kokseng1"},"content":"        EditPersonDescriptor descriptor \u003d new EditSpecialistDescriptorBuilder()","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"alvinlim277"},"content":"                .withSpecialty(VALID_SPECIALTY_DERMATOLOGY).withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"alvinlim277"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"alvinlim277"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"vansh284"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"vansh284"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE),","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE),","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"alvinlim277"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + LOCATION_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"alvinlim277"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + LOCATION_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"alvinlim277"},"content":"                + PHONE_DESC_BOB + LOCATION_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION),","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"alvinlim277"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_LOCATION_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"alvinlim277"},"content":"                + INVALID_PHONE_DESC + INVALID_LOCATION_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"alvinlim277"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION),","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"vansh284"},"content":"                PersonType.SPECIALIST);","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"vansh284"},"content":"        EditPersonDescriptor descriptor \u003d new EditSpecialistDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexSuccess(parser, userInput, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Kokseng1":14,"vansh284":22,"-":146,"alvinlim277":40}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseComplexSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.logic.commands.FindPredicateMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.AgeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.SpecialtyContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        assertParseComplexFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                FindCommand.MESSAGE_USAGE_PATIENT), PersonType.PATIENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        assertParseComplexFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"                FindCommand.MESSAGE_USAGE_SPECIALIST), PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_NAME, new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_NAME + \" Alice Bob\", expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"92773291\", \"88765321\");","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_PHONE, new PhoneContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_PHONE + \" 92773291 88765321\",","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_PHONE + \" \\n 92773291 \\n \\t 88765321  \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validEmailArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"timothy@gmail.com\", \"neumann@hotmail.com\");","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_EMAIL, new EmailContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_EMAIL + \" timothy@gmail.com neumann@hotmail.com\",","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, \" \" + PREFIX_EMAIL + \" \\n timothy@gmail.com \\n \\t neumann@hotmail.com  \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"                expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validAgeAndMedHistArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e ageKeywords \u003d Arrays.asList(\"21\", \"37\");","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e medHistKeywords \u003d Arrays.asList(\"Bronchitis\", \"ADHD\", \"Diabetes\");","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_AGE, new AgeContainsKeywordsPredicate(ageKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_MEDICALHISTORY, new MedHistoryContainsKeywordsPredicate(medHistKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs1 \u003d String.format(\" %s 21 37 %s Bronchitis ADHD Diabetes\",","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs2 \u003d String.format(\" %s 21 \\n 37 \\t %s Bronchitis \\n ADHD \\t Diabetes \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_AGE, PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs1, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs2, expectedCommand, PersonType.PATIENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"    public void parse_validSpecialtyAndLocationArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e specialtyKeywords \u003d Arrays.asList(\"Orthopaedic\", \"Neurology\");","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        List\u003cString\u003e locationKeywords \u003d Arrays.asList(\"Clementi\", \"Bukit\", \"Timah\");","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"        FindPredicateMap findPredicateMap \u003d new FindPredicateMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_SPECIALTY, new SpecialtyContainsKeywordsPredicate(specialtyKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"        findPredicateMap.put(PREFIX_LOCATION, new LocationContainsKeywordsPredicate(locationKeywords));","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs1 \u003d String.format(\" %s Orthopaedic Neurology %s Clementi Bukit Timah\",","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_SPECIALTY, PREFIX_LOCATION);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"        String userInputArgs2 \u003d String.format(\" %s Orthopaedic \\n Neurology \\t %s Clementi \\n Bukit \\t Timah \\t\",","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"                PREFIX_SPECIALTY, PREFIX_LOCATION);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"        FindCommand expectedCommand \u003d new FindCommand(findPredicateMap, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs1, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"        assertParseComplexSuccess(parser, userInputArgs2, expectedCommand, PersonType.SPECIALIST);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Kokseng1":4,"Gavino3o":93,"vansh284":1,"-":30,"alvinlim277":1}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_ADDRESS));","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"alvinlim277"},"content":"        Location expectedLocation \u003d new Location(VALID_ADDRESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_ADDRESS));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"alvinlim277"},"content":"        Location expectedLocation \u003d new Location(VALID_ADDRESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(addressWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":189,"alvinlim277":7}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"vansh284":1,"-":104,"alvinlim277":2}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Gavino3o":1,"-":131}},{"path":"src/test/java/seedu/address/model/person/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"public class AgeTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Age(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public void constructor_invalidAge_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        String invalidAge \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge));","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public void isValidAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        // null Age","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        assertThrows(NullPointerException.class, () -\u003e Age.isValidAge(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        // invalid ages","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"-1\")); // negative numbers","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"150\")); // absurdly high age","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"age\")); // non-numeric","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"9p1\")); // alphabets within digits","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"3 4\")); // spaces within digits","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        assertFalse(Age.isValidAge(\"34a\")); // trailing alphabets","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        // valid phone numbers","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"0\")); // edge case","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"6\")); // single digit","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"91\")); // double digits","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"114\")); // triple digits","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        assertTrue(Age.isValidAge(\"149\")); // edge case","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        Age age \u003d new Age(\"30\");","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        assertTrue(age.equals(new Age(\"30\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        assertTrue(age.equals(age));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        assertFalse(age.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        assertFalse(age.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        assertFalse(age.equals(new Age(\"95\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"vansh284":64}},{"path":"src/test/java/seedu/address/model/person/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"public class LocationTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        // null address","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        // invalid addresses","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        // valid addresses","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(Location.isValidLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        Location location \u003d new Location(\"Valid Location\");","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(location.equals(new Location(\"Valid Location\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(location.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(location.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(location.equals(new Location(\"Other Valid Location\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"alvinlim277":56}},{"path":"src/test/java/seedu/address/model/person/MedHistoryContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.predicates.MedHistoryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"public class MedHistoryContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"    public void test_medicalHistoryContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        // One keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Collections.singletonList(\"Osteoporosis\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder().withMedicalHistory(\"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Diabetes\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder().withMedicalHistory(\"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        // One Keyword with Multiple Medical History","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Collections.singletonList(\"Osteoporosis\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder().withMedicalHistory(\"Diabetes\", \"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"angkyakdifp"},"content":"        // Multiple Keyword with Multiple Medical History","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Asthma\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"                .withMedicalHistory(\"Diabetes\", \"Osteoporosis\", \"Asthma\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\", \"Diabetes\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"                .withMedicalHistory(\"Osteoporosis primary type 1\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"oSteOpoROsis\", \"dIaBeTeS\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(predicate.test(new PatientBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"angkyakdifp"},"content":"                .withMedicalHistory(\"Osteoporosis\", \"Diabetes\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"angkyakdifp"},"content":"    public void test_medicalHistoryDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"angkyakdifp"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(predicate.test(new PatientBuilder().withMedicalHistory(\"Osteoporosis\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"angkyakdifp"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"Osteoporosis\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(predicate.test(new PatientBuilder().withMedicalHistory(\"Anemia\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"angkyakdifp"},"content":"        // Keywords match phone, email and address, but does not match Medical History","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"angkyakdifp"},"content":"        predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"angkyakdifp"},"content":"                new MedHistoryContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(predicate.test(new PatientBuilder().withMedicalHistory(\"Anemia\").withPhone(\"12345\")","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"angkyakdifp"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"angkyakdifp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"angkyakdifp"},"content":"        MedHistoryContainsKeywordsPredicate predicate \u003d new MedHistoryContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"angkyakdifp"},"content":"        String expected \u003d MedHistoryContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"angkyakdifp"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"angkyakdifp":104}},{"path":"src/test/java/seedu/address/model/person/MedicalHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkyakdifp"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_ANEMIA;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_OSTEOPOROSIS;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"angkyakdifp"},"content":"public class MedicalHistoryTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MedicalHistory(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"    public void constructor_invalidMedicalHistory_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"        String invalidMedicalHistory \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidMedicalHistory));","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    public void isValidMedicalHistory() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        // null specialty","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(NullPointerException.class, () -\u003e MedicalHistory.isValidMedicalHistory(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"        // invalid specialties","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(MedicalHistory.isValidMedicalHistory(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(MedicalHistory.isValidMedicalHistory(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"        // valid medical history","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(MedicalHistory.isValidMedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"        MedicalHistory medicalHistory \u003d new MedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(medicalHistory.equals(new MedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS)));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"        assertTrue(medicalHistory.equals(medicalHistory));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(medicalHistory.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(medicalHistory.equals(VALID_MEDICAL_HISTORY_OSTEOPOROSIS));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        assertFalse(medicalHistory.equals(new MedicalHistory(VALID_MEDICAL_HISTORY_ANEMIA)));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"angkyakdifp":54}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Gavino3o":1,"vansh284":8,"-":76,"alvinlim277":1}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_OSTEOPOROSIS;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class PatientTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        // different age -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withAge(VALID_AGE_THIRTY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        // different medical history -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withMedicalHistory(VALID_MEDICAL_HISTORY_OSTEOPOROSIS).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"                + \", age\u003d\" + ALICE.getAge()","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"                + \", medical history\u003d\" + ALICE.getMedicalHistory() + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":28,"angkyakdifp":6,"alvinlim277":1}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        Person person \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        Person editedBob \u003d new SpecialistBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        editedBob \u003d new SpecialistBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        Person aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"vansh284":12,"-":75,"alvinlim277":1}},{"path":"src/test/java/seedu/address/model/person/SpecialistTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_ORTHOPAEDIC;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.SpecialistBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"public class SpecialistTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        // different speciality -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        Person editedBob \u003d new SpecialistBuilder(BOB).withSpecialty(VALID_SPECIALTY_ORTHOPAEDIC).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        String expected \u003d Specialist.class.getCanonicalName() + \"{name\u003d\" + BOB.getName() + \", phone\u003d\" + BOB.getPhone()","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"                + \", email\u003d\" + BOB.getEmail() + \", tags\u003d\" + BOB.getTags() + \", location\u003d\" + BOB.getLocation()","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"                + \", specialty\u003d\" + BOB.getSpecialty() + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        assertEquals(expected, BOB.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":1,"vansh284":27,"alvinlim277":1}},{"path":"src/test/java/seedu/address/model/person/SpecialtyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_ORTHOPAEDIC;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"public class SpecialtyTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Specialty(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    public void constructor_invalidSpecialty_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"        String invalidSpecialty \u003d \"\";","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidSpecialty));","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    public void isValidSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"        // null specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Specialty.isValidSpecialty(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        // invalid specialties","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(Specialty.isValidSpecialty(\"\")); // empty string","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(Specialty.isValidSpecialty(\" \")); // spaces only","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        // valid specialties","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        assertTrue(Specialty.isValidSpecialty(VALID_SPECIALTY_DERMATOLOGY));","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"        Specialty specialty \u003d new Specialty(VALID_SPECIALTY_ORTHOPAEDIC);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        assertTrue(specialty.equals(new Specialty(VALID_SPECIALTY_ORTHOPAEDIC)));","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        assertTrue(specialty.equals(specialty));","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(specialty.equals(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(specialty.equals(VALID_SPECIALTY_ORTHOPAEDIC));","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        assertFalse(specialty.equals(new Specialty(VALID_SPECIALTY_DERMATOLOGY)));","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"Kokseng1":54}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"vansh284":1,"-":171,"alvinlim277":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"angkyakdifp"},"content":"    private static final List\u003cJsonAdaptedMedicalHistory\u003e VALID_MEDICAL_HISTORY \u003d BENSON.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"            .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"angkyakdifp"},"content":"            .map(JsonAdaptedMedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"angkyakdifp"},"content":"            .collect(Collectors.toList());;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_AGE \u003d BENSON.getAge().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"angkyakdifp"},"content":"    private static final String INVALID_MEDICAL_HISTORY \u003d \"#anemia\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    private static final String INVALID_AGE \u003d \"-1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    public void toModelType_invalidMedicalHistory_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"        List\u003cJsonAdaptedMedicalHistory\u003e invalidMedicalHistory \u003d new ArrayList\u003c\u003e(VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        invalidMedicalHistory.add(new JsonAdaptedMedicalHistory(INVALID_MEDICAL_HISTORY));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"                        VALID_AGE, invalidMedicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public void toModelType_invalidAge_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, INVALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d Age.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    public void toModelType_nullAge_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, null, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Age.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":36,"angkyakdifp":16,"alvinlim277":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    private static final String VALID_AGE \u003d BENSON.getAge().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"angkyakdifp"},"content":"    private static final List\u003cJsonAdaptedMedicalHistory\u003e VALID_MEDICAL_HISTORY \u003d BENSON.getMedicalHistory()","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"            .stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"            .map(JsonAdaptedMedicalHistory::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"            .collect(Collectors.toList());;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"                        VALID_AGE, VALID_MEDICAL_HISTORY);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"vansh284":8,"angkyakdifp":4,"-":77,"alvinlim277":8}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedSpecialistTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"public class JsonAdaptedSpecialistTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    private static final String INVALID_SPECIALTY \u003d \"\";","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_NAME \u003d GEORGE.getName().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_PHONE \u003d GEORGE.getPhone().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_EMAIL \u003d GEORGE.getEmail().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    private static final String VALID_LOCATION \u003d GEORGE.getLocation().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    private static final String VALID_SPECIALTY \u003d GEORGE.getSpecialty().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d GEORGE.getTags().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_LOCATION, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"                        VALID_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"                        VALID_SPECIALTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"                Location.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    public void toModelType_validSpecialistDetails_returnsSpecialist() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"        JsonAdaptedSpecialist specialist \u003d new JsonAdaptedSpecialist(GEORGE);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        assertEquals(GEORGE, specialist.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    public void toModelType_invalidSpecialty_throwsIllegalValueException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"                new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"                        INVALID_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        String expectedMessage \u003d Specialty.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public void toModelType_nullSpeciality_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedSpecialist(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION,","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"                VALID_TAGS, null);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Specialty.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":28,"vansh284":18,"alvinlim277":27}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"                .toModelType();","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kokseng1":2,"-":46}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"public class EditPatientDescriptorBuilder extends EditPersonDescriptorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditPatientDescriptor());","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditPatientDescriptor(editPatientDescriptor));","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        setDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        editPersonDescriptorSetFields(patient);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        editPatientDescriptor.setAge(patient.getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        editPatientDescriptor.setMedicalHistory(patient.getMedicalHistory());","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"     * Sets the {@code Age} of the {@code EditAgeDescriptor} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public EditPersonDescriptorBuilder withAge(String age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        EditCommand.EditPatientDescriptor editPatientDescriptor \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"                (EditCommand.EditPatientDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        editPatientDescriptor.setAge(new Age(age));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"angkyakdifp"},"content":"     * Sets the {@code MedicalHistory} of the {@code EditMedicalHistoryDescriptor} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"angkyakdifp"},"content":"    public EditPersonDescriptorBuilder withMedicalHistory(String... medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"        EditCommand.EditPatientDescriptor editPatientDescriptor \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"                (EditCommand.EditPatientDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"        Set\u003cMedicalHistory\u003e medHistSet \u003d Stream.of(medicalHistory).map(MedicalHistory::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"        editPatientDescriptor.setMedicalHistory(medHistSet);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        return (EditPatientDescriptor) getDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":45,"angkyakdifp":18}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public abstract class EditPersonDescriptorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"     * Sets the descriptor fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    public void editPersonDescriptorSetFields(Person person) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    public abstract EditPersonDescriptor build();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    public EditPersonDescriptor getDescriptor() {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"    public void setDescriptor(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"        this.descriptor \u003d descriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"vansh284":12,"-":64}},{"path":"src/test/java/seedu/address/testutil/EditSpecialistDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building EditSpecialistDescriptor objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"public class EditSpecialistDescriptorBuilder extends EditPersonDescriptorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public EditSpecialistDescriptorBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditSpecialistDescriptor());","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public EditSpecialistDescriptorBuilder(EditSpecialistDescriptor editSpecialistDescriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        setDescriptor(new EditSpecialistDescriptor(editSpecialistDescriptor));","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     * Returns an {@code EditSpecialistDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    public EditSpecialistDescriptorBuilder(Specialist specialist) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d new EditSpecialistDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        setDescriptor(editSpecialistDescriptor);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        editPersonDescriptorSetFields(specialist);","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        editSpecialistDescriptor.setSpecialty(specialist.getSpecialty());","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"     * Sets the {@code Location} of the {@code EditSpecialtyDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    public EditSpecialistDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d (EditSpecialistDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        editSpecialistDescriptor.setLocation(new Location(location));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"     * Sets the {@code Specialty} of the {@code EditSpecialtyDescriptor} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    public EditSpecialistDescriptorBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        EditSpecialistDescriptor editSpecialistDescriptor \u003d (EditSpecialistDescriptor) super.getDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"        editSpecialistDescriptor.setSpecialty(new Specialty(specialty));","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public EditSpecialistDescriptor build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        return (EditSpecialistDescriptor) getDescriptor();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":12,"vansh284":30,"alvinlim277":10}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"angkyakdifp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"angkyakdifp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class PatientBuilder extends PersonBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public static final String DEFAULT_AGE \u003d \"30\";","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"angkyakdifp"},"content":"    private Set\u003cMedicalHistory\u003e medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        super();","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        super(patientToCopy);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        age \u003d patientToCopy.getAge();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"        medicalHistory \u003d patientToCopy.getMedicalHistory();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public Age getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        return age;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"    public Set\u003cMedicalHistory\u003e getMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"angkyakdifp"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"angkyakdifp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"angkyakdifp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"     * Sets the {@code Age} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    public PatientBuilder withAge(String age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"angkyakdifp"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"angkyakdifp"},"content":"     * Sets the {@code MedicalHistory} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"angkyakdifp"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"angkyakdifp"},"content":"    public PatientBuilder withMedicalHistory(String ... medicalHistory) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"angkyakdifp"},"content":"        this.medicalHistory \u003d SampleDataUtil.getMedicalHistorySet(medicalHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"angkyakdifp"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public Patient build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"        return new Patient(getName(), getPhone(), getEmail(), getTags(), getAge(), getMedicalHistory());","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"vansh284":39,"angkyakdifp":25,"alvinlim277":1}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PATIENT_TAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"angkyakdifp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALHISTORY;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"angkyakdifp"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"public class PatientUtil {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        return AddCommand.COMMAND_WORD + \" \" + PATIENT_TAG + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"        patient.getMedicalHistory().stream().forEach(s -\u003e sb.append(PREFIX_MEDICALHISTORY + s.value + \" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_AGE + patient.getAge().value + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        descriptor.getAge().ifPresent(age -\u003e sb.append(PREFIX_AGE).append(age.value).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"angkyakdifp"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"angkyakdifp"},"content":"        if (descriptor.getMedicalHistory().isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"angkyakdifp"},"content":"            Set\u003cMedicalHistory\u003e medicalHistory \u003d descriptor.getMedicalHistory().get();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"angkyakdifp"},"content":"            if (medicalHistory.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"angkyakdifp"},"content":"                sb.append(PREFIX_MEDICALHISTORY);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"angkyakdifp"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"angkyakdifp"},"content":"                medicalHistory.forEach(s -\u003e sb.append(PREFIX_MEDICALHISTORY).append(s.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"angkyakdifp"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"angkyakdifp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"vansh284":19,"angkyakdifp":12,"-":43}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public abstract class PersonBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    private Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"    public abstract Person build();","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        return name;","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"        return phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        return email;","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"        return location;","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"        return tags;","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"vansh284":18,"-":83,"alvinlim277":4}},{"path":"src/test/java/seedu/address/testutil/SpecialistBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * A utility class to help with building Specialist objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class SpecialistBuilder extends PersonBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    public static final String DEFAULT_SPECIALTY \u003d \"Dermatology\";","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    public static final String DEFAULT_LOCATION \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    private Specialty specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    private Location location;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * Creates a {@code SpecialistBuilder} with the default details.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    public SpecialistBuilder() {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"        super();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"        specialty \u003d new Specialty(DEFAULT_SPECIALTY);","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     * Initializes the SpecialistBuilder with the data of {@code specialistToCopy}.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    public SpecialistBuilder(Specialist specialistToCopy) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        super(specialistToCopy);","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        specialty \u003d specialistToCopy.getSpecialty();","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        location \u003d specialistToCopy.getLocation();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        return location;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    public Specialty getSpecialty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        return specialty;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"     * Sets the {@code Specialty} of the {@code Specialist} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"     * @param specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"     * @return PersonBuilder with specialty","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    public SpecialistBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        this.specialty \u003d new Specialty(specialty);","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"     * Sets the {@code Location} of the {@code Specialist} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"    public SpecialistBuilder withLocation(String location) {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    public Specialist build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        return new Specialist(getName(), getPhone(), getEmail(), getLocation(), getTags(), getSpecialty());","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kokseng1":29,"vansh284":16,"alvinlim277":22}},{"path":"src/test/java/seedu/address/testutil/SpecialistUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import static seedu.address.logic.parser.CliSyntax.SPECIALIST_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import seedu.address.logic.commands.EditCommand.EditSpecialistDescriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":" * A utility class for Specialist.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"public class SpecialistUtil {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"     * Returns an add command string for adding the {@code specialist}.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    public static String getAddCommand(Specialist specialist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        return AddCommand.COMMAND_WORD + \" \" + SPECIALIST_TAG + \" \" + getSpecialistDetails(specialist);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code specialist}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public static String getSpecialistDetails(Specialist specialist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_NAME + specialist.getName().fullName + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_PHONE + specialist.getPhone().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        sb.append(PREFIX_EMAIL + specialist.getEmail().value + \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        sb.append(PREFIX_LOCATION + specialist.getLocation().value + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        specialist.getTags().stream().forEach(","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        sb.append(PREFIX_SPECIALTY + specialist.getSpecialty().value + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"     * Returns the part of command string for the given {@code EditSpecialistDescriptor}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    public static String getEditSpecialistDescriptorDetails(EditSpecialistDescriptor descriptor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        descriptor.getLocation().ifPresent(address -\u003e sb.append(PREFIX_LOCATION).append(address.value).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        descriptor.getSpecialty().ifPresent(specialty -\u003e sb.append(PREFIX_SPECIALTY).append(specialty.value)","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Kokseng1":9,"vansh284":16,"-":39,"alvinlim277":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_THIRTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_HISTORY_ANEMIA;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_DERMATOLOGY;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"import seedu.address.model.person.Specialist;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"angkyakdifp"},"content":"    public static final Patient ALICE \u003d (Patient) new PatientBuilder().withAge(\"17\")","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"angkyakdifp"},"content":"            .withMedicalHistory(\"Anemia\", \"Osteoporosis\")","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"angkyakdifp"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"angkyakdifp"},"content":"    public static final Patient BENSON \u003d (Patient) new PatientBuilder().withAge(\"29\")","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"angkyakdifp"},"content":"            .withMedicalHistory(\"Osteoporosis\")","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"angkyakdifp"},"content":"    public static final Patient CARL \u003d (Patient) new PatientBuilder().withAge(\"47\")","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Carl Kurz\").withPhone(\"95352563\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    public static final Patient DANIEL \u003d (Patient) new PatientBuilder().withAge(\"78\").withMedicalHistory(\"Asthma\")","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"angkyakdifp"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"    public static final Specialist ELLE \u003d (Specialist) new SpecialistBuilder().withSpecialty(\"Dermatology\")","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(\"michegan ave\").withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    public static final Specialist FIONA \u003d (Specialist) new SpecialistBuilder().withSpecialty(\"Orthopaedic\")","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(\"little tokyo\").withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"    public static final Specialist GEORGE \u003d (Specialist) new SpecialistBuilder().withSpecialty(\"Physiotherapy\")","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(\"4th street\").withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public static final Patient HOON \u003d (Patient) new PatientBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"            .withAge(\"79\").withMedicalHistory(\"Diabetes\")","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"            .withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    public static final Specialist IDA \u003d (Specialist) new SpecialistBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"            .withSpecialty(\"Gynaecology\")","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"            .withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    public static final Patient AMY \u003d (Patient) new PatientBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"            .withAge(VALID_AGE_THIRTY).withMedicalHistory(VALID_MEDICAL_HISTORY_ANEMIA)","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"angkyakdifp"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"    public static final Specialist BOB \u003d (Specialist) new SpecialistBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"            .withLocation(VALID_LOCATION_BOB).withSpecialty(VALID_SPECIALTY_DERMATOLOGY)","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"            .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Kokseng1":3,"vansh284":16,"angkyakdifp":11,"-":52,"alvinlim277":19}}]

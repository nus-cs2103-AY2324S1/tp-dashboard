[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"## Pharmhub","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"[![CI Status](https://github.com/ay2324s1-cs2103t-w08-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/ay2324s1-cs2103t-w08-4/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"Welcome to our CS2103T project by [**AY2324S1-CS2103T-W08-4**](https://github.com/orgs/AY2324S1-CS2103T-W08-4/people).","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"Our project is an evolved version of the AddressBook-Level3 project by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"Team Members: Wan Lei, Vishnu, Joe, Immanuel","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"* The project simulates an ongoing software project for a desktop application (called _PharmHub_) used for managing patients their medication orders.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"* It is named `PharmHub` as it aims to increase the efficiency of remote pharmacists.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"* For the detailed documentation of this project, see the **[PharmHub Product Website](https://ay2324s1-cs2103t-w08-4.github.io/tp/)**.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LinWanLeii":4,"HEEaZ":5,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"mainClassName \u003d \u0027seedu.pharmhub.Main\u0027","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"    archiveFileName \u003d \u0027PharmHub.jar\u0027","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"run {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"HEEaZ":3,"-":72,"joeng03":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"### Immanuel Chia","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"\u003cimg src\u003d\"images/heeaz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"[[github](https://github.com/HEEaZ)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"[[portfolio](team/heeaz.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"* Responsibilities: Integration, Scheduling and Tracking","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"### Vijayaraghavan Vishnuprasath","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"\u003cimg src\u003d\"images/timetraveller-123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"[[github](http://github.com/timetraveller-123)]","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"[[portfolio](team/timetraveller-123.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"* Responsibilities: Code Quality and Documentation.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"### Ng Yin Joe","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"\u003cimg src\u003d\"images/joeng03.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"[[github](http://github.com/joeng03)] [[portfolio](team/joeng03.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"### Lin Wan Lei","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"\u003cimg src\u003d\"images/linwanleii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"[[github](http://github.com/linwanleii)]","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"[[portfolio](team/linwanleii.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"* Role: Team Lead, Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"LinWanLeii":6,"HEEaZ":6,"-":28,"timetraveller-123":5,"joeng03":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"##Table of Contents","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"2. [Setting up](#setting-up-getting-started)","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"3. [Design](#design)","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    1. [Architecture](#architecture)","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    2. [UI](#ui-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"    3. [Logic](#logic-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    4. [Model](#model-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    5. [Storage](#storage-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    6. [Common Classes](#common-classes)","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"5. [Documentation](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"6. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    1. [Product scope](#product-scope)","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    2. [User Stories](#user-stories)","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    3. [Use Cases](#use-cases)","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    4. [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    5. [Glossary](#glossary)","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"joeng03"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `PharmHubParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"joeng03"},"content":"* When called upon to parse a user command, the `PharmHubParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `PharmHubParser` returns back as a `Command` object.","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"joeng03"},"content":"* stores the PharmHub data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"joeng03"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `PharmHub`, which `Person` references. This allows `PharmHub` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-W08-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"LinWanLeii"},"content":"\u003cimg src\u003d\"images/PharmHubStorageClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"LinWanLeii"},"content":"* can save both PharmHub data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"joeng03"},"content":"* inherits from both `PharmHubStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":161,"author":{"gitId":"LinWanLeii"},"content":"    * The Main Application has 3 JsonAdapted component in storage: `JsonAdaptedPerson`, `JsonAdaptedOrder`, `JsonAdaptedMedicine`.","lastModifiedDate":"2023-11-12"},{"lineNumber":162,"author":{"gitId":"LinWanLeii"},"content":"      * `JsonAdaptedPerson` further contains `JsonAdaptedTag` and `JsonAdaptedAllergy`.","lastModifiedDate":"2023-11-12"},{"lineNumber":163,"author":{"gitId":"LinWanLeii"},"content":"      * `JsonAdaptedOrder` further contains `JsonAdaptedStatus` and `JsonAdaptedMedicine`.`","lastModifiedDate":"2023-11-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"joeng03"},"content":"Classes used by multiple components are in the `seedu.pharmHub.commons` package.","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"LinWanLeii"},"content":"### Adding an Order feature","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"LinWanLeii"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"LinWanLeii"},"content":"The adding an Order feature allows the user to add an order to a person.","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"LinWanLeii"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"LinWanLeii"},"content":"1. The add order feature includes the ignore allergy flag to allow further flexibility for the pharmacist when assigning orders","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"LinWanLeii"},"content":"   to people. This is because they may have other considerations when it comes to assigning a medication for a person.","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"LinWanLeii"},"content":"2. The add order feature do not allow duplicated order as we believe that each order should be distinct base on","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"LinWanLeii"},"content":"   their order number, ensuring that no orders go missing or forgotten.","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"LinWanLeii"},"content":"#### Steps to Trigger","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"LinWanLeii"},"content":"1. The User launches the application.","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"LinWanLeii"},"content":"2. The User executes \"addo 1 m/aspirin o/1\" to add a new order.","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"LinWanLeii"},"content":"3. The `AddOrderParser#parse()` checks whether all the prefixes and the required values are provided.","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"LinWanLeii"},"content":"4. If the check is successful, the `ParseUtil#parseOrderNumber`, `ParseUtil#parseOrderNumber` and `ParseUtil#parseMedicine` ","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"LinWanLeii"},"content":"will then check and create an `Index`, `OrderNumber` and `Medicine` passing it to `AddOrderCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"LinWanLeii"},"content":"5. Depending on whether an ignore allergy flag `ia/` is added in the command input, user can input medications in the order that the person is allergic to. ","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"LinWanLeii"},"content":"6. `AddOrderCommand#execute` then checks if the person exist base on index and creates an Order with the","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"LinWanLeii"},"content":"`person`, `orderNumber`, `medicine` and a `PENDING` Status, then `Model#hasOrder` also checks whether the order is a duplicated order.","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"LinWanLeii"},"content":"7. If the order does not exist, then the `Model#addOrder` adds the order into the order list.","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"LinWanLeii"},"content":"#### Design Consideration","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"LinWanLeii"},"content":"The following sequence diagram shows how `addo` works on an example input. `addo 1 m/aspirin o/1000`","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"LinWanLeii"},"content":"![AddOrderSequenceDiagram](images/AddoSequenceDiagram.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"LinWanLeii"},"content":"### Finding an Order Feature","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"LinWanLeii"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"LinWanLeii"},"content":"The finding an Order feature allows the user to find other base on either the orderStatus, medication in the order or both.","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"LinWanLeii"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"LinWanLeii"},"content":"1. The find order feature allows independent Predicate finding.","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"LinWanLeii"},"content":"    1. i.e. you can find order base on only `Status` or `Medicine`.","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"LinWanLeii"},"content":"    2. We implemented this format to expend the utility of the feature.","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"LinWanLeii"},"content":"#### Steps to Trigger","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"LinWanLeii"},"content":"1. The User Launches the application. ","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"LinWanLeii"},"content":"2. The User decides to find/filter through the order list after adding multiple orders.","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"LinWanLeii"},"content":"3. The User executes \"findo s/pd m/pan ibuprofen\" to find orders that has `PENDING` status and either `PANADOL` or `IBUPROFEN` in the order.","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"LinWanLeii"},"content":"4. The `FindOrderCommandParser#parse()` checks whether all the prefixes and the required values are provided.","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"LinWanLeii"},"content":"5. If the check is successful, depending on the User input if `s/` is present `ParseUtil#parseStatus` will return a","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"LinWanLeii"},"content":"`Status`, and if `m/` is present `ParseUtil#parseMedicines` will return the `Medicine/s`.","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"LinWanLeii"},"content":"6. The `Status` and `Medicine` will then be passed to the FindOrderCommand.","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"LinWanLeii"},"content":"7. The `Model#updateFilteredOrder` will then take either or both `Status` and `Medicine` as predicates to filter through the order list and return valid orders.","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"LinWanLeii"},"content":"8. The filtered order list will then be returned and shown on the Displayed list.","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"LinWanLeii"},"content":"#### Design Consideration","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"LinWanLeii"},"content":"The following sequence diagram shows how `findo` works on an example input. `findo s/pd m/pan ibuprofen`","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"LinWanLeii"},"content":"![FindOrderSequenceDiagram](images/FindoSequenceDiagram.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"joeng03"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedPharmHub`. It extends `PharmHub` with an undo/redo history, stored internally as an `pharmHubStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-11-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"joeng03"},"content":"* `VersionedPharmHub#commit()` — Saves the current pharmHub state in its history.","lastModifiedDate":"2023-11-09"},{"lineNumber":239,"author":{"gitId":"joeng03"},"content":"* `VersionedPharmHub#undo()` — Restores the previous pharmHub state from its history.","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"joeng03"},"content":"* `VersionedPharmHub#redo()` — Restores a previously undone pharmHub state from its history.","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"joeng03"},"content":"These operations are exposed in the `Model` interface as `Model#commitPharmHub()`, `Model#undoPharmHub()` and `Model#redoPharmHub()` respectively.","lastModifiedDate":"2023-11-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"joeng03"},"content":"Step 1. The user launches the application for the first time. The `VersionedPharmHub` will be initialized with the initial pharmHub state, and the `currentStatePointer` pointing to that single pharmHub state.","lastModifiedDate":"2023-11-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"joeng03"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in PharmHub. The `delete` command calls `Model#commitPharmHub()`, causing the modified state of PharmHub after the `delete 5` command executes to be saved in the `pharmHubStateList`, and the `currentStatePointer` is shifted to the newly inserted pharmHub state.","lastModifiedDate":"2023-11-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"joeng03"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitPharmHub()`, causing another modified pharmHub state to be saved into the `pharmHubStateList`.","lastModifiedDate":"2023-11-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"joeng03"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitPharmHub()`, so PharmHub state will not be saved into the `pharmHubStateList`.","lastModifiedDate":"2023-11-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"joeng03"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoPharmHub()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous pharmHub state, and restores PharmHub to that state.","lastModifiedDate":"2023-11-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"joeng03"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial PharmHub state, then there are no previous PharmHub states to restore. The `undo` command uses `Model#canUndoPharmHub()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-11-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"joeng03"},"content":"The `redo` command does the opposite — it calls `Model#redoPharmHub()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores PharmHub to that state.","lastModifiedDate":"2023-11-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"joeng03"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `pharmHubStateList.size() - 1`, pointing to the latest pharmHub state, then there are no undone PharmHub states to restore. The `redo` command uses `Model#canRedoPharmHub()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-11-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"joeng03"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify PharmHub, such as `list`, will usually not call `Model#commitPharmHub()`, `Model#undoPharmHub()` or `Model#redoPharmHub()`. Thus, the `pharmHubStateList` remains unchanged.","lastModifiedDate":"2023-11-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"joeng03"},"content":"Step 6. The user executes `clear`, which calls `Model#commitPharmHub()`. Since the `currentStatePointer` is not pointing at the end of the `pharmHubStateList`, all pharmHub states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-11-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"joeng03"},"content":"* **Alternative 1 (current choice):** Saves the entire pharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"HEEaZ"},"content":"### Listing all orders","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"HEEaZ"},"content":"The listing all orders functionality is supported by the listPanelPlaceholder in the Ui.","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"HEEaZ"},"content":"On start of application, two listPanels (PersonListPanel, OrderListPanel) is created, and person list panel is attached","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"HEEaZ"},"content":"to the ListPanel Placeholder as default.","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"HEEaZ"},"content":"On execution of the any listing commands (`listo` or `listp`), the resultant CommandResult contains details on which","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"HEEaZ"},"content":"panel to choose to display.","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"HEEaZ"},"content":"These are 3 different options for these details:","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"HEEaZ"},"content":"* Person - Panel will display list of people","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"HEEaZ"},"content":"* Order - Panel will display list of orders","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"HEEaZ"},"content":"* NoChange - Panel will keep whatever was there previously","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"HEEaZ"},"content":"Using these specifications, the CommandResult from executing `listo` and `listp` will inform the Ui of which","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"HEEaZ"},"content":"panel to attach to the listPanelPlaceHolder","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"HEEaZ"},"content":"* Pharmacists","lastModifiedDate":"2023-10-02"},{"lineNumber":353,"author":{"gitId":"HEEaZ"},"content":"* Working remotely","lastModifiedDate":"2023-10-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"HEEaZ"},"content":"**Value proposition**: Provide easy access to patient details and allows pharmacists to quickly and accurately process","lastModifiedDate":"2023-10-02"},{"lineNumber":356,"author":{"gitId":"HEEaZ"},"content":"medication orders for the patients, optimised for CLI use.","lastModifiedDate":"2023-10-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                                         | So that I can…​                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"HEEaZ"},"content":"|-------|--------------------------------------------|----------------------------------------------------------------------|-----------------------------------------------------------------------------|","lastModifiedDate":"2023-10-02"},{"lineNumber":365,"author":{"gitId":"joeng03"},"content":"| `* * *` | Pharmacist                                 | Add a new patient into PharmHub                               | Keep track of all information of my patients                                |","lastModifiedDate":"2023-11-09"},{"lineNumber":366,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | Add a medication order for a patient                                 | keep track medications orders of patients                                   |","lastModifiedDate":"2023-10-02"},{"lineNumber":367,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | Add allergies of a patient towards certain medications               | keep track of patient allergies                                             |","lastModifiedDate":"2023-10-02"},{"lineNumber":368,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | View details of a medication order                                   |                                                                             |","lastModifiedDate":"2023-10-02"},{"lineNumber":369,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | View the status of an order                                          | I can track the state of an order                                           |","lastModifiedDate":"2023-10-02"},{"lineNumber":370,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | Edit status of an order                                              | Update the order records with the most current information                  |","lastModifiedDate":"2023-10-02"},{"lineNumber":371,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | Edit the details of a patient                                        | Update records with the most current information                            |","lastModifiedDate":"2023-10-02"},{"lineNumber":372,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | View all medication orders                                           | get a quick overview of all medication orders from all patients             |","lastModifiedDate":"2023-10-02"},{"lineNumber":373,"author":{"gitId":"joeng03"},"content":"| `* * *` | Pharmacist                                 | Delete a patient from my pharmHub                                 | remove a patient that is no longer under my care                            |","lastModifiedDate":"2023-11-09"},{"lineNumber":374,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | New user                                   | View a summary of all the commands                                   | recall how to use the application                                           |","lastModifiedDate":"2023-10-02"},{"lineNumber":375,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Pharmacist                                 | Delete an order from the system                                      | Remove erroneous orders                                                     |","lastModifiedDate":"2023-10-02"},{"lineNumber":376,"author":{"gitId":"HEEaZ"},"content":"| `* * *` | Detail-oriented Pharmacist                 | Be alerted if a patient is given a medication that he is allergic to | Detect and prevent erroneous orders from going through                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":377,"author":{"gitId":"HEEaZ"},"content":"| `* *` | Busy Pharmacist                            | Abbreviate medication names                                          | Maximise my efficiency                                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":378,"author":{"gitId":"HEEaZ"},"content":"| `* *` | Pharmacist                                 | View all details of a patient                                        | get the full patient profile, if required                                   |","lastModifiedDate":"2023-10-02"},{"lineNumber":379,"author":{"gitId":"HEEaZ"},"content":"| `* *` | Pharmacist                                 | Search orders by various attributes                                  | manage and convey information about orders to stakeholders efficiently      |","lastModifiedDate":"2023-10-02"},{"lineNumber":380,"author":{"gitId":"HEEaZ"},"content":"| `* *` | Pharmacist                                 | See the number of unfulfilled orders                                 | keep track of my progress in dispensing orders                              |","lastModifiedDate":"2023-10-02"},{"lineNumber":381,"author":{"gitId":"HEEaZ"},"content":"| `* *` | Pharmacist                                 | Add priorities to orders                                             | keep track of which orders I should prioritise                              |","lastModifiedDate":"2023-10-02"},{"lineNumber":382,"author":{"gitId":"HEEaZ"},"content":"| `* *` | Pharmacist                                 | Filter orders by their statuses                                      | manage my orders efficiently                                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":383,"author":{"gitId":"HEEaZ"},"content":"| `* *` | Pharmacist                                 | Sort orders on various categories                                    | maximise my efficiency                                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":384,"author":{"gitId":"HEEaZ"},"content":"| `*`   | Pharmacist                                 | Edit an order                                                        | correct or update an added order                                            |","lastModifiedDate":"2023-10-02"},{"lineNumber":385,"author":{"gitId":"HEEaZ"},"content":"| `*`   | Pharmacist                                 | Track my medication inventory                                        | I have easy access to the amount of medication I have                       |","lastModifiedDate":"2023-10-02"},{"lineNumber":386,"author":{"gitId":"HEEaZ"},"content":"| `*`   | Pharmacist                                 | Calculate estimated time an order will take to ship                  | Notify patients of an estimated wait time before receiving their medication |","lastModifiedDate":"2023-10-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"LinWanLeii"},"content":"For all use cases below, the **Software System** is the `PharmHub` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-11-12"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC01 - Adding a person**","lastModifiedDate":"2023-11-12"},{"lineNumber":394,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":395,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The new person(patient) will be added to the list of Person.","lastModifiedDate":"2023-11-12"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"LinWanLeii"},"content":"1. User inputs the command to add a person into the system.","lastModifiedDate":"2023-11-12"},{"lineNumber":400,"author":{"gitId":"LinWanLeii"},"content":"2. PharmHub adds the new person to the person list, displays the updated list and shows the detail information on the information display.","lastModifiedDate":"2023-11-12"},{"lineNumber":401,"author":{"gitId":"LinWanLeii"},"content":"\u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":402,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":403,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":404,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":405,"author":{"gitId":"LinWanLeii"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":406,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":407,"author":{"gitId":"LinWanLeii"},"content":"    * 1a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":408,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":411,"author":{"gitId":"LinWanLeii"},"content":"* 1b. User enters a person that already exists.","lastModifiedDate":"2023-11-12"},{"lineNumber":412,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":413,"author":{"gitId":"LinWanLeii"},"content":"    * 1b1. PharmHub shows an `User already exist` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":414,"author":{"gitId":"LinWanLeii"},"content":"\u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":415,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":416,"author":{"gitId":"LinWanLeii"},"content":"* 1c. User does not enter a required field.","lastModifiedDate":"2023-11-12"},{"lineNumber":417,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":418,"author":{"gitId":"LinWanLeii"},"content":"    * 1c1. PharmHub shows an `Invalid Command Format` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":419,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":420,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":421,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":422,"author":{"gitId":"LinWanLeii"},"content":"* 1d. User enters an invalid value for a field.","lastModifiedDate":"2023-11-12"},{"lineNumber":423,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":424,"author":{"gitId":"LinWanLeii"},"content":"    * 1d1. PharmHub shows an `Field Requirement` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":425,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":426,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":427,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":428,"author":{"gitId":"LinWanLeii"},"content":"     ","lastModifiedDate":"2023-11-12"},{"lineNumber":429,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC02 - Listing Person list**","lastModifiedDate":"2023-11-12"},{"lineNumber":430,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":431,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The Person List would be displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":432,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":433,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"LinWanLeii"},"content":"1. User adds a person [UC01](#use-case-uc01---adding-a-person).","lastModifiedDate":"2023-11-12"},{"lineNumber":436,"author":{"gitId":"LinWanLeii"},"content":"2. User inputs command to view the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":437,"author":{"gitId":"LinWanLeii"},"content":"3. PharmHub shows the Person list on the display list.","lastModifiedDate":"2023-11-12"},{"lineNumber":438,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"LinWanLeii"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":443,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":444,"author":{"gitId":"LinWanLeii"},"content":"    * 1a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":445,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":446,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":447,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":448,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"LinWanLeii"},"content":"  Use case ends","lastModifiedDate":"2023-11-12"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC03 - Editing Person Detail**","lastModifiedDate":"2023-11-12"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The Person\u0027s detail would be updated.","lastModifiedDate":"2023-11-12"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":457,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":458,"author":{"gitId":"LinWanLeii"},"content":"1. User adds a person [UC01](#use-case-uc01---adding-a-person).","lastModifiedDate":"2023-11-12"},{"lineNumber":459,"author":{"gitId":"LinWanLeii"},"content":"2. User views the person list [UC02](#use-case-uc02---listing-person-list).","lastModifiedDate":"2023-11-12"},{"lineNumber":460,"author":{"gitId":"LinWanLeii"},"content":"3. User inputs command to edit a person\u0027s detail after looking at the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":461,"author":{"gitId":"LinWanLeii"},"content":"4. PharmHub updates the Person list with the updated Person information and display the person on the detail display.","lastModifiedDate":"2023-11-12"},{"lineNumber":462,"author":{"gitId":"LinWanLeii"},"content":"\u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":463,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":464,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":465,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":466,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":467,"author":{"gitId":"LinWanLeii"},"content":"* 3a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":468,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":469,"author":{"gitId":"LinWanLeii"},"content":"    * 3a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":470,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":471,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":472,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":473,"author":{"gitId":"LinWanLeii"},"content":"* 3b. User enters an invalid index.","lastModifiedDate":"2023-11-12"},{"lineNumber":474,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":475,"author":{"gitId":"LinWanLeii"},"content":"    * 3b1. PharmHub shows an `Invalid Index` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":476,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":477,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":478,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":479,"author":{"gitId":"LinWanLeii"},"content":"* 3c. User does not enter at least one field to edit.","lastModifiedDate":"2023-11-12"},{"lineNumber":480,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":481,"author":{"gitId":"LinWanLeii"},"content":"    * 3c1. PharmHub shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":482,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":485,"author":{"gitId":"LinWanLeii"},"content":"* 3d. User enters an invalid value for a field.","lastModifiedDate":"2023-11-12"},{"lineNumber":486,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":487,"author":{"gitId":"LinWanLeii"},"content":"    * 3d1. PharmHub shows an `Field Requirement` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":488,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":489,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":490,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":491,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC04 - Adding a medicine**","lastModifiedDate":"2023-11-12"},{"lineNumber":492,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":493,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The new medicine will be added to the list of medicines.","lastModifiedDate":"2023-11-12"},{"lineNumber":494,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":495,"author":{"gitId":"timetraveller-123"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":496,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":497,"author":{"gitId":"LinWanLeii"},"content":"1. User inputs the command to add a medicine into the system.","lastModifiedDate":"2023-11-12"},{"lineNumber":498,"author":{"gitId":"LinWanLeii"},"content":"2. PharmHub adds the new medicine to the medicine list.","lastModifiedDate":"2023-11-12"},{"lineNumber":499,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":500,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":501,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":502,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":503,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":504,"author":{"gitId":"LinWanLeii"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":505,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":506,"author":{"gitId":"LinWanLeii"},"content":"    * 1a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":507,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":508,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":509,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":510,"author":{"gitId":"LinWanLeii"},"content":"* 1b. User enters a medicine that already exists.","lastModifiedDate":"2023-11-12"},{"lineNumber":511,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":512,"author":{"gitId":"LinWanLeii"},"content":"    * 1b1. PharmHub shows an `Medicine already exist` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":513,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":514,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":515,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":516,"author":{"gitId":"LinWanLeii"},"content":"* 1c. User does not enter a required field.","lastModifiedDate":"2023-11-12"},{"lineNumber":517,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":518,"author":{"gitId":"LinWanLeii"},"content":"    * 1c1. PharmHub shows an `Invalid Command Format` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":519,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":520,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":521,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":522,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC05 - Listing Medicine list**","lastModifiedDate":"2023-11-12"},{"lineNumber":523,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":524,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The Medicine List would be displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":525,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":526,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":527,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":528,"author":{"gitId":"LinWanLeii"},"content":"1. User adds a medicine [UC04](#use-case-uc04---adding-a-medicine).","lastModifiedDate":"2023-11-12"},{"lineNumber":529,"author":{"gitId":"LinWanLeii"},"content":"2. User inputs command to view the medicine list.","lastModifiedDate":"2023-11-12"},{"lineNumber":530,"author":{"gitId":"LinWanLeii"},"content":"3. PharmHub shows the Medicine list on the display list.","lastModifiedDate":"2023-11-12"},{"lineNumber":531,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":532,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":533,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":534,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":535,"author":{"gitId":"LinWanLeii"},"content":"* 2a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":536,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":537,"author":{"gitId":"LinWanLeii"},"content":"    * 2a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":538,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":539,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":540,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":541,"author":{"gitId":"LinWanLeii"},"content":"* 2b. The list is empty.","lastModifiedDate":"2023-11-12"},{"lineNumber":542,"author":{"gitId":"LinWanLeii"},"content":"  \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":543,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":544,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":545,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC06 - Adding a medicine short form**","lastModifiedDate":"2023-11-12"},{"lineNumber":546,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":547,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The Medicine would have a short form.","lastModifiedDate":"2023-11-12"},{"lineNumber":548,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":549,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":550,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":551,"author":{"gitId":"LinWanLeii"},"content":"1. User adds a Medicine [UC04](#use-case-uc04---adding-a-medicine).","lastModifiedDate":"2023-11-12"},{"lineNumber":552,"author":{"gitId":"LinWanLeii"},"content":"2. User views the person list [UC05](#use-case-uc05---listing-medicine-list).","lastModifiedDate":"2023-11-12"},{"lineNumber":553,"author":{"gitId":"LinWanLeii"},"content":"3. User inputs command to add a short form for medicine base on the index on the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":554,"author":{"gitId":"LinWanLeii"},"content":"4. PharmHub updates Medicine list with a short form for the medicine.","lastModifiedDate":"2023-11-12"},{"lineNumber":555,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":556,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":557,"author":{"gitId":"timetraveller-123"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":558,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":559,"author":{"gitId":"LinWanLeii"},"content":"* 3a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":560,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":561,"author":{"gitId":"LinWanLeii"},"content":"    * 3a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":562,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":563,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":564,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":565,"author":{"gitId":"LinWanLeii"},"content":"* 3b. User enters an invalid index.","lastModifiedDate":"2023-11-12"},{"lineNumber":566,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":567,"author":{"gitId":"LinWanLeii"},"content":"    * 3b1. PharmHub shows an `Invalid Index` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":568,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":569,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":570,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":571,"author":{"gitId":"LinWanLeii"},"content":"* 3c. User does not enter a field for short form.","lastModifiedDate":"2023-11-12"},{"lineNumber":572,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":573,"author":{"gitId":"LinWanLeii"},"content":"    * 3c1. PharmHub shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":574,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":575,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":576,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC07 - Deleting a medicine short form**","lastModifiedDate":"2023-11-12"},{"lineNumber":577,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":578,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The short form for the medicine will be removed.","lastModifiedDate":"2023-11-12"},{"lineNumber":579,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":580,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":581,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":582,"author":{"gitId":"LinWanLeii"},"content":"1. User adds a short form [U07](#use-case-uc06---adding-a-medicine-short-form)","lastModifiedDate":"2023-11-12"},{"lineNumber":583,"author":{"gitId":"LinWanLeii"},"content":"2. User inputs command to delete a short form for the medicine base on the index on the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":584,"author":{"gitId":"LinWanLeii"},"content":"3. PharmHub updates Medicine list with an empty short form for the medicine.","lastModifiedDate":"2023-11-12"},{"lineNumber":585,"author":{"gitId":"LinWanLeii"},"content":"\u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":586,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":587,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":588,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":589,"author":{"gitId":"LinWanLeii"},"content":"* 2a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":590,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":591,"author":{"gitId":"LinWanLeii"},"content":"    * 2a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":592,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":593,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":594,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":595,"author":{"gitId":"LinWanLeii"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-11-12"},{"lineNumber":596,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":597,"author":{"gitId":"LinWanLeii"},"content":"    * 2b1. PharmHub shows an `Invalid Index` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":598,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":599,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":600,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":601,"author":{"gitId":"LinWanLeii"},"content":"#### **Use Case: UC08 - Add an Order for a Person**","lastModifiedDate":"2023-11-12"},{"lineNumber":602,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":603,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The order is added to the person, which can be seen by viewing the order or person","lastModifiedDate":"2023-11-12"},{"lineNumber":604,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":605,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":606,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":607,"author":{"gitId":"LinWanLeii"},"content":"1. User views the person list [UC02](#use-case-uc02---listing-person-list).","lastModifiedDate":"2023-11-12"},{"lineNumber":608,"author":{"gitId":"LinWanLeii"},"content":"2. PharmHub shows a list of persons.","lastModifiedDate":"2023-11-12"},{"lineNumber":609,"author":{"gitId":"LinWanLeii"},"content":"3. User selects a person from the list to assign the order to.","lastModifiedDate":"2023-11-12"},{"lineNumber":610,"author":{"gitId":"LinWanLeii"},"content":"4. User then inputs the add order command.","lastModifiedDate":"2023-11-12"},{"lineNumber":611,"author":{"gitId":"LinWanLeii"},"content":"5. PharmHub adds the new order to the order list, then displays the details on the information display.","lastModifiedDate":"2023-11-12"},{"lineNumber":612,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":613,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":614,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":615,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":616,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":617,"author":{"gitId":"LinWanLeii"},"content":"* 4a. The given index to select a patient is invalid.","lastModifiedDate":"2023-11-12"},{"lineNumber":618,"author":{"gitId":"LinWanLeii"},"content":"    * 4a1. PharmHub shows an `Invalid Index` error message. ","lastModifiedDate":"2023-11-12"},{"lineNumber":619,"author":{"gitId":"LinWanLeii"},"content":"    * Use case resumes at step 5.","lastModifiedDate":"2023-11-12"},{"lineNumber":620,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":621,"author":{"gitId":"LinWanLeii"},"content":"* 4b. The given medication name is invalid.","lastModifiedDate":"2023-11-12"},{"lineNumber":622,"author":{"gitId":"LinWanLeii"},"content":"    * 4b1. PharmHub shows an `Invalid Medication` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":623,"author":{"gitId":"LinWanLeii"},"content":"    * Use case resumes at step 5.","lastModifiedDate":"2023-11-12"},{"lineNumber":624,"author":{"gitId":"LinWanLeii"},"content":"  ","lastModifiedDate":"2023-11-12"},{"lineNumber":625,"author":{"gitId":"LinWanLeii"},"content":"* 4c. The person is allergic to the input medication","lastModifiedDate":"2023-11-12"},{"lineNumber":626,"author":{"gitId":"LinWanLeii"},"content":"    * 4c1. The user input the wrong medication resulting in the error.","lastModifiedDate":"2023-11-12"},{"lineNumber":627,"author":{"gitId":"LinWanLeii"},"content":"      * 4c1a. PharmHub shows an `Patient Allergy` warning message","lastModifiedDate":"2023-11-12"},{"lineNumber":628,"author":{"gitId":"LinWanLeii"},"content":"      * 4c1b. User edits the command","lastModifiedDate":"2023-11-12"},{"lineNumber":629,"author":{"gitId":"LinWanLeii"},"content":"      * Use case resumes at step 5.","lastModifiedDate":"2023-11-12"},{"lineNumber":630,"author":{"gitId":"LinWanLeii"},"content":"    * 4c2. The User wants to overwrite the warning","lastModifiedDate":"2023-11-12"},{"lineNumber":631,"author":{"gitId":"LinWanLeii"},"content":"      * 4c2a. PharmHub shows an `Patient Allergy` warning message","lastModifiedDate":"2023-11-12"},{"lineNumber":632,"author":{"gitId":"LinWanLeii"},"content":"      * 4c2b. User acknowledges the allergy warning but chooses to proceed by adding an `IA/` (Ignore Allergy) flag to the command.","lastModifiedDate":"2023-11-12"},{"lineNumber":633,"author":{"gitId":"LinWanLeii"},"content":"      * 4c2c. User confirms the order by resubmitting with the `IA/` flag.","lastModifiedDate":"2023-11-12"},{"lineNumber":634,"author":{"gitId":"LinWanLeii"},"content":"      * 4c2d. PharmHub creates the order with the provided information, including the `IA/` flag. ","lastModifiedDate":"2023-11-12"},{"lineNumber":635,"author":{"gitId":"LinWanLeii"},"content":"      * 4c2e. PharmHub confirms the successful creation of the order, noting the allergy warning and the \"IA\" flag.","lastModifiedDate":"2023-11-12"},{"lineNumber":636,"author":{"gitId":"LinWanLeii"},"content":"      * Use case resumes at step 5.","lastModifiedDate":"2023-11-12"},{"lineNumber":637,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":638,"author":{"gitId":"LinWanLeii"},"content":"In this use case, a pharmacist adds a medication order for a patient using PharmHub. ","lastModifiedDate":"2023-11-12"},{"lineNumber":639,"author":{"gitId":"LinWanLeii"},"content":"The system first allows the pharmacist to select a patient from the list and provide order details. ","lastModifiedDate":"2023-11-12"},{"lineNumber":640,"author":{"gitId":"LinWanLeii"},"content":"It then checks for potential contraindications based on the patient\u0027s allergies and issues a warning if necessary. ","lastModifiedDate":"2023-11-12"},{"lineNumber":641,"author":{"gitId":"LinWanLeii"},"content":"The pharmacist can acknowledge the warning and proceed with the order by adding an \"IA\" flag to the command. ","lastModifiedDate":"2023-11-12"},{"lineNumber":642,"author":{"gitId":"LinWanLeii"},"content":"Once confirmed, the system records the order and sends a confirmation to the pharmacist.","lastModifiedDate":"2023-11-12"},{"lineNumber":643,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":644,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC09 - Listing Order list**","lastModifiedDate":"2023-11-12"},{"lineNumber":645,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":646,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The Order List would be displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":647,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":648,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":649,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":650,"author":{"gitId":"LinWanLeii"},"content":"1. User adds an order [UC08](#use-case-uc08---add-an-order-for-a-person).","lastModifiedDate":"2023-11-12"},{"lineNumber":651,"author":{"gitId":"LinWanLeii"},"content":"2. User inputs command to view the order list.","lastModifiedDate":"2023-11-12"},{"lineNumber":652,"author":{"gitId":"LinWanLeii"},"content":"3. PharmHub shows the Order list on the display list.","lastModifiedDate":"2023-11-12"},{"lineNumber":653,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":654,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":655,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":656,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":657,"author":{"gitId":"LinWanLeii"},"content":"* 2a. User enters an invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":658,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":659,"author":{"gitId":"LinWanLeii"},"content":"    * 2a1. PharmHub shows an `Unknown Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":660,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":661,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":662,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":663,"author":{"gitId":"LinWanLeii"},"content":"* 2b. The list is empty.","lastModifiedDate":"2023-11-12"},{"lineNumber":664,"author":{"gitId":"LinWanLeii"},"content":"  \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":665,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":666,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":667,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC10 - Update Order Status**","lastModifiedDate":"2023-11-12"},{"lineNumber":668,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":669,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The order status will be updated","lastModifiedDate":"2023-11-12"},{"lineNumber":670,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":671,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":672,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":673,"author":{"gitId":"LinWanLeii"},"content":"1.  User views the order list [UC09](#use-case-uc09---listing-order-list)","lastModifiedDate":"2023-11-12"},{"lineNumber":674,"author":{"gitId":"LinWanLeii"},"content":"2.  PharmHub shows a list of Order.","lastModifiedDate":"2023-11-12"},{"lineNumber":675,"author":{"gitId":"LinWanLeii"},"content":"3.  User requests to update order status for a order in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":676,"author":{"gitId":"LinWanLeii"},"content":"4.  PharmHub updates order status for the corresponding order.","lastModifiedDate":"2023-11-12"},{"lineNumber":677,"author":{"gitId":"LinWanLeii"},"content":"    \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":678,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":679,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":680,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":681,"author":{"gitId":"LinWanLeii"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-27"},{"lineNumber":682,"author":{"gitId":"LinWanLeii"},"content":"  \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":683,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":685,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":687,"author":{"gitId":"LinWanLeii"},"content":"    * 3a1. PharmHub shows an `Invalid Index` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":689,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-27"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":691,"author":{"gitId":"LinWanLeii"},"content":"* 3b. The given status is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":692,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":693,"author":{"gitId":"LinWanLeii"},"content":"    * 3b1. PharmHub shows an `Invalid Status` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":694,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":695,"author":{"gitId":"LinWanLeii"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-27"},{"lineNumber":696,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":697,"author":{"gitId":"LinWanLeii"},"content":"* 3c. The given status is invalid chronological order.","lastModifiedDate":"2023-11-12"},{"lineNumber":698,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":699,"author":{"gitId":"LinWanLeii"},"content":"    * 3c1. PharmHub shows an `Invalid Chronological Order` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":700,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":701,"author":{"gitId":"LinWanLeii"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-11-12"},{"lineNumber":702,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":703,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC11 - Finding person**","lastModifiedDate":"2023-11-12"},{"lineNumber":704,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":705,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The list of person that contains the keywords would be displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":706,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":707,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":708,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":709,"author":{"gitId":"LinWanLeii"},"content":"1. User added multiple person [UC01](#use-case-uc01---adding-a-person).","lastModifiedDate":"2023-11-12"},{"lineNumber":710,"author":{"gitId":"LinWanLeii"},"content":"2. User wants to find a specific person base on their names.","lastModifiedDate":"2023-11-12"},{"lineNumber":711,"author":{"gitId":"LinWanLeii"},"content":"3. User input find person command.","lastModifiedDate":"2023-11-12"},{"lineNumber":712,"author":{"gitId":"LinWanLeii"},"content":"4. PharmHub filters through the person list following the keywords given from the command input.","lastModifiedDate":"2023-11-12"},{"lineNumber":713,"author":{"gitId":"LinWanLeii"},"content":"5. PharmHub then displays the filtered person list on the list display.","lastModifiedDate":"2023-11-12"},{"lineNumber":714,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":715,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":716,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":717,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":718,"author":{"gitId":"LinWanLeii"},"content":"* 3a. User input invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":719,"author":{"gitId":"LinWanLeii"},"content":"  ","lastModifiedDate":"2023-11-12"},{"lineNumber":720,"author":{"gitId":"LinWanLeii"},"content":"  * 3a1. PharmHub shows an `Invalid Command` error message","lastModifiedDate":"2023-11-12"},{"lineNumber":721,"author":{"gitId":"LinWanLeii"},"content":"    \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":722,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":723,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":724,"author":{"gitId":"LinWanLeii"},"content":"* 4a. The keywords given does not match with any person.","lastModifiedDate":"2023-11-12"},{"lineNumber":725,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":726,"author":{"gitId":"LinWanLeii"},"content":"    * 4a1. Empty list is shown.","lastModifiedDate":"2023-11-12"},{"lineNumber":727,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":728,"author":{"gitId":"LinWanLeii"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-11-12"},{"lineNumber":729,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":730,"author":{"gitId":"LinWanLeii"},"content":"#### **Use case: UC12 - Finding orders**","lastModifiedDate":"2023-11-12"},{"lineNumber":731,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":732,"author":{"gitId":"LinWanLeii"},"content":"Guarantees: The list of Orders that fulfills the status or medicine or both will be displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":733,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":734,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":735,"author":{"gitId":"LinWanLeii"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":736,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":737,"author":{"gitId":"LinWanLeii"},"content":"1. User added multiple order [UC08](#use-case-uc08---add-an-order-for-a-person).","lastModifiedDate":"2023-11-12"},{"lineNumber":738,"author":{"gitId":"LinWanLeii"},"content":"2. User wants to find a orders base on their status or medicine or both.","lastModifiedDate":"2023-11-12"},{"lineNumber":739,"author":{"gitId":"LinWanLeii"},"content":"3. User input find order command.","lastModifiedDate":"2023-11-12"},{"lineNumber":740,"author":{"gitId":"LinWanLeii"},"content":"4. PharmHub filters through the order list following the status and medicine given from the command input.","lastModifiedDate":"2023-11-12"},{"lineNumber":741,"author":{"gitId":"LinWanLeii"},"content":"5. PharmHub then displays the filtered order list on the list display.","lastModifiedDate":"2023-11-12"},{"lineNumber":742,"author":{"gitId":"LinWanLeii"},"content":"   \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":743,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":744,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":745,"author":{"gitId":"LinWanLeii"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":746,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":747,"author":{"gitId":"LinWanLeii"},"content":"* 3a. User input invalid command.","lastModifiedDate":"2023-11-12"},{"lineNumber":748,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":749,"author":{"gitId":"LinWanLeii"},"content":"    * 3a1. PharmHub shows an `Invalid Command` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":750,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":751,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":752,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":753,"author":{"gitId":"LinWanLeii"},"content":"* 4a. The status and medicine keyword given does not match with any order.","lastModifiedDate":"2023-11-12"},{"lineNumber":754,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":755,"author":{"gitId":"LinWanLeii"},"content":"    * 4a1. Empty list is shown.","lastModifiedDate":"2023-11-12"},{"lineNumber":756,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":757,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":758,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":759,"author":{"gitId":"LinWanLeii"},"content":"* 4b. User input invalid fields.","lastModifiedDate":"2023-11-12"},{"lineNumber":760,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":761,"author":{"gitId":"LinWanLeii"},"content":"    * 4b1. User input Invalid Prefix.","lastModifiedDate":"2023-11-12"},{"lineNumber":762,"author":{"gitId":"LinWanLeii"},"content":"      * PharmHub shows an `Invalid Command Format` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":763,"author":{"gitId":"LinWanLeii"},"content":"      \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":764,"author":{"gitId":"LinWanLeii"},"content":"    * 4b2. User input Invalid Status.","lastModifiedDate":"2023-11-12"},{"lineNumber":765,"author":{"gitId":"LinWanLeii"},"content":"      * PharmHub shows an `Invalid Status` error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":766,"author":{"gitId":"LinWanLeii"},"content":"        \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":767,"author":{"gitId":"LinWanLeii"},"content":"    * 4b3. User input non-existent medicine keywords. ","lastModifiedDate":"2023-11-12"},{"lineNumber":768,"author":{"gitId":"LinWanLeii"},"content":"      * PharmHub Displays a empty list.","lastModifiedDate":"2023-11-12"},{"lineNumber":769,"author":{"gitId":"LinWanLeii"},"content":"              \u003cbr\u003e**Use case ends**","lastModifiedDate":"2023-11-12"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"timetraveller-123"},"content":"4.  Should be able to hold up to 1000 orders without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-06"},{"lineNumber":777,"author":{"gitId":"-"},"content":"    *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":830,"author":{"gitId":"LinWanLeii"},"content":"### Listing all orders","lastModifiedDate":"2023-11-13"},{"lineNumber":831,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":832,"author":{"gitId":"LinWanLeii"},"content":"1. Test case: `listo`","lastModifiedDate":"2023-11-13"},{"lineNumber":833,"author":{"gitId":"LinWanLeii"},"content":"\u003cbr\u003e Expected: All orders listed in the display list panel. \"Listed all orders\" shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":834,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":835,"author":{"gitId":"LinWanLeii"},"content":"### Finding order(s)","lastModifiedDate":"2023-11-13"},{"lineNumber":836,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":837,"author":{"gitId":"LinWanLeii"},"content":"1. Test case: `findo s/pd` Finding by status short form only \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":838,"author":{"gitId":"LinWanLeii"},"content":"   Expected: All orders with `PENDING` Status will be listed in the display list panel. The number of orders listed shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":839,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":840,"author":{"gitId":"LinWanLeii"},"content":"2. Test case: `findo s/pending` Finding by status full form only \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":841,"author":{"gitId":"LinWanLeii"},"content":"   Expected: All orders with `PENDING` Status will be listed in the display list panel. The number of orders listed shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":842,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":843,"author":{"gitId":"LinWanLeii"},"content":"3. Test case: `findo m/pan` Finding by one medicine keyword only \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":844,"author":{"gitId":"LinWanLeii"},"content":"   Expected: All orders with medicine whose names have `pan` as a substring will be listed in the display list panel. The number of order listed shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":845,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":846,"author":{"gitId":"LinWanLeii"},"content":"4. Test case: `findo m/pan ol` Finding by multiple medicine keyword \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":847,"author":{"gitId":"LinWanLeii"},"content":"   Expected: All orders with medicine whose names have `pan` or `ol`  as a substring will be listed in the display list panel. The number of orders listed shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":848,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":849,"author":{"gitId":"LinWanLeii"},"content":"5. Test case: `findo s/pd m/pan ol` Finding by both status and medicine keywords \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":850,"author":{"gitId":"LinWanLeii"},"content":"   Expected: All orders that has both `PENDING` status and with medicine whose names have `pan` or `ol` as a substring ","lastModifiedDate":"2023-11-13"},{"lineNumber":851,"author":{"gitId":"LinWanLeii"},"content":"    will be listed in the display list panel(both conditions must be fulfilled). The number of orders listed shown in result display box. ","lastModifiedDate":"2023-11-13"},{"lineNumber":852,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":853,"author":{"gitId":"LinWanLeii"},"content":"6. Test case: `findo s/wowow` Invalid Status \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":854,"author":{"gitId":"LinWanLeii"},"content":"   Expected: No orders will be listed in the display list panel. `Invalid Status` error message shown on result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":855,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":856,"author":{"gitId":"LinWanLeii"},"content":"### Adding an order","lastModifiedDate":"2023-11-13"},{"lineNumber":857,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":858,"author":{"gitId":"LinWanLeii"},"content":"1. Adding an order that doesn\u0027t exist(i.e. Unique OrderNumber)","lastModifiedDate":"2023-11-13"},{"lineNumber":859,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":860,"author":{"gitId":"LinWanLeii"},"content":"   1. Prerequisites: List all order using the `listo` command. No order with the order number `1234` should be in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":861,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":862,"author":{"gitId":"LinWanLeii"},"content":"   2. Prerequisites: List all person using the `listp` command. Person base on index that is assigned order to should exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":863,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":864,"author":{"gitId":"LinWanLeii"},"content":"   3. Prerequisites: List all medicine using the `listm` command. Medicine that will be in the order must be in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":865,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":866,"author":{"gitId":"LinWanLeii"},"content":"   4. Prerequisites: Person should not be assigned to medicine they are allergy to.","lastModifiedDate":"2023-11-13"},{"lineNumber":867,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":868,"author":{"gitId":"LinWanLeii"},"content":"   5. Test case: `addo 1 m/pan o/1234` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":869,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order is added. Details of the order shown in the Detail information display.","lastModifiedDate":"2023-11-13"},{"lineNumber":870,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":871,"author":{"gitId":"LinWanLeii"},"content":"   6. Test case: `addo m/pan o/1234` || `addo 1 o/1234` || `addo 1 m/pan` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":872,"author":{"gitId":"LinWanLeii"},"content":"      Expected: No Order is added due to missing details. `Invalid Command Format`shown in the result display.","lastModifiedDate":"2023-11-13"},{"lineNumber":873,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":874,"author":{"gitId":"LinWanLeii"},"content":"   7. Test case: `addo m/` || `addo` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":875,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-11-13"},{"lineNumber":876,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":877,"author":{"gitId":"LinWanLeii"},"content":"2. Adding an order that already exists(i.e. OrderNumber already exist)","lastModifiedDate":"2023-11-13"},{"lineNumber":878,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":879,"author":{"gitId":"LinWanLeii"},"content":"   1. Prerequisites: List all orders using the `listo` command. An order with order number `1234` should be in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":880,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":881,"author":{"gitId":"LinWanLeii"},"content":"   2. Test case: `addo 1 m/pan o/1234` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":882,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order is not added. `Order Already exist` Error message is shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":883,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":884,"author":{"gitId":"LinWanLeii"},"content":"3. Adding an order with medicine the person is allergy to.","lastModifiedDate":"2023-11-13"},{"lineNumber":885,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":886,"author":{"gitId":"LinWanLeii"},"content":"   1. Prerequisites: List all orders using the `listo` command. An order with order number `2222` should not be in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":887,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":888,"author":{"gitId":"LinWanLeii"},"content":"   2. Prerequisites: List all person using the `listp` command. Pick one person with an allergy and take note.","lastModifiedDate":"2023-11-13"},{"lineNumber":889,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":890,"author":{"gitId":"LinWanLeii"},"content":"   3. Test case: `addo 1 m/paracetamol` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":891,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order is not added. `Patient is Allergy` Warning message will be displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":892,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":893,"author":{"gitId":"LinWanLeii"},"content":"   4. Test case: `addo 1 m/paracetamol ia/` (ignore allergy flag `ia`)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":894,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order is added. Details of tht order shown in the Detail information display.","lastModifiedDate":"2023-11-13"},{"lineNumber":895,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":896,"author":{"gitId":"LinWanLeii"},"content":"### Updating the order status","lastModifiedDate":"2023-11-13"},{"lineNumber":897,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":898,"author":{"gitId":"LinWanLeii"},"content":"1. Updating an order status with valid chronological order.","lastModifiedDate":"2023-11-13"},{"lineNumber":899,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":900,"author":{"gitId":"LinWanLeii"},"content":"   1. Prerequisites: List all orders using the `listo` command. The new status should be of a higher chronological order than the old status.","lastModifiedDate":"2023-11-13"},{"lineNumber":901,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":902,"author":{"gitId":"LinWanLeii"},"content":"   2. Test case: old orderStatus `PENDING`, command: `updates 1 s/pr` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":903,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order status updated to `PREPARING`. Details of the updated order is shown in the detail information display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":904,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":905,"author":{"gitId":"LinWanLeii"},"content":"   3. Test case: old orderStatus `PREPARING`, command: `updates 1 s/completed` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":906,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order status updated to `COMPLETED`. Details of the updated order is shown in the detail information display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":907,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":908,"author":{"gitId":"LinWanLeii"},"content":"   4. Test case: old orderStatus `COMPLETED`, command: `updates 1 s/pending` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":909,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order status not updated. `Invalid Chronological Order` error message shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":910,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":911,"author":{"gitId":"LinWanLeii"},"content":"   5. Test case: old orderStatus `COMPLETED`, command: `updates 1 s/pwpw` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":912,"author":{"gitId":"LinWanLeii"},"content":"      Expected: Order status not updated. `Invalid Status` error message shown in result display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":913,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":914,"author":{"gitId":"LinWanLeii"},"content":"### Deleting an order","lastModifiedDate":"2023-11-13"},{"lineNumber":915,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":916,"author":{"gitId":"LinWanLeii"},"content":"1. Deleting an order","lastModifiedDate":"2023-11-13"},{"lineNumber":917,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":918,"author":{"gitId":"LinWanLeii"},"content":"   1. Prerequisites: List all orders using the `listo` command. The order to delete should be in the list shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":919,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":920,"author":{"gitId":"LinWanLeii"},"content":"   2. Test case: `deleteo 1`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":921,"author":{"gitId":"LinWanLeii"},"content":"      Expected: First order is deleted from the list. Details of the deleted order is shown in detail information display box.","lastModifiedDate":"2023-11-13"},{"lineNumber":922,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":923,"author":{"gitId":"LinWanLeii"},"content":"   3. Test case: `deleteo `\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":924,"author":{"gitId":"LinWanLeii"},"content":"      Expected: No order deleted. `Invalid Command Format` error message shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":925,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":926,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":927,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LinWanLeii":523,"HEEaZ":48,"-":325,"joeng03":24,"timetraveller-123":13}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"   1. Run the `seedu.pharmhub.Main` and try a few commands.","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [PharmHub’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":53,"joeng03":2}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"   e.g. `seedu.pharmhub.commons.StringUtilTest`","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"   e.g. `seedu.pharmhub.storage.StorageManagerTest`","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"   e.g. `seedu.pharmhub.logic.LogicManagerTest`","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"-":33,"joeng03":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"## Welcome to PharmHub!","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"***Where Precision Meets Prescription***","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"Pharmhub is a **desktop app for managing patients and their medication orders, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PharmHub can get your patient/ order management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"## Table of Contents","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"1. [Using this Guide](#Using this guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    1. [Person](#person)","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    2. [Order](#order)","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    3. [Status](#status)","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    4. [Medicine](#medicine)","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    5. [Index](#index)","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    6. [Fields](#fields)","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"2. [Application Navigation](#application-navigation)","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"3. [Quick Start](#quick-start)","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"4. [Features](#features)","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"5. [Command Summary](#command-summary)","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"6. [FAQ](#faq)","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"7. [Glossary](#glossary)","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"## Using this guide  ","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"This section provides an introduction to the terminology used in this user guide. ","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"### Person","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"For the entire user guide the term person is used to refer to the patient of which the pharmacist is addressing.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"Persons are the people with whom you track your Orders and information for.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"To create an order with a person, they must first have been added to the app.","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"A person has the following attributes:","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"- Name","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"- Phone number","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"- Email Address","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"- Address","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"- Allergy(If the person has one. Can be one or more)","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"A person is uniquely identified by their name. No two persons can have the same name and names are case-insensitive.","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"### Order","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"An order refers to a purchase of one or more medicines by a particular person in the person list.","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"An Order has the following attributes:","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"- Order Number","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"- Person (Who the order belongs to)","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"- Medicine (What is in the order. Can be one or more)","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"- Status of the order","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"Orders are uniquely identified by their order numbers. No two orders can have the same order number.   ","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"No order containing a medicine that the person is allergic to can be added without a special flag.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"Orders will automatically tag under the \u003cspan style\u003d\"color: red;\"\u003ePENDING\u003c/span\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"Status when added.","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"### Status","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"Status is used to describe the process at which the order is at.","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"Status can only be updated/modified following their chronological order.","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"\u003cspan style\u003d\"background-color: red; border-radius: 20%; padding: 1px;\"\u003ePENDING/PD\u003c/span\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"-\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"\u003cspan style\u003d\"background-color: blue; border-radius: 20%; padding: 1px;\"\u003ePREPARING/PR\u003c/span\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"-\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"\u003cspan style\u003d\"background-color: green; border-radius: 20%; padding: 1px;\"\u003eCOMPLETED/CP\u003c/span\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"-\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"\u003cspan style\u003d\"background-color: black; border-radius: 20%; padding: 1px;\"\u003eCANCELED/CC\u003c/span\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"Status can be identified either in their full form or in their short form as shown above (FullForm/ShortForm). Status are all case-insensitive as well.","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"### Medicine","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"Medicine are objects that can be added to an order when it is being placed for a person.","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"A Medicine has the following attribute:","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"- Full Name of the medication","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"- An optional short form for the medication","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"Medicines are uniquely identified by their full and short form names. No two medicine can have the same names.","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"### Index","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"Many commands rely on index for execution. Index refers to the numbering in the last shown person/order/medicine list.","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"All indices have to be positive integers.","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"As you can refer to the image below index 1 refer to OrderNumber #1 while index 3 refer to OrderNumber #5.","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"![listp](images/listo.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"Note: The Index will be based on the command being called and not the displayed list, ","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"if a command of viewp(view person) is being called, ","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"the index taken will be based on the person list and not this list being shown currently.","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"### Fields","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"* Fields are the different parts of a command.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"e.g. in `editp 1 n/Alex no/penicillin`, there are four fields. Namely, `editp`, `1`, `Alex`, `penicilllin`.    ","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"* Spaces before and after fields will be ignored.","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"If there are multiple spaces between two words in fields, only one space would be retained.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"As such `Alex Yeoh` will produce the same result as `Alex     Yeoh`  ","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"* To input a `/` character in a field, use another `/` before it.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"If there is an odd  number of consecutive `/`, one of them will be ignored.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"timetraveller-123"},"content":"  e.g To input `Roy s/o Balakrishnan`, use `Roy s//o Balakrishnan`","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"The following fields are used for commands:","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"| Field         | Prefix | Format                                                                                                        | Example                                    |","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"timetraveller-123"},"content":"|---------------|--------|---------------------------------------------------------------------------------------------------------------|--------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"| Index         | -      | Must be a positive integer                                                                                    | `1`, `2`, `3`                              |","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"| Keyword       | -      | Must not be empty                                                                                             | `pan`, `Ah Tan s//o Ah Tan Tan`            |","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"timetraveller-123"},"content":"| Name          | n/     | Must only contain alphanumeric, space, dot, slash, \u003cbr/\u003e hyphen and single quote characters. Case insensitive | `Roy s//o Balakrishnan`, `Connell O\u0027Brien` |","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"timetraveller-123"},"content":"| Phone number  | p/     | Must be numeric and be at least 3 digits long                                                                 | `999`, `68741616`                          |","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"timetraveller-123"},"content":"| Email address | e/     | Must be a valid email address                                                                                 | `roy@gmail.com`, `Alex123@outlook.com`     |","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"timetraveller-123"},"content":"| Address       | a/     | Must not be empty                                                                                             | `Sentosa cove`, `Pulau NTU`                |","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"timetraveller-123"},"content":"| Status        | s/     | Must be a valid Status (Refer to [Status](#status))                                                           | `PENDIND`, `Cc`                            |","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"timetraveller-123"},"content":"| Medicine      | m/     | Must not be empty and is not case sensitive.                                                                  | `metformin`, `panadol`                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"timetraveller-123"},"content":"| Allergy       | no/    | Must be a medicine name in PharmHub or its shortform.                                                         | `panadol`, `pan`                           |","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"timetraveller-123"},"content":"| Commands      | -      | Must be the first part of input and is case-insensitive                                                       | `addo`, `listm`                            |","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"LinWanLeii"},"content":"---","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"LinWanLeii"},"content":"## Application Navigation","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"Below shows a guide on how you can navigate around our interactive Graphical User Interface (GUI)","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"LinWanLeii"},"content":"![Navigation](images/navigation.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"LinWanLeii"},"content":"| Component                  | Description                                                 | Remarks                                                          |","lastModifiedDate":"2023-11-04"},{"lineNumber":137,"author":{"gitId":"LinWanLeii"},"content":"|----------------------------|-------------------------------------------------------------|------------------------------------------------------------------|","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"LinWanLeii"},"content":"| Help Button                | Shows URL to our User Guide.                                | -                                                                |","lastModifiedDate":"2023-11-04"},{"lineNumber":139,"author":{"gitId":"LinWanLeii"},"content":"| Command Input Field        | Type commands here and press `Enter` to execute them.       | -                                                                |","lastModifiedDate":"2023-11-04"},{"lineNumber":140,"author":{"gitId":"timetraveller-123"},"content":"| Result Display Box         | Shows the result of the command execution.                  | -                                                                |","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"LinWanLeii"},"content":"| Person Information Display | Shows Detailed information on a person.                     | Displays Name, Email, allergy and Orders under this person.      |","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"LinWanLeii"},"content":"| PersonList                 | Shows a list of person.                                     | List can be filtered by Keywords in the names.                   |","lastModifiedDate":"2023-11-04"},{"lineNumber":143,"author":{"gitId":"LinWanLeii"},"content":"| Person Card                | Shows a particular person with minimal details in the list. | Shows the Name, Allergies, Number, Address and Email.            |","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"LinWanLeii"},"content":"| Order Information Display  | Shows Detailed information on an order.                     | Displays status, Order Number, Person of the order and Medicine. |","lastModifiedDate":"2023-11-04"},{"lineNumber":145,"author":{"gitId":"LinWanLeii"},"content":"| Order List                 | Shows a list of orders.                                     | List can be filtered by Status or Medicine in the order or Both. |","lastModifiedDate":"2023-11-04"},{"lineNumber":146,"author":{"gitId":"LinWanLeii"},"content":"| Order Card                 | Shows a particular order with minimal details in the list.  | Shows Order Number, Name, Address and Medicine.                  |","lastModifiedDate":"2023-11-04"},{"lineNumber":147,"author":{"gitId":"LinWanLeii"},"content":"| Medicine List              | Shows a list of medicine in the system.                     | List can be filtered by Keywords in the medicines.               |","lastModifiedDate":"2023-11-04"},{"lineNumber":148,"author":{"gitId":"LinWanLeii"},"content":"| Medicine Card              | Shows a particular medicine with all the details.           | Shows the Full and Short form of the medicine.                   |","lastModifiedDate":"2023-11-04"},{"lineNumber":149,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":150,"author":{"gitId":"LinWanLeii"},"content":"---","lastModifiedDate":"2023-11-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"timetraveller-123"},"content":"   * Run `java --version` in your command terminal to see the java version.","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"LinWanLeii"},"content":"2. Download the latest `PharmHub.jar` from [here](https://github.com/AY2324S1-CS2103T-W08-4/tp/releases).","lastModifiedDate":"2023-11-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"LinWanLeii"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your PharmHub.","lastModifiedDate":"2023-11-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"LinWanLeii"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar pharmhub.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"LinWanLeii"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"LinWanLeii"},"content":"   * `listp` : Lists all people.","lastModifiedDate":"2023-11-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"LinWanLeii"},"content":"   * `listo` : Lists all order.","lastModifiedDate":"2023-11-04"},{"lineNumber":171,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-04"},{"lineNumber":172,"author":{"gitId":"LinWanLeii"},"content":"   * `listm` : Lists all medicine.","lastModifiedDate":"2023-11-04"},{"lineNumber":173,"author":{"gitId":"LinWanLeii"},"content":"   ","lastModifiedDate":"2023-11-04"},{"lineNumber":174,"author":{"gitId":"LinWanLeii"},"content":"   * `viewp 1` : views in detail index 1 of the person list.(The Displayed list does not have to be person to view person)","lastModifiedDate":"2023-11-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":176,"author":{"gitId":"LinWanLeii"},"content":"   * `viewo 1` : views in detail index 1 of the order list.","lastModifiedDate":"2023-11-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":178,"author":{"gitId":"LinWanLeii"},"content":"   * `addp n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a person named `John Doe` to PharmHub.","lastModifiedDate":"2023-11-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"LinWanLeii"},"content":"   * `deletep 3` : Deletes the 3rd patient shown in the current list.","lastModifiedDate":"2023-11-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"HEEaZ"},"content":"   * `clear` : Deletes all people.","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"LinWanLeii"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-11-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"timetraveller-123"},"content":"  e.g. in `addp n/NAME`, `NAME` is a parameter which can be used as `addp n/John Doe`.","lastModifiedDate":"2023-11-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"HEEaZ"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"HEEaZ"},"content":"### Adding a person: `addp`","lastModifiedDate":"2023-11-03"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"HEEaZ"},"content":"Adds a person to PharmHub.","lastModifiedDate":"2023-10-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"HEEaZ"},"content":"Format: `addp n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG] [no/ALLERGY]…​`","lastModifiedDate":"2023-11-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"joeng03"},"content":"A person can have any number of tags or allergies (including 0)","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"HEEaZ"},"content":"* `addp n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 no/paracetamol no/aspirin`","lastModifiedDate":"2023-11-03"},{"lineNumber":235,"author":{"gitId":"HEEaZ"},"content":"* `addp n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-11-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"HEEaZ"},"content":"### Listing all persons : `listp`","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"HEEaZ"},"content":"Shows an interactive list of all persons in PharmHub.","lastModifiedDate":"2023-11-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"HEEaZ"},"content":"Format: `listp`","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"LinWanLeii"},"content":"![listp](images/listp.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":245,"author":{"gitId":"timetraveller-123"},"content":"### Viewing a person `viewp`","lastModifiedDate":"2023-11-03"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"HEEaZ"},"content":"Displays the specified person with more details in the info panel.","lastModifiedDate":"2023-11-03"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"HEEaZ"},"content":"Format: `viewp INDEX`","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":251,"author":{"gitId":"HEEaZ"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":252,"author":{"gitId":"HEEaZ"},"content":"* `listp` followed by `viewp 2` opens the 2nd person in the list into the info panel.","lastModifiedDate":"2023-11-03"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"HEEaZ"},"content":"### Editing a person : `editp`","lastModifiedDate":"2023-11-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"HEEaZ"},"content":"Edits an existing person in the PharmHub.","lastModifiedDate":"2023-10-06"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"timetraveller-123"},"content":"Format: `editp INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG] [no/ALLERGY]…​ [ia/]`","lastModifiedDate":"2023-11-03"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"timetraveller-123"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the last displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"timetraveller-123"},"content":"* This also edits orders belonging to the person.","lastModifiedDate":"2023-11-03"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"HEEaZ"},"content":"* This command will not be able to add/delete orders to this person","lastModifiedDate":"2023-11-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"joeng03"},"content":"* When editing tags or allergies, the existing tags or allergies of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"joeng03"},"content":"* You can remove all the person’s allergies by typing `no/` without","lastModifiedDate":"2023-10-20"},{"lineNumber":269,"author":{"gitId":"joeng03"},"content":"    specifying any allergies after it.","lastModifiedDate":"2023-10-20"},{"lineNumber":270,"author":{"gitId":"timetraveller-123"},"content":"* If the editing causes the person to be allergic any of the orders belonging to them, warning will be raised.","lastModifiedDate":"2023-11-03"},{"lineNumber":271,"author":{"gitId":"joeng03"},"content":"* The warning can be overridden by adding the `ia/` to the command","lastModifiedDate":"2023-11-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"HEEaZ"},"content":"*  `editp 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-11-03"},{"lineNumber":275,"author":{"gitId":"HEEaZ"},"content":"*  `editp 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-11-03"},{"lineNumber":276,"author":{"gitId":"HEEaZ"},"content":"*  `editp 3 no/` Edits the allergies of the 3rd person to be empty.","lastModifiedDate":"2023-11-03"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"HEEaZ"},"content":"### Locating persons by name: `findp`","lastModifiedDate":"2023-11-03"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"HEEaZ"},"content":"Format: `findp KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-11-03"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"HEEaZ"},"content":"* `findp John` returns `john` and `John Doe`","lastModifiedDate":"2023-11-03"},{"lineNumber":293,"author":{"gitId":"HEEaZ"},"content":"* `findp alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"HEEaZ"},"content":"### Deleting a person : `deletep`","lastModifiedDate":"2023-11-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"HEEaZ"},"content":"Deletes the specified person from PharmHub.","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"HEEaZ"},"content":"Format: `deletep INDEX`","lastModifiedDate":"2023-11-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"timetraveller-123"},"content":"* The index refers to the index number shown in the last displayed person list.","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"timetraveller-123"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"timetraveller-123"},"content":"Deleting a person also deletes all orders corresponding to the person from PharmHub.","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"timetraveller-123"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"joeng03"},"content":"* `listp` followed by `deletep 2` deletes the 2nd person in PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":310,"author":{"gitId":"HEEaZ"},"content":"* `findp Betsy` followed by `deletep 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-11-03"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"timetraveller-123"},"content":"### Adding a new medicine : `addm`","lastModifiedDate":"2023-11-03"},{"lineNumber":313,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":314,"author":{"gitId":"timetraveller-123"},"content":"Adds a new medication into PharmHub.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":316,"author":{"gitId":"timetraveller-123"},"content":"Format: `addm m/MEDICINE_NAME`","lastModifiedDate":"2023-11-03"},{"lineNumber":317,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":318,"author":{"gitId":"timetraveller-123"},"content":"* The given name shouldn\u0027t match the name or short form of any medicine in PharmHub.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"timetraveller-123"},"content":"* Medicine names are case-insensitive.","lastModifiedDate":"2023-11-03"},{"lineNumber":320,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":321,"author":{"gitId":"joeng03"},"content":"Example:","lastModifiedDate":"2023-11-06"},{"lineNumber":322,"author":{"gitId":"joeng03"},"content":"* `addm m/Panadol`","lastModifiedDate":"2023-11-06"},{"lineNumber":323,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":324,"author":{"gitId":"timetraveller-123"},"content":"### Listing all medicines : `listm`","lastModifiedDate":"2023-11-03"},{"lineNumber":325,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":326,"author":{"gitId":"timetraveller-123"},"content":"Shows a list of all medicines in PharmHub.  ","lastModifiedDate":"2023-11-03"},{"lineNumber":327,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":328,"author":{"gitId":"timetraveller-123"},"content":"Format: `listm`","lastModifiedDate":"2023-11-03"},{"lineNumber":329,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":330,"author":{"gitId":"LinWanLeii"},"content":"![listm](images/listm.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":331,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":332,"author":{"gitId":"timetraveller-123"},"content":"### Locating a medicine by name : `findm` ","lastModifiedDate":"2023-11-03"},{"lineNumber":333,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":334,"author":{"gitId":"timetraveller-123"},"content":"Finds all medicines whose name or short form contains any of the given keywords.  ","lastModifiedDate":"2023-11-03"},{"lineNumber":335,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":336,"author":{"gitId":"joeng03"},"content":"Format : `Format: findm KEYWORD [MORE_KEYWORD]…`","lastModifiedDate":"2023-11-06"},{"lineNumber":337,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":338,"author":{"gitId":"timetraveller-123"},"content":"* The search is case-insensitive. e.g `pan` will match `Panadol`","lastModifiedDate":"2023-11-03"},{"lineNumber":339,"author":{"gitId":"timetraveller-123"},"content":"* The medicine name and it\u0027s short form is searched.","lastModifiedDate":"2023-11-03"},{"lineNumber":340,"author":{"gitId":"timetraveller-123"},"content":"* Medicines matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-11-03"},{"lineNumber":341,"author":{"gitId":"timetraveller-123"},"content":"  e.g. `ol en` will return `Panadol`, `Ibuprofen`","lastModifiedDate":"2023-11-03"},{"lineNumber":342,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":343,"author":{"gitId":"timetraveller-123"},"content":"\u003e [!NOTE]  ","lastModifiedDate":"2023-11-13"},{"lineNumber":344,"author":{"gitId":"timetraveller-123"},"content":"\u003e Unlike `findp`, partial words will be matched e.g. `para` will  match `Paracetamol`","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":346,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-06"},{"lineNumber":347,"author":{"gitId":"joeng03"},"content":"* `findm ol`","lastModifiedDate":"2023-11-06"},{"lineNumber":348,"author":{"gitId":"joeng03"},"content":"* `findm ol para`","lastModifiedDate":"2023-11-06"},{"lineNumber":349,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":350,"author":{"gitId":"timetraveller-123"},"content":"### Deleting a medicine : `deletem`","lastModifiedDate":"2023-11-03"},{"lineNumber":351,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":352,"author":{"gitId":"timetraveller-123"},"content":"Deletes the specified medicine from PharmHub.","lastModifiedDate":"2023-11-03"},{"lineNumber":353,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":354,"author":{"gitId":"timetraveller-123"},"content":"Format: `deletem INDEX`","lastModifiedDate":"2023-11-03"},{"lineNumber":355,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":356,"author":{"gitId":"timetraveller-123"},"content":"* Deletes the medicine at the specified `INDEX`.","lastModifiedDate":"2023-11-03"},{"lineNumber":357,"author":{"gitId":"timetraveller-123"},"content":"* The index refers to the index number shown in the last displayed medicine list.","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"timetraveller-123"},"content":"* The index **must be a positive integer** 1, 2, 3, …​ ","lastModifiedDate":"2023-11-03"},{"lineNumber":359,"author":{"gitId":"timetraveller-123"},"content":"* The command will be blocked if there are existing orders with the specified medicine ","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"timetraveller-123"},"content":"  or persons allergic to the specified medicine.  ","lastModifiedDate":"2023-11-03"},{"lineNumber":361,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":362,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":363,"author":{"gitId":"joeng03"},"content":"Example:","lastModifiedDate":"2023-11-06"},{"lineNumber":364,"author":{"gitId":"joeng03"},"content":"* `deletem 2`","lastModifiedDate":"2023-11-06"},{"lineNumber":365,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":366,"author":{"gitId":"timetraveller-123"},"content":"### Adding and Deleting short form : `sfm`","lastModifiedDate":"2023-11-03"},{"lineNumber":367,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":368,"author":{"gitId":"timetraveller-123"},"content":"Adds or Deletes a short form from the specified medicine from PharmHub.","lastModifiedDate":"2023-11-03"},{"lineNumber":369,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":370,"author":{"gitId":"timetraveller-123"},"content":"Format: `sfm INDEX [m/SHORT_FORM] [d/]`","lastModifiedDate":"2023-11-03"},{"lineNumber":371,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":372,"author":{"gitId":"timetraveller-123"},"content":"* Index refers to index of medicine in the last displayed medicine list.","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"timetraveller-123"},"content":"* At least one of `m/` or `d/` should be provided.","lastModifiedDate":"2023-11-13"},{"lineNumber":374,"author":{"gitId":"timetraveller-123"},"content":"* If the `d/` is not provided, the given short form will be added to the medicine at the specified `INDEX`.  ","lastModifiedDate":"2023-11-03"},{"lineNumber":375,"author":{"gitId":"timetraveller-123"},"content":"  * The provided short form must not be empty and must not be same as any existing medicine name or short form in PharmHub.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"timetraveller-123"},"content":"  * Any existing short form of the medicine will be overwritten.","lastModifiedDate":"2023-11-03"},{"lineNumber":377,"author":{"gitId":"timetraveller-123"},"content":"  * After this, the short form can be used interchangeably with the medicine name.  ","lastModifiedDate":"2023-11-03"},{"lineNumber":378,"author":{"gitId":"timetraveller-123"},"content":"* If the `d/` is provided, the short form(if any) of the medicine at the specified `INDEX` will be deleted.  ","lastModifiedDate":"2023-11-03"},{"lineNumber":379,"author":{"gitId":"timetraveller-123"},"content":"  * Any short form provided using `m/` will be ignored.","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":381,"author":{"gitId":"joeng03"},"content":"Example:","lastModifiedDate":"2023-11-06"},{"lineNumber":382,"author":{"gitId":"joeng03"},"content":"* `sfm 1 m/pan`","lastModifiedDate":"2023-11-06"},{"lineNumber":383,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":384,"author":{"gitId":"timetraveller-123"},"content":"### Listing all orders : `listo` ","lastModifiedDate":"2023-11-03"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"HEEaZ"},"content":"Shows an interactive list of all orders in PharmHub.","lastModifiedDate":"2023-11-03"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"HEEaZ"},"content":"Format: `listo`","lastModifiedDate":"2023-11-03"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"LinWanLeii"},"content":"![listo](images/listo.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":391,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":392,"author":{"gitId":"timetraveller-123"},"content":"### Viewing an order : `viewo` ","lastModifiedDate":"2023-11-03"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"HEEaZ"},"content":"Shows the order in the info panel.","lastModifiedDate":"2023-11-03"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"HEEaZ"},"content":"Format: `viewo`","lastModifiedDate":"2023-11-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"timetraveller-123"},"content":"### Adding a new order : `addo` ","lastModifiedDate":"2023-11-03"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"timetraveller-123"},"content":"Adds a new order of the given medication(s) corresponding to a person into the system.","lastModifiedDate":"2023-11-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"joeng03"},"content":"Format: `addo INDEX o/ORDER_NUMBER m/MEDICINE_NAME [m/MEDICINE_NAME]…​ [ia/]`","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":405,"author":{"gitId":"HEEaZ"},"content":"* Orders are created automatically having a `status` of `pending`.","lastModifiedDate":"2023-11-03"},{"lineNumber":406,"author":{"gitId":"HEEaZ"},"content":"* Orders can only be created for a person in the index range, and for a known `medicine`","lastModifiedDate":"2023-11-03"},{"lineNumber":407,"author":{"gitId":"HEEaZ"},"content":"* Orders created for persons with an allergy to any of the medications in the order will raise a warning.","lastModifiedDate":"2023-11-03"},{"lineNumber":408,"author":{"gitId":"joeng03"},"content":"* The warning can be overridden by adding the `ia/` to the command","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":410,"author":{"gitId":"HEEaZ"},"content":"Parameters:","lastModifiedDate":"2023-11-03"},{"lineNumber":411,"author":{"gitId":"timetraveller-123"},"content":"* `INDEX` - index of patient who is ordering the medicine as shown in the last displayed patient list.","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"HEEaZ"},"content":"* `ORDER_NUMBER` - the order number of this order specified by the invoice.","lastModifiedDate":"2023-11-03"},{"lineNumber":413,"author":{"gitId":"HEEaZ"},"content":"* `MEDICINE_NAME` - the name of medicine being ordered.","lastModifiedDate":"2023-11-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":415,"author":{"gitId":"HEEaZ"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":416,"author":{"gitId":"LinWanLeii"},"content":"* `addo 1 o/618457 m/panadol`","lastModifiedDate":"2023-11-03"},{"lineNumber":417,"author":{"gitId":"LinWanLeii"},"content":"* `addo 3 o/438756 m/claritin`","lastModifiedDate":"2023-11-03"},{"lineNumber":418,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":419,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":420,"author":{"gitId":"timetraveller-123"},"content":"### Updating the status of an order : `updates` ","lastModifiedDate":"2023-11-03"},{"lineNumber":421,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":422,"author":{"gitId":"HEEaZ"},"content":"Updates the status of the order to the designated status.","lastModifiedDate":"2023-11-03"},{"lineNumber":423,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":424,"author":{"gitId":"HEEaZ"},"content":"Format: `updates INDEX s/STATUS`","lastModifiedDate":"2023-11-03"},{"lineNumber":425,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":426,"author":{"gitId":"LinWanLeii"},"content":"* Statuses: `Pending (pd) -\u003e Preparing (pr) -\u003e Completed (cp) -\u003e Cancelled (cc)`, in increasing hierarchy","lastModifiedDate":"2023-11-03"},{"lineNumber":427,"author":{"gitId":"HEEaZ"},"content":"* Statuses can only be updated upwards. Once the status of an order progresses to the next stage, it cannot go back.","lastModifiedDate":"2023-11-03"},{"lineNumber":428,"author":{"gitId":"LinWanLeii"},"content":"* Statuses can be updated by skipping the hierarchy. `Pending -\u003e Cancelled`","lastModifiedDate":"2023-11-03"},{"lineNumber":429,"author":{"gitId":"HEEaZ"},"content":"* Shorthands can be used in replacement of the full names of the statuses","lastModifiedDate":"2023-11-03"},{"lineNumber":430,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":431,"author":{"gitId":"LinWanLeii"},"content":"Example: ","lastModifiedDate":"2023-11-03"},{"lineNumber":432,"author":{"gitId":"LinWanLeii"},"content":"* `updates 1 s/completed`","lastModifiedDate":"2023-11-03"},{"lineNumber":433,"author":{"gitId":"LinWanLeii"},"content":"* `updates 1 s/COMPLETED`","lastModifiedDate":"2023-11-03"},{"lineNumber":434,"author":{"gitId":"LinWanLeii"},"content":"* `updates 1 s/cp`","lastModifiedDate":"2023-11-03"},{"lineNumber":435,"author":{"gitId":"LinWanLeii"},"content":"* `updates 1 s/CP`","lastModifiedDate":"2023-11-03"},{"lineNumber":436,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":437,"author":{"gitId":"LinWanLeii"},"content":"### Filtering/Finding Order by status and medicines: `findo`","lastModifiedDate":"2023-11-03"},{"lineNumber":438,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":439,"author":{"gitId":"LinWanLeii"},"content":"Finds orders whose status and medicine satisfies both inputs.","lastModifiedDate":"2023-11-03"},{"lineNumber":440,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":441,"author":{"gitId":"joeng03"},"content":"Format: `findo s/STATUS m/MEDICINE_NAME [m/MEDICINE_NAME]…`","lastModifiedDate":"2023-11-13"},{"lineNumber":442,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":443,"author":{"gitId":"LinWanLeii"},"content":"* The search is case-insensitive. e.g `PANADOL` will match `Panadol`, `COMPLETED` or `CP` will match `Completed`.","lastModifiedDate":"2023-11-03"},{"lineNumber":444,"author":{"gitId":"LinWanLeii"},"content":"* User input can find orders base on either status or medicines or both(but both will have to be satisfied).","lastModifiedDate":"2023-11-03"},{"lineNumber":445,"author":{"gitId":"LinWanLeii"},"content":"* Status can only be `Pending/PD Preparing/PR Completed/CP Cancelled/CC`, any other inputs will be invalid.","lastModifiedDate":"2023-11-03"},{"lineNumber":446,"author":{"gitId":"LinWanLeii"},"content":"* Medicine can be written both in their short form and full form. `pan` will match `Panadol`.","lastModifiedDate":"2023-11-03"},{"lineNumber":447,"author":{"gitId":"LinWanLeii"},"content":"* Multiple Medicine can be used as input separated by a blank space but only one status can be used.","lastModifiedDate":"2023-11-03"},{"lineNumber":448,"author":{"gitId":"LinWanLeii"},"content":"* Orders that contain any one of the medication/Status will be shown.","lastModifiedDate":"2023-11-03"},{"lineNumber":449,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":450,"author":{"gitId":"LinWanLeii"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":451,"author":{"gitId":"LinWanLeii"},"content":"* `findo m/Panadol Ibuprofen` returns any orders with either `Panadol` or `Ibuprofen`.","lastModifiedDate":"2023-11-03"},{"lineNumber":452,"author":{"gitId":"LinWanLeii"},"content":"* `findo s/pd m/Panadol` returns any orders that is both `Pending` and contains `Panadol`.","lastModifiedDate":"2023-11-03"},{"lineNumber":453,"author":{"gitId":"LinWanLeii"},"content":"  ![result for \u0027findo s/pd m/Panadol\u0027](images/findOrder2Input.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":454,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":455,"author":{"gitId":"timetraveller-123"},"content":"### Deleting an order : `deleteo` ","lastModifiedDate":"2023-11-03"},{"lineNumber":456,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":457,"author":{"gitId":"HEEaZ"},"content":"Deletes the specified order from PharmHub.","lastModifiedDate":"2023-11-03"},{"lineNumber":458,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":459,"author":{"gitId":"HEEaZ"},"content":"Format: `deleteo INDEX`","lastModifiedDate":"2023-11-03"},{"lineNumber":460,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":461,"author":{"gitId":"HEEaZ"},"content":"Example: `deleteo 2`","lastModifiedDate":"2023-11-03"},{"lineNumber":462,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":463,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":464,"author":{"gitId":"timetraveller-123"},"content":"### Undoing an action : `undo` ","lastModifiedDate":"2023-11-03"},{"lineNumber":465,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":466,"author":{"gitId":"HEEaZ"},"content":"Undoes the last data-modifying action.","lastModifiedDate":"2023-11-03"},{"lineNumber":467,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":468,"author":{"gitId":"HEEaZ"},"content":"Format: `undo`","lastModifiedDate":"2023-11-03"},{"lineNumber":469,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":470,"author":{"gitId":"HEEaZ"},"content":"* Limited to last 30 actions.","lastModifiedDate":"2023-11-03"},{"lineNumber":471,"author":{"gitId":"HEEaZ"},"content":"* Does not undo Ui views (eg. find, view commands). ","lastModifiedDate":"2023-11-03"},{"lineNumber":472,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":473,"author":{"gitId":"HEEaZ"},"content":"Example: ","lastModifiedDate":"2023-11-03"},{"lineNumber":474,"author":{"gitId":"HEEaZ"},"content":"* `addp` -\u003e `listp` -\u003e `undo` will undo the `addp` command","lastModifiedDate":"2023-11-03"},{"lineNumber":475,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":476,"author":{"gitId":"timetraveller-123"},"content":"### Redoing an action (after an undo) : `redo` ","lastModifiedDate":"2023-11-03"},{"lineNumber":477,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":478,"author":{"gitId":"HEEaZ"},"content":"Negates the effect of the last undo.","lastModifiedDate":"2023-11-03"},{"lineNumber":479,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":480,"author":{"gitId":"HEEaZ"},"content":"Format: `redo`","lastModifiedDate":"2023-11-03"},{"lineNumber":481,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":482,"author":{"gitId":"HEEaZ"},"content":"* The undo command must have been the latest data-modifying command.","lastModifiedDate":"2023-11-03"},{"lineNumber":483,"author":{"gitId":"HEEaZ"},"content":"* Once a non-`undo` data-modifying command is executed, redoing undoes before that non-`undo` command is no longer possible","lastModifiedDate":"2023-11-03"},{"lineNumber":484,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":485,"author":{"gitId":"HEEaZ"},"content":"Example:","lastModifiedDate":"2023-11-03"},{"lineNumber":486,"author":{"gitId":"HEEaZ"},"content":"* `addp` -\u003e `undo` -\u003e `addp` -\u003e `redo`  will throw an error","lastModifiedDate":"2023-11-03"},{"lineNumber":487,"author":{"gitId":"HEEaZ"},"content":"* `addp` -\u003e `undo` -\u003e `listp` -\u003e `redo` will redo the `addp` command successfully","lastModifiedDate":"2023-11-03"},{"lineNumber":488,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":489,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":491,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-11-03"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":493,"author":{"gitId":"HEEaZ"},"content":"Clears all entries from PharmHub.","lastModifiedDate":"2023-11-03"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":495,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-11-03"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-11-03"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":499,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-11-03"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":501,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-11-03"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2023-11-03"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":505,"author":{"gitId":"HEEaZ"},"content":"PharmHub data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-11-03"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":507,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2023-11-03"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":509,"author":{"gitId":"HEEaZ"},"content":"PharmHub data are saved automatically as a JSON file `[JAR file location]/data/pharmhub.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-11-03"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-03"},{"lineNumber":512,"author":{"gitId":"HEEaZ"},"content":"If your changes to the data file makes its format invalid, PharmHub will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-11-03"},{"lineNumber":513,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":516,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":522,"author":{"gitId":"timetraveller-123"},"content":"## Command Summary","lastModifiedDate":"2023-11-13"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"HEEaZ"},"content":"| Action                    | Format, Examples                                                                                                                                                                                |","lastModifiedDate":"2023-11-03"},{"lineNumber":525,"author":{"gitId":"HEEaZ"},"content":"|---------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-03"},{"lineNumber":526,"author":{"gitId":"HEEaZ"},"content":"| **List People**           | `listp`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":527,"author":{"gitId":"HEEaZ"},"content":"| **Find Person**           | `findp KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findp James Jake`                                                                                                                                    |","lastModifiedDate":"2023-11-03"},{"lineNumber":528,"author":{"gitId":"HEEaZ"},"content":"| **View Person**           | `viewp INDEX` \u003cbr\u003e e.g., `viewp 1`                                                                                                                                                              |","lastModifiedDate":"2023-11-03"},{"lineNumber":529,"author":{"gitId":"HEEaZ"},"content":"| **Add Person**            | `addp n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG] [no/ALLERGY]…​` \u003cbr\u003e e.g., `addp n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague no/aspirin` |","lastModifiedDate":"2023-11-03"},{"lineNumber":530,"author":{"gitId":"HEEaZ"},"content":"| **Edit Person**           | `editp INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG] [no/allergy]…​`\u003cbr\u003e e.g.,`editp 2 n/James Lee e/jameslee@example.com`                                                      |","lastModifiedDate":"2023-11-03"},{"lineNumber":531,"author":{"gitId":"HEEaZ"},"content":"| **Delete Person**         | `deletep INDEX`\u003cbr\u003e e.g., `deletep 3`                                                                                                                                                           |","lastModifiedDate":"2023-11-03"},{"lineNumber":532,"author":{"gitId":"HEEaZ"},"content":"| **List Orders**           | `listo`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":533,"author":{"gitId":"HEEaZ"},"content":"| **Find Order**            | `findo [s/STATUS] [m/MEDICINE_NAME]...`\u003cbr\u003e e.g., `findo s/cp m/pen`                                                                                                                            |","lastModifiedDate":"2023-11-03"},{"lineNumber":534,"author":{"gitId":"HEEaZ"},"content":"| **View Order**            | `viewo ORDER_NUMBER` \u003cbr\u003e e.g., `viewo 12345`                                                                                                                                                   |","lastModifiedDate":"2023-11-03"},{"lineNumber":535,"author":{"gitId":"HEEaZ"},"content":"| **Add Order**             | `addo INDEX o/ORDER_NUMBER m/MEDICINE_NAME [m/MEDICINE_NAME]...` \u003cbr\u003e e.g., `addorder 3 o/438756 m/claritin`                                                                                    |","lastModifiedDate":"2023-11-03"},{"lineNumber":536,"author":{"gitId":"HEEaZ"},"content":"| **Update Order Status**   | `updates INDEX s/STATUS`\u003cbr\u003e e.g., `updates s/cancelled`                                                                                                                                        |","lastModifiedDate":"2023-11-03"},{"lineNumber":537,"author":{"gitId":"HEEaZ"},"content":"| **Delete Order**          | `deleteo INDEX`\u003cbr\u003e e.g., `deleteo 3`                                                                                                                                                           |","lastModifiedDate":"2023-11-03"},{"lineNumber":538,"author":{"gitId":"HEEaZ"},"content":"| **List Medicine**         | `listm`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":539,"author":{"gitId":"timetraveller-123"},"content":"| **Find Medicine**         | `findm KEYWORD [MORE_KEYWORDS]`  \u003cbr/\u003e e.g., `findm ol`                                                                                                                                         |","lastModifiedDate":"2023-11-13"},{"lineNumber":540,"author":{"gitId":"timetraveller-123"},"content":"| **Add Medicine**          | `addm m/MEDICINE_NAME`\u003cbr/\u003e e.g., `addm m/panadol`                                                                                                                                              |","lastModifiedDate":"2023-11-13"},{"lineNumber":541,"author":{"gitId":"timetraveller-123"},"content":"| **Delete Medicine**       | `deletem INDEX` \u003cbr/\u003e e.g., `deletem 1`                                                                                                                                                         |","lastModifiedDate":"2023-11-13"},{"lineNumber":542,"author":{"gitId":"timetraveller-123"},"content":"| **Add/Delete Short Form** | `sfm INDEX [m/SHORT_FORM] [d/]` \u003cbr/\u003e e.g., `sfm 1 m/met`                                                                                                                                        |","lastModifiedDate":"2023-11-13"},{"lineNumber":543,"author":{"gitId":"HEEaZ"},"content":"| **Undo**                  | `undo`                                                                                                                                                                                          |","lastModifiedDate":"2023-11-03"},{"lineNumber":544,"author":{"gitId":"HEEaZ"},"content":"| **Redo**                  | `redo`                                                                                                                                                                                          |","lastModifiedDate":"2023-11-03"},{"lineNumber":545,"author":{"gitId":"HEEaZ"},"content":"| **Clear**                 | `clear`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":546,"author":{"gitId":"HEEaZ"},"content":"| **Help**                  | `help`                                                                                                                                                                                          |","lastModifiedDate":"2023-11-03"},{"lineNumber":547,"author":{"gitId":"HEEaZ"},"content":"| **Exit**                  | `exit`                                                                                                                                                                                          |","lastModifiedDate":"2023-11-03"},{"lineNumber":548,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":549,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":550,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-11-13"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":552,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":553,"author":{"gitId":"timetraveller-123"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous PharmHub home folder.","lastModifiedDate":"2023-11-13"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":555,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":557,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-11-13"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":559,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-11-13"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":561,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":563,"author":{"gitId":"timetraveller-123"},"content":"## Glossary","lastModifiedDate":"2023-11-13"},{"lineNumber":564,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":565,"author":{"gitId":"timetraveller-123"},"content":"| Term                 | Meaning                                                                                                               |","lastModifiedDate":"2023-11-13"},{"lineNumber":566,"author":{"gitId":"timetraveller-123"},"content":"|----------------------|-----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":567,"author":{"gitId":"timetraveller-123"},"content":"| **Command Terminal** | A program which allows users to enter commands that the computer processes.                                           |","lastModifiedDate":"2023-11-13"},{"lineNumber":568,"author":{"gitId":"timetraveller-123"},"content":"| **`cd`**             | The command used in command terminal to change directory.                                                             |","lastModifiedDate":"2023-11-13"},{"lineNumber":569,"author":{"gitId":"timetraveller-123"},"content":"| **Gui**              | Graphical User Interface(GUI) is the digital interface that the user interacts with.                                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":570,"author":{"gitId":"timetraveller-123"},"content":"| **Java**             | Java is a widely used programming language and is used in PharmHub.                                                   |","lastModifiedDate":"2023-11-13"},{"lineNumber":571,"author":{"gitId":"timetraveller-123"},"content":"| **Jar**              | Java Archive contains all of the various components that make up a Java application, in this case PharmHub.           |","lastModifiedDate":"2023-11-13"},{"lineNumber":572,"author":{"gitId":"timetraveller-123"},"content":"| **Json**             | JavaScript Object Notation(Json) is a text format for storing data. It is used by PharmHub to store application data.","lastModifiedDate":"2023-11-13"},{"lineNumber":573,"author":{"gitId":"timetraveller-123"},"content":"|  ","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"LinWanLeii":158,"HEEaZ":91,"-":167,"timetraveller-123":136,"joeng03":21}},{"path":"docs/diagrams/AddOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"timetraveller-123"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"participant \":PharmHubParser\" as PharmHubParser LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"participant \"u:AddOrderCommand\" as AddOrderCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"participant \"o:Order\" as Order MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"participant \":Order\" as Order MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"[--\u003e LogicManager : execute(\"addorder 1 m/aspirin o/1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"LogicManager -\u003e PharmHubParser : parseCommand(\"addorder 1 m/aspirin o/1\")","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"activate PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"create AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"PharmHubParser -\u003e AddOrderCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"activate AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"AddOrderCommand --\u003e PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"PharmHubParser --\u003e LogicManager : u","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"deactivate PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"LogicManager -\u003e AddOrderCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"activate AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"Create Order","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"AddOrderCommand -\u003e Order : Order(1,p,aspirin)","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"activate Order","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"Order --\u003e AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"deactivate Order","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"AddOrderCommand -\u003e Model : hasOrder (o)","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"AddOrderCommand -\u003e Model : addOrder(o)","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"Model -\u003e AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"AddOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"AddOrderCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"destroy AddOrderCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"@enduml","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"timetraveller-123":57,"joeng03":7}},{"path":"docs/diagrams/AddoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"participant \":PharmHubParser\" as PharmHubParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"participant \":AddOrderCommandParser\" as AddOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"participant \"u:AddOrderCommand\" as AddOrderCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"participant \"os:OrderStatus\" as OrderStatus MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"participant \"s:Status\" as Status MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"participant \"o:Order\" as Order MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"participant \"oNum:OrderNumber\" as OrderNumber MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"participant \"m:Medicine\" as Medicine MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"participant \"os:OrderStatus\" as OrderStatus MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"participant \"s:Status\" as Status MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"participant \"o:Order\" as Order MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"[--\u003e LogicManager : execute(\"addo 1 m/aspirin o/1\")","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"LogicManager -\u003e PharmHubParser : parseCommand(\"addo 1 m/aspirin o/1000\")","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"activate PharmHubParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"create AddOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"PharmHubParser -\u003e AddOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"activate AddOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommandParser -\u003e ParserUtil : parseOrderNumber(\"1000\")","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"activate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"create OrderNumber","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil -\u003e OrderNumber : new OrderNumber(\"1000\")","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"activate OrderNumber","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"OrderNumber --\u003e ParserUtil : oNum","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"deactivate OrderNumber","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil --\u003e AddOrderCommandParser : oNum","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommandParser -\u003e ParserUtil : parseMedicines(\"aspirin\")","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"activate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"create Medicine","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil -\u003e Medicine : new Medicine(\"aspirin\")","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"activate Medicine","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"Medicine --\u003e ParserUtil : m","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"deactivate Medicine","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil --\u003e AddOrderCommandParser : m","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommandParser --\u003e PharmHubParser","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"deactivate AddOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"PharmHubParser -\u003e AddOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"activate AddOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"create AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommandParser -\u003e AddOrderCommand : AddOrderCommand(1,oNum,m,false)","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"activate AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand -\u003e OrderStatus : OrderStatus.PENDING","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"activate OrderStatus","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"OrderStatus --\u003e AddOrderCommand : os","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"deactivate OrderStatus","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"create Status","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand -\u003e Status : Status(os)","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"activate Status","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"Status --\u003e AddOrderCommand : s","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"deactivate Status","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand --\u003e AddOrderCommandParser : u","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommandParser --\u003e PharmHubParser : u","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"deactivate AddOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"PharmHubParser --\u003e LogicManager : u","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"deactivate PharmHubParser","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"LogicManager -\u003e AddOrderCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"activate AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"Create Order","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand -\u003e Order : Order(oNum,p,m,s)","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"activate Order","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"Order --\u003e AddOrderCommand : o","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"deactivate Order","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand -\u003e Model : hasOrder (o)","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand -\u003e Model : addOrder(o)","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"Model -\u003e AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"activate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"CommandResult --\u003e AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"AddOrderCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"destroy AddOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"LinWanLeii"},"content":"@enduml","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"LinWanLeii":127}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"logic -[LOGIC_COLOR]\u003e storage : savePharmHub(pharmHub)","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":38,"joeng03":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"PharmHub *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"PharmHub *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"joeng03":2}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"if () then ([command commits PharmHub])","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"    :Save PharmHub to","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    pharmHubStateList;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":15,"joeng03":3}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"participant \":PharmHubParser\" as PharmHubParser LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"LogicManager -\u003e PharmHubParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"activate PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"PharmHubParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"DeleteCommandParser --\u003e PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"PharmHubParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"DeleteCommandParser --\u003e PharmHubParser : d","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"DeleteCommandParser -[hidden]-\u003e PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"PharmHubParser --\u003e LogicManager : d","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"deactivate PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"joeng03":10}},{"path":"docs/diagrams/FindoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"participant \":PharmHubParser\" as PharmHubParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"participant \":FindOrderCommandParser\" as FindOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"participant \"cmd:FindOrderCommand\" as FindOrderCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"participant \"s:Status\" as Status MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"participant \"s:Status\" as Status MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"participant \"m:Medicine\" as Medicine MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"[--\u003e LogicManager : execute(\"findo s/pd m/pan ibuprofen)","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"LogicManager -\u003e PharmHubParser : parseCommand(\"findo s/pd m/pan ibuprofen\")","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"activate PharmHubParser","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"create FindOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"PharmHubParser -\u003e FindOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"activate FindOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommandParser --\u003e PharmHubParser","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"deactivate FindOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"PharmHubParser -\u003e FindOrderCommandParser : parse(\"s/pd m/pan ibuprofen\")","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"activate FindOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"alt getValue(PREFIX_STATUS).isPresent()","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommandParser -\u003e ParserUtil : parseStatus(\"pd\")","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"activate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil -\u003e Status : new Status(PENDING)","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"activate Status","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"Status --\u003e ParserUtil : s","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"deactivate Status","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil --\u003e FindOrderCommandParser : s","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"end","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"alt getValue(PREFIX_MEDICINE).isPresent()","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommandParser -\u003e ParserUtil : parseMedicines(\"pan ibuprofen\")","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"activate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil -\u003e Medicine : new Medicine({panadol, ibuprofen})","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"activate Medicine","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"Medicine --\u003e ParserUtil : m","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"deactivate Medicine","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"ParserUtil --\u003e FindOrderCommandParser : m","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"end","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"create FindOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommandParser -\u003e FindOrderCommand : FindOrderCommand(s,m)","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"activate FindOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommand --\u003e FindOrderCommandParser : cmd","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"deactivate FindOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommandParser --\u003e PharmHubParser : cmd","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"deactivate FindOrderCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"PharmHubParser --\u003e LogicManager : cmd","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"deactivate PharmHubParser","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"LogicManager -\u003e FindOrderCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"activate FindOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommand -\u003e Model : updateFilteredOrderList(combined)","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"Model --\u003e FindOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"activate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"CommandResult --\u003e FindOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"FindOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"deactivate FindOrderCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"LogicManager --\u003e[","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"LinWanLeii":98}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"Class PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"LogicManager -right-\u003e\"1\" PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"PharmHubParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"joeng03":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyPharmHub\" as ReadOnlyPharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"Class PharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"PharmHub .up.|\u003e ReadOnlyPharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"Model .left.\u003e ReadOnlyPharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"ModelManager -left-\u003e \"1\" PharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"PharmHub *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":48,"joeng03":6}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"Class PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"HiddenOutside ..\u003e PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"PharmHubParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"PharmHubParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"joeng03":4}},{"path":"docs/diagrams/PharmHubStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"@startuml","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"!include style.puml","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"Class StorageManager","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"package \"PharmHub Storage\" #F4F6F6{","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPharmHubStorage\" as PharmHubStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"Class JsonPharmHubStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"Class JsonSerializablePharmHub","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"Class JsonAdaptedOrder","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"Class JsonAdaptedAllergy","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"Class JsonAdaptedMedicine","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"Class JsonAdaptedStatus","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"StorageManager -up-\u003e \"1\" PharmHubStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"Storage -right-|\u003e PharmHubStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"JsonPharmHubStorage .up.|\u003e PharmHubStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"JsonPharmHubStorage ..\u003e JsonSerializablePharmHub","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"JsonSerializablePharmHub --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"JsonSerializablePharmHub --\u003e \"*\" JsonAdaptedOrder","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"JsonSerializablePharmHub --\u003e \"*\" JsonAdaptedMedicine","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedAllergy","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"JsonAdaptedOrder --\u003e \"1\" JsonAdaptedStatus","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"JsonAdaptedOrder --\u003e \"*\" JsonAdaptedMedicine","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"@enduml","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"LinWanLeii":52}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"package \"PharmHub Storage\" #F4F6F6{","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPharmHubStorage\" as PharmHubStorage","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"Class JsonPharmHubStorage","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"Class JsonSerializablePharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"StorageManager -up-\u003e \"1\" PharmHubStorage","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"Storage -right-|\u003e PharmHubStorage","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"JsonPharmHubStorage .up.|\u003e PharmHubStorage","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"JsonPharmHubStorage ..\u003e JsonSerializablePharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"JsonSerializablePharmHub --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"joeng03":9}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"    class State1 as \"\u003cu\u003eab0:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"    class State2 as \"\u003cu\u003eab1:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    class State3 as \"\u003cu\u003eab2:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"joeng03":3}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"    class State1 as \"\u003cu\u003eab0:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"    class State2 as \"\u003cu\u003eab1:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    class State3 as \"\u003cu\u003eab2:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":20,"joeng03":3}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"    class State1 as \"\u003cu\u003eab0:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"    class State2 as \"\u003cu\u003eab1:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    class State3 as \"\u003cu\u003eab2:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"joeng03":3}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"    class State1 as \"\u003cu\u003eab0:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"    class State2 as \"\u003cu\u003eab1:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    class State3 as \"\u003cu\u003eab2:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"joeng03":3}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"    class State1 as \"\u003cu\u003eab0:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"    class State2 as \"\u003cu\u003eab1:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    class State3 as \"\u003cu\u003eab2:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"joeng03":3}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"    class State1 as \"\u003cu\u003eab0:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"    class State2 as \"\u003cu\u003eab1:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    class State3 as \"\u003cu\u003eab3:PharmHub\u003c/u\u003e\"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"joeng03":3}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"participant \":PharmHubParser\" as PharmHubParser LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"participant \":VersionedPharmHub\" as VersionedPharmHub MODEL_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"LogicManager -\u003e PharmHubParser : parseCommand(undo)","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"activate PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"PharmHubParser -\u003e UndoCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"UndoCommand --\u003e PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"PharmHubParser --\u003e LogicManager : u","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"deactivate PharmHubParser","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"UndoCommand -\u003e Model : undoPharmHub()","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"Model -\u003e VersionedPharmHub : undo()","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"activate VersionedPharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"VersionedPharmHub -\u003e VersionedPharmHub :resetData(ReadOnlyPharmHub)","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"VersionedPharmHub --\u003e Model :","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"deactivate VersionedPharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":40,"joeng03":14}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"Participant \":PharmHubParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":21,"joeng03":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"title: Pharmhub","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W08-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W08-4/tp/actions)","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"**Pharmhub is a desktop application for managing your patient and order details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"* If you are interested in using Pharmhub, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"* If you are interested about developing Pharmhub, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LinWanLeii":5,"-":13}},{"path":"docs/team/heeaz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"title: Immanuel Chia\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"### Project: Pharmhub","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"PharmHub is a desktop application for pharmacists to track orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"**New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"* What it does: allows the user to undo up to 30 previous data-changing commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"* Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them. This is also vital to prevent accidental loss of data, which can have catastrophic consequences given the sensitive nature of medicine order management.","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"* Highlights: This enhancement affects existing commands and commands to be added in future. ","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"* Credits: None","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"**New Feature**: Added the ability to view a person/ medication detail in an info display via `viewp` or `viewo`","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"* What it does: Allows the user to see more details about a person/ order in an expanded info display.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"* Justification: When it comes to patient and medication details, there are a lot of details to capture, and is unfeasible to capture all of the information regarding a patient/ order in a small list card. This detailed view allows users to see condensed details in the listview, and see full details in the info panel, should they wish to. This ability to peg information of a patient/ order onto the info display also gives users greater versatility with navigation, ie. users are able to list all orders *and* the details of a specific patient at the same time.","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"* Highlights: This enhancement affects existing commands and commands to be added in future.","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"* Credits: None","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dheeaz\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"**Project management**:","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"* Managed releases `v1.3` - `v1.4` (2 releases) on GitHub","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"* Managed issues on github: scoping and defining taskings that need to be done, including consolidating PE-D issues","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"* Enhanced listPanel GUI with onclick functionalities [#90](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/90)","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"* Enhanced add, edit and delete feedback by displaying the affected patient/ order on the info display [#90](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/90)","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"**Documentation**:","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"* User Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"* Added documentation for the features `viewp`, `viewo`, `undo`, and `redo`","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"* Developer Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"* TODO","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"**Community**:","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"* PRs reviewed (with non-trivial review comments): [\\#65](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/65), [\\#104](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/104), [\\#102](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/102), [\\#53](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/53)","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"* Reported bugs and suggestions for other teams in the class: None","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"HEEaZ":59}},{"path":"docs/team/joeng03.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"layout: page","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"title: Ng Yin Joe\u0027s Project Portfolio Page","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"### Project: Pharmhub","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"PharmHub - PharmHub is an order and patient tracking application for small remote pharmacist to implement an all-in-one application to improve precision and efficiency.","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"The user interacts with it gusing a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"**New Feature**: Added the ability to add Allergy attribute for Patients","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"* What it does: The new feature enables users to add one or multiple allergies to a patient. Unlike tags, allergies serve as a special attribute that triggers warnings when adding an order for a medicine that the patient is allergic to.","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"* Justification: Allergies are critical health information that can significantly impact patient safety. By incorporating this attribute, pharmacists can proactively avoid prescribing medications that may cause adverse reactions.","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"* Highlights: This enhancement affects existing commands and commands to be added in the future.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"* Credits: None","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"**New Feature**: Added Allergy Alert for Medication Orders","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"* What it does: The newly added feature raises a warning when users attempt to add an order for a medicine that the patient is allergic to. Before confirming the order, the system checks the patient’s allergy profile and alerts the user if any potential allergens are detected. The user can then decide whether to proceed with the order by adding an additional flag in the command.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"* Justification: Patient safety is paramount in healthcare systems. By incorporating this allergy alert, we proactively prevent adverse reactions due to medication allergies. It ensures that healthcare providers make informed decisions while prescribing treatments.","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"* Highlights: This enhancement affects existing commands and commands to be added in the future.","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"* Credits: None","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"**New Feature**: Added the ability to find a person based on their name, phone number, email, tags, and allergies.","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"* What it does: The enhanced person search allows users to find individuals based on various criteria, including their name, phone number, email address, associated tags, and allergies. Name search supports multiple keyword matches, tags and allergies support multiple exact matches, while email and phone require a single exact match. Users can quickly locate relevant patient records or personnel within the system. ","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"* Justification: Efficient person search is essential for streamlined workflows in healthcare, administrative tasks, and other contexts. By expanding the search capabilities, we empower users to retrieve accurate information promptly.","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"* Highlights: This enhancement affects existing commands and commands to be added in the future.","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"* Credits: None","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djoeng03\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"**Testing**:","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"* [Add tests for findo command](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/171)","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"* [Add tests for Medicine model](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/192)","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"**Team-based tasks**:","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"* Renaming of AddressBook to PharmHub","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"**Documentation**:","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"User Guide:","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"* Added documentation for the features `addp`, `editp`","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"* Added examples for the features `addm`, `findm`, `deletem`, `sfm`","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"Developer Guide:","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"* MSS (Main Success Scenario) for Adding Medication Order for a Patient.","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"* Design of Logic Component ","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"* Implementation of Edit Person feature","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"* Manual Testing Guide for Person","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"* Glossary","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"**Community**:","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"* Contributions on the forum: [\\#6](https://github.com/nus-cs2103-AY2324S1/forum/issues/6), [\\#7](https://github.com/nus-cs2103-AY2324S1/forum/issues/7), [\\#46](https://github.com/nus-cs2103-AY2324S1/forum/issues/46), [\\#100](https://github.com/nus-cs2103-AY2324S1/forum/issues/100)","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"* PRs reviewed: [\\#167](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/167), [\\#184](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/184), [\\#185](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/191), [\\#186](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/186), [\\#188](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/191), [\\#191](https://github.com/AY2324S1-CS2103T-W08-4/tp/pull/191)","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"* Reported bugs and suggestions for other teams in the class: [\\#1](https://github.com/joeng03/ped/issues/1), [\\#2](https://github.com/joeng03/ped/issues/2), [\\#3](https://github.com/joeng03/ped/issues/3), [\\#4](https://github.com/joeng03/ped/issues/4), [\\#5](https://github.com/joeng03/ped/issues/5), [\\#6](https://github.com/joeng03/ped/issues/6), [\\#7](https://github.com/joeng03/ped/issues/7)","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"joeng03":84}},{"path":"docs/team/linwanleii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"title: Lin Wan Lei\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"### Project: PharmHub Level 3","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"PharmHub - Level 3 is a desktop pharmHub application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"LinWanLeii":1,"-":43,"joeng03":2}},{"path":"docs/team/timetraveller-123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"timetraveller-123"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"title: Vijayaraghavan Vishnuprasath\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"### Project: Pharmhub","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"[//]: # (PharmHub - Level 3 is a desktop PharmHub application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.)","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (* **New Feature**: Added the ability to undo/redo previous commands.)","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.)","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.)","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*)","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.)","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (* [RepoSense link]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Managed releases `v1.3` - `v1.5rc` \u0026#40;3 releases\u0026#41; on GitHub)","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Updated the GUI color scheme \u0026#40;Pull requests [\\#33]\u0026#40;\u0026#41;, [\\#34]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Wrote additional tests for existing features to increase coverage from 88% to 92% \u0026#40;Pull requests [\\#36]\u0026#40;\u0026#41;, [\\#38]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * User Guide:)","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (        * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Developer Guide:)","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (        * Added implementation details of the `delete` feature.)","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"To be added soon...","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"[//]: # ()","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"[//]: # (    * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"timetraveller-123":102,"joeng03":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"This command allows users of the PharmHub application to add optional remarks to people in their pharmHub and edit it if required. The command should have the following format:","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":" * Changes the remark of an existing person in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `PharmHubParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"joeng03"},"content":"Create a `RemarkCommandParser` class in the `seedu.pharmhub.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"joeng03"},"content":":information_source: Don’t forget to update `PharmHubParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-11-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"joeng03"},"content":"Create a new `Remark` in `seedu.pharmhub.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"joeng03"},"content":"Simply add the following to [`seedu.pharmhub.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-11-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-11-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2023-11-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"joeng03"},"content":"PharmHub stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2023-11-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"joeng03"},"content":":exclamation: You must delete PharmHub’s storage file located at `/data/pharmHub.json` before running it! Not doing so will cause PharmHub to default to an empty pharmHub!","lastModifiedDate":"2023-11-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2023-11-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2023-11-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2023-11-09"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2023-11-09"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"joeng03"},"content":"This concludes the tutorial for adding a new `Command` to PharmHub.","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"-":386,"joeng03":13}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"The `address` field in `Person` is actually an instance of the `seedu.pharmhub.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"**`invalidPersonPharmHub.json`:**","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":110,"joeng03":2}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.pharmhub.logic.Logic`.","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"A quick look at the `seedu.pharmhub.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"        Command command \u003d PharmHubParser.parseCommand(commandText);","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"            storage.savePharmHub(model.getPharmHub());","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"joeng03"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `PharmHubParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"joeng03"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.savePharmHub(model.getPharmHub())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"joeng03"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonPharmHub#savePharmHub()` method which calls the `JsonSerializablePharmHub` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"joeng03"},"content":"    **`JsonSerializablePharmHub` constructor:**","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"joeng03"},"content":"     * Converts a given {@code ReadOnlyPharmHub} into this class for Jackson use.","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"joeng03"},"content":"     * {@code JsonSerializablePharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"joeng03"},"content":"    public JsonSerializablePharmHub(ReadOnlyPharmHub source) {","lastModifiedDate":"2023-11-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"joeng03"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializablePharmHub`.","lastModifiedDate":"2023-11-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"joeng03"},"content":"    3.  Save the PharmHub in the CSV format instead","lastModifiedDate":"2023-11-09"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"joeng03"},"content":"    6.  Add a new entity to PharmHub","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"-":287,"joeng03":14}},{"path":"src/main/java/seedu/pharmhub/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.FileUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"joeng03":4,"-":69}},{"path":"src/main/java/seedu/pharmhub/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"joeng03":2,"-":39}},{"path":"src/main/java/seedu/pharmhub/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.Config;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.Version;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ConfigUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.StringUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Logic;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.LogicManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.util.SampleDataUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.JsonPharmHubStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.PharmHubStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.Storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.StorageManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.UserPrefsStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.ui.Ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.ui.UiManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PharmHub ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"        PharmHubStorage pharmHubStorage \u003d new JsonPharmHubStorage(userPrefs.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"        storage \u003d new StorageManager(pharmHubStorage, userPrefsStorage);","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s PharmHub and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"     * The data from the sample PharmHub will be used instead if {@code storage}\u0027s PharmHub is not found,","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"     * or an empty PharmHub will be used instead if errors occur when reading {@code storage}\u0027s PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        logger.info(\"Using data file : \" + storage.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        Optional\u003cReadOnlyPharmHub\u003e pharmHubOptional;","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        ReadOnlyPharmHub initialData;","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"            pharmHubOptional \u003d storage.readPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"            if (!pharmHubOptional.isPresent()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"                logger.info(\"Creating a new data file \" + storage.getPharmHubFilePath()","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"                        + \" populated with a sample PharmHub.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"            initialData \u003d pharmHubOptional.orElseGet(SampleDataUtil::getSamplePharmHub);","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"            logger.warning(\"Data file at \" + storage.getPharmHubFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"                    + \" Will be starting with an empty PharmHub.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"            initialData \u003d new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"joeng03"},"content":"        logger.info(\"Starting PharmHub \" + MainApp.VERSION);","lastModifiedDate":"2023-11-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"joeng03"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping PharmHub ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":43,"-":143}},{"path":"src/main/java/seedu/pharmhub/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":2,"-":64}},{"path":"src/main/java/seedu/pharmhub/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    private static final double DEFAULT_HEIGHT \u003d 678;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    private static final double DEFAULT_WIDTH \u003d 1069;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HEEaZ":2,"joeng03":2,"-":78}},{"path":"src/main/java/seedu/pharmhub/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    private static final String LOG_FILE \u003d \"pharmHub.log\";","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":2,"-":104}},{"path":"src/main/java/seedu/pharmhub/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":1,"-":120}},{"path":"src/main/java/seedu/pharmhub/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core.index;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"joeng03":2,"-":67}},{"path":"src/main/java/seedu/pharmhub/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"joeng03":1,"-":10}},{"path":"src/main/java/seedu/pharmhub/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":1,"-":20}},{"path":"src/main/java/seedu/pharmhub/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.MainApp;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joeng03":2,"-":40}},{"path":"src/main/java/seedu/pharmhub/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":1,"-":34}},{"path":"src/main/java/seedu/pharmhub/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.Config;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"joeng03":3,"-":20}},{"path":"src/main/java/seedu/pharmhub/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":1,"-":82}},{"path":"src/main/java/seedu/pharmhub/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":3,"-":141}},{"path":"src/main/java/seedu/pharmhub/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"     * Returns a string representation of an unmodifiableSet, as a comma separated string of the objects in","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"     * the set","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"     * @param set to be converted to String","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"     * @return Comma separated string","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"    public static String setToStr(Set\u003c? extends Object\u003e set) {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"        for (Object o : set) {","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"            builder.append(o.toString()).append(\"  \");","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"        if (builder.length() \u003e 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"            return builder.substring(0, builder.length() - 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"            return \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HEEaZ":20,"joeng03":2,"-":66}},{"path":"src/main/java/seedu/pharmhub/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"joeng03":1,"-":52}},{"path":"src/main/java/seedu/pharmhub/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.CommandResult;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"     * Returns the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"     * @see seedu.pharmhub.model.Model#getPharmHub()","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    ReadOnlyPharmHub getPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    /** Returns an unmodifiable view of the filtered list of orders */","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    /** Returns an unmodifiable view of the filtered list of medicines */","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"    ObservableList\u003cMedicine\u003e getFilteredMedicineList();","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"     * Returns the user prefs\u0027 PharmHub file path.","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"    Path getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"HEEaZ":3,"joeng03":14,"-":38,"timetraveller-123":3}},{"path":"src/main/java/seedu/pharmhub/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.Command;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.CommandResult;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.PharmHubParser;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.Storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    private final PharmHubParser pharmHubParser;","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        pharmHubParser \u003d new PharmHubParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        Command command \u003d pharmHubParser.parseCommand(commandText);","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"            storage.savePharmHub(model.getPharmHub());","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"    public ReadOnlyPharmHub getPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"        return model.getPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"    public ObservableList\u003cMedicine\u003e getFilteredMedicineList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"        return model.getFilteredMedicineList();","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"    public Path getPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"        return model.getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"HEEaZ":4,"joeng03":22,"-":69,"timetraveller-123":5}},{"path":"src/main/java/seedu/pharmhub/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.StringUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.Prefix;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_INVALID_MEDICINE_DISPLAYED_INDEX \u003d \"The medicine index provided is invalid\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_MEDICINES_LISTED_OVERVIEW \u003d \"%1$d medicines listed!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MESSAGE_ORDERS_LISTED_OVERVIEW \u003d \"%1$d orders listed!\";","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_ALLERGIC_TO_MEDICINE \u003d \"Warning: This patient is allergic to this medicine! Add\"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"            + \" \u0027ia/\u0027 (ignore allergy) to the end of the command to add this medicine to the order anyway.\";","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_NO_ORDER_WITH_GIVEN_ORDER_NUMBER \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"            \"There is no order with %1$s as order number.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_INVALID_MEDICINE \u003d \"Medicine \u0027%1$s\u0027 does not exist. Use \u0027addm\u0027 to add a new\"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"            + \" medicine to PharmHub\";","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_NO_VALID_PREVIOUS_STATE \u003d \"No previous state to revert to\";","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        return person.getName().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"     * Formats the {@code order} for display to the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"    public static String format(Order order) {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        return order.getOrderNumber().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"     * Formats the {@code medicine} for display to the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"    public static String format(Medicine medicine) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        return medicine.getMedicineName().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"    public static String formatOrder(Order order) {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"        builder.append(order.getOrderNumber())","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"                .append(\"; Person Name: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"                .append(order.getPerson().getName())","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"                .append(\"; Medicines: \")","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"                .append(StringUtil.setToStr(order.getMedicines()))","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"                .append(order.getStatus());","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"    public static String formatStatus(Order order) {","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"        builder.append(\" Order Number: \" + order.getOrderNumber())","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"                .append(\"; Updated to Status: \")","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"                .append(order.getStatus());","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LinWanLeii":11,"HEEaZ":17,"joeng03":9,"-":37,"timetraveller-123":29}},{"path":"src/main/java/seedu/pharmhub/logic/commands/AddMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":" * A class which represents the adding of a medicine.","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"public class AddMedicineCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    public static final String COMMAND_WORD \u003d \"addm\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds the given medicine \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"            + \"Parameters:  \"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_MEDICINE_NAME + \"MEDICINE_NAME (Full name of Medicine) \\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_MEDICINE_NAME + \"Panadol\";","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New medicine added: %1$s\";","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_DUPLICATE_MEDICINE \u003d \"Medicine named \u0027%1$s\u0027 already exists in PharmHub\";","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    private final Medicine toAdd;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"     * Creates an AddMedicineCommand to add the specified {@code Medicine}","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    public AddMedicineCommand(Medicine medicine) {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        toAdd \u003d medicine;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        if (model.hasMedicine(toAdd)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_DUPLICATE_MEDICINE, toAdd.getMedicineName()));","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        model.addMedicine(toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        assert model.hasMedicine(toAdd) : \"Medicine should be added to model\";","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof AddMedicineCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"        AddMedicineCommand otherAddCommand \u003d (AddMedicineCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"HEEaZ":6,"joeng03":11,"timetraveller-123":62}},{"path":"src/main/java/seedu/pharmhub/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ORDER_NUMBER;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":" * A class which represents the adding of order command.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"addo\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an order to the person identified \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"            + \"by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_ORDER_NUMBER + \"ORDER_NUMBER \"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_MEDICINE_NAME + \"MEDICINE_NAME \"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"            + \"[\" + PREFIX_MEDICINE_NAME + \"MORE_MEDICINE_NAMES]... \\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_ORDER_NUMBER + \"91234567 \"","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_MEDICINE_NAME + \"panadol \"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_MEDICINE_NAME + \"ibu\";","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: #%1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"Order number \u0027%1$s\u0027 already exists in PharmHub\";","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"    private final OrderNumber orderNumber;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"    private final Set\u003cMedicine\u003e medicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"    private final Boolean ignoreAllergy;","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"    private final Status orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"     * @param index        of the person in the filtered person to edit.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"     * @param orderNumber  of the order.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"     * @param medicines    the set of medicines for this order","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"    public AddOrderCommand(Index index, OrderNumber orderNumber, Set\u003cMedicine\u003e medicines, Boolean ignoreAllergy) {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"        requireAllNonNull(index, orderNumber, medicines);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        this.orderNumber \u003d orderNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        this.medicines \u003d medicines;","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"        this.ignoreAllergy \u003d ignoreAllergy;","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"        this.orderStatus \u003d new Status(Status.OrderStatus.PENDING);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cMedicine\u003e convertedMedicines \u003d CommandUtil.getModelMedicine(model, medicines);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"        Order toAdd \u003d new Order(orderNumber, person, convertedMedicines, orderStatus);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"        if (model.hasOrder(toAdd)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_DUPLICATE_ORDER, orderNumber));","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"        if (person.isAllergicToAny(convertedMedicines) \u0026\u0026 !ignoreAllergy) {","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(Messages.MESSAGE_ALLERGIC_TO_MEDICINE);","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"        model.addOrder(toAdd);","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"        assert model.hasOrder(toAdd) : \"Order should be added to model\";","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)), toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof AddOrderCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"        AddOrderCommand otherAddCommand \u003d (AddOrderCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"        return index.equals(otherAddCommand.index)","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"                \u0026\u0026 orderNumber.equals(otherAddCommand.orderNumber)","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"                \u0026\u0026 medicines.equals(otherAddCommand.medicines)","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"                \u0026\u0026 orderStatus.equals(otherAddCommand.orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"LinWanLeii":5,"HEEaZ":22,"joeng03":20,"timetraveller-123":67}},{"path":"src/main/java/seedu/pharmhub/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":" * Adds a person to the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to PharmHub. \"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Person with name \u0027%1$s\u0027 already exists in PharmHub\";","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_DUPLICATE_PERSON, toAdd.getName()));","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        Set\u003cMedicine\u003e allergyMedicines \u003d toAdd.getAllergies().stream()","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"                .map(Allergy::getAllery).collect(Collectors.toSet());","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cMedicine\u003e convertedMedicines \u003d CommandUtil.getModelMedicine(model, allergyMedicines);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"        Set\u003cAllergy\u003e convertedAllergies \u003d convertedMedicines.stream().map(Allergy::new).collect(Collectors.toSet());","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        Person newPerson \u003d new Person(toAdd.getName(), toAdd.getPhone(), toAdd.getEmail(), toAdd.getAddress(),","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"                                    toAdd.getTags(), convertedAllergies, new HashSet\u003c\u003e());","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        model.addPerson(newPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        assert model.hasPerson(newPerson) : \"Person should be added to model\";","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(newPerson)), newPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"        AddPersonCommand otherAddCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HEEaZ":13,"joeng03":18,"-":61,"timetraveller-123":14}},{"path":"src/main/java/seedu/pharmhub/logic/commands/AddShortFormCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_DELETE_SHORT_FORM;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_MEDICINES;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":" * A class which represents the adding of a short form to a medicine.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"public class AddShortFormCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    public static final String COMMAND_WORD \u003d \"sfm\";","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the short form for the Medicine identified \"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"            + \"by the index number used in the displayed medicine list.\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"            + \"Add the tag \u0027\" + PREFIX_DELETE_SHORT_FORM + \"\u0027 to delete the current short form for the medicine\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"            + \"[\" + PREFIX_MEDICINE_NAME + \"SHORT_FORM] \"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"            + \"[\" + PREFIX_DELETE_SHORT_FORM + \"]\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_MEDICINE_NAME + \"pan\";","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_ADD_SHORT_FORM_SUCCESS \u003d \"Added Short From: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_DELETE_SHORT_FORM_SUCCESS \u003d \"Deleted Short From: %1$s\";","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_DUPLICATE_SHORT_FORM \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"            \"This short form/medicine already exists in the PharmHub.\";","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    private final Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    private final Medicine medicine;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"     * Creates an AddShortFormCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"    public AddShortFormCommand(Index index, Medicine medicine) {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        this.medicine \u003d medicine;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"     * Creates an AddShortForm Command","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"    public AddShortFormCommand(Index index) {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        medicine \u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cMedicine\u003e lastShownList \u003d model.getFilteredMedicineList();","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEDICINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"        if (medicine \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"            Medicine medicineToAddShortForm \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"            Medicine newMedicine \u003d new Medicine(medicineToAddShortForm.getMedicineName(), \"\");","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"            model.setMedicine(medicineToAddShortForm, newMedicine);","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"            model.updateFilteredMedicineList(PREDICATE_SHOW_ALL_MEDICINES);","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_SHORT_FORM_SUCCESS, Messages.format(newMedicine)));","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"        if (model.hasMedicine(medicine)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SHORT_FORM);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicineToAddShortForm \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        Medicine newMedicine \u003d new Medicine(medicineToAddShortForm.getMedicineName(), medicine.getMedicineName());","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"        model.setMedicine(medicineToAddShortForm, newMedicine);","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredMedicineList(PREDICATE_SHOW_ALL_MEDICINES);","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_SHORT_FORM_SUCCESS, Messages.format(newMedicine)));","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof AddShortFormCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"        AddShortFormCommand otherCommand \u003d (AddShortFormCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"        return index.equals(otherCommand.index)","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"                \u0026\u0026 medicine.equals(otherCommand.medicine);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"timetraveller-123"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"medicine\", medicine)","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"                .toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":6,"joeng03":11,"timetraveller-123":100}},{"path":"src/main/java/seedu/pharmhub/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":" * Clears the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"PharmHub has been cleared!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"        model.clearPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"        assert model.getPharmHub().getPersonList().isEmpty() : \"PharmHub PersonList should be empty\";","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"        assert model.getPharmHub().getMedicineList().isEmpty() : \"PharmHub MedicineList should be empty\";","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"        assert model.getPharmHub().getOrderList().isEmpty() : \"PharmHub OrderList should be empty\";","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":9,"-":17}},{"path":"src/main/java/seedu/pharmhub/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":3,"-":17}},{"path":"src/main/java/seedu/pharmhub/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.InfoObject;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"     * Specifies the effects that commands will have on the list panel.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    public enum ListPanelEffects {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        NO_EFFECT,","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        PERSON,","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"        ORDER,","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"        MEDICINE","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    /** Effects on listPanelView */","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    private final ListPanelEffects listPanelEffects;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    /** Info object to be displayed */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"    private final InfoObject infoObject;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"                         ListPanelEffects listPanelEffects, InfoObject infoObject) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        this.listPanelEffects \u003d listPanelEffects;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        this.infoObject \u003d infoObject;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        this(feedbackToUser, false, false, ListPanelEffects.NO_EFFECT, null);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult(String feedbackToUser, ListPanelEffects listPanelEffects) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"        this(feedbackToUser, false, false, listPanelEffects, null);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        this(feedbackToUser, showHelp, exit, ListPanelEffects.NO_EFFECT, null);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult(String feedbackToUser, InfoObject infoObject) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        this(feedbackToUser, false, false, ListPanelEffects.NO_EFFECT, infoObject);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"    public ListPanelEffects getListPanelEffects() {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"        return listPanelEffects;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"    public InfoObject getInfoObject() {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"        return infoObject;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"    public boolean hasInfoObject() {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        return infoObject !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"        if (infoObject \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"            if (otherCommandResult.infoObject !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"            if (!infoObject.equals(otherCommandResult.infoObject)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"                \u0026\u0026 listPanelEffects \u003d\u003d otherCommandResult.listPanelEffects;","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, listPanelEffects, infoObject);","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"HEEaZ"},"content":"                .add(\"listPanelEffects\", listPanelEffects)","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"                .add(\"infoObject\", infoObject)","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HEEaZ":59,"joeng03":3,"-":76,"timetraveller-123":2}},{"path":"src/main/java/seedu/pharmhub/logic/commands/CommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":" * A class which contains utility methods for commands.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"public class CommandUtil {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"     * Converts the given set of medicines to another set of medicines with medicine short forms expanded to","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"     * the full name of the medicine as it is in the given model.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"     * Throws command exception if the given medicine name or its short form cannot be found in the given model.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    public static Set\u003cMedicine\u003e getModelMedicine(Model model, Set\u003cMedicine\u003e medicines) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cMedicine\u003e convertedMedicines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"            Optional\u003cMedicine\u003e m \u003d model.getMedicine(medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"            if (m.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"                throw new CommandException(","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"                        String.format(Messages.MESSAGE_INVALID_MEDICINE, medicine.getMedicineName()));","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"            convertedMedicines.add(m.get());","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        return convertedMedicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"HEEaZ":2,"joeng03":5,"timetraveller-123":27}},{"path":"src/main/java/seedu/pharmhub/logic/commands/DeleteMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":" * Deletes a medicine identified using it\u0027s displayed index from the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"public class DeleteMedicineCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    public static final String COMMAND_WORD \u003d \"deletem\";","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"            + \": Deletes the medicine identified by the index number used in the displayed medicine list.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_DELETE_MEDICINE_SUCCESS \u003d \"Deleted Medicine: %1$s\";","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_DELETE_MEDICINE_FAILURE \u003d \"Unable to delete medicine \u0027%1$s\u0027\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"            + \"Existing orders or allergies with given medicine must be deleted before medicine can be deleted. \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"            + \"Use \u0027\" + ListPeopleCommand.COMMAND_WORD + \"\u0027 or \u0027\" + ListOrderCommand.COMMAND_WORD + \"\u0027 commands to \"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"            + \"find out affected orders or allergies\";","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    private final Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    public DeleteMedicineCommand(Index index) {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cMedicine\u003e medicineList \u003d model.getFilteredMedicineList();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"        if (index.getZeroBased() \u003e\u003d medicineList.size()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEDICINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003e\u003d 0 : \"Index should be positive\";","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003c medicineList.size() : \"Index should be within bounds of medicine list\";","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicine \u003d medicineList.get(index.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredOrderList(Model.PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"        if (model.getFilteredPersonList().stream().anyMatch(x -\u003e x.isAllergicTo(medicine))","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"            || model.getFilteredOrderList().stream().anyMatch(x -\u003e x.getMedicines().contains(medicine))) {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_MEDICINE_FAILURE, Messages.format(medicine)));","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        model.deleteMedicine(medicine);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"        assert !model.hasMedicine(medicine) : \"Medicine should be deleted from model\";","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEDICINE_SUCCESS, Messages.format(medicine)));","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof DeleteMedicineCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand otherDeleteCommand \u003d (DeleteMedicineCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"        return index.equals(otherDeleteCommand.index);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"targetIndex\", index)","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"                .toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":4,"joeng03":14,"timetraveller-123":71}},{"path":"src/main/java/seedu/pharmhub/logic/commands/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":" * Deletes an order identified using it\u0027s displayed index from the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"public class DeleteOrderCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    public static final String COMMAND_WORD \u003d \"deleteo\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Order: #%1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    private final Index index;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    public DeleteOrderCommand(Index index) {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cOrder\u003e orderList \u003d model.getFilteredOrderList();","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"        if (index.getZeroBased() \u003e\u003d orderList.size()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003e\u003d 0 : \"Index should be positive\";","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003c orderList.size() : \"Index should be within bounds of order list\";","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        Order order \u003d orderList.get(index.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        model.deleteOrder(order);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        assert !model.hasOrder(order) : \"Order should be deleted from model\";","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, Messages.format(order)), order);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof DeleteOrderCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand otherDeleteOrderCommand \u003d (DeleteOrderCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        return index.equals(otherDeleteOrderCommand.index);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"targetIndex\", index)","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"HEEaZ":2,"joeng03":15,"timetraveller-123":62}},{"path":"src/main/java/seedu/pharmhub/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":" * Deletes a person identified using it\u0027s displayed index from the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"deletep\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"        assert targetIndex.getZeroBased() \u003e\u003d 0 : \"Index should be positive\";","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        assert targetIndex.getZeroBased() \u003c lastShownList.size() : \"Index should be within bounds of person list\";","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"        assert !model.hasPerson(personToDelete) : \"Person should be deleted from model\";","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)), personToDelete);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand otherDeleteCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HEEaZ":7,"joeng03":14,"-":55}},{"path":"src/main/java/seedu/pharmhub/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.CollectionUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":" * Edits the details of an existing person in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"editp\";","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Person with name \u0027%1$s\u0027 already exists in PharmHub.\";","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_CONFLICTING_ORDERS \u003d \"Warning: Person\u0027s new allergies conflict with \"","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"            + \"existing orders. Add \u0027ia/\u0027 (ignore allergy) to the end of the command to add this medicine to the \"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"            + \"order anyway. \";","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"    private final boolean ignoreAllergyOrderConflicts;","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"                             boolean ignoreAllergyOrderConflicts) {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"        this.ignoreAllergyOrderConflicts \u003d ignoreAllergyOrderConflicts;","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003e\u003d 0 : \"Index should be positive\";","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003c lastShownList.size() : \"Index should be within bounds of person list\";","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON, editedPerson.getName()));","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cMedicine\u003e allergyMedicines \u003d new HashSet\u003c\u003e(editedPerson.getAllergies().stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"                .map(Allergy::getAllery).collect(Collectors.toList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cMedicine\u003e convertedMedicines \u003d CommandUtil.getModelMedicine(model, allergyMedicines);","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cAllergy\u003e convertedAllergies \u003d new HashSet\u003c\u003e(convertedMedicines.stream().map(Allergy::new)","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"        Person newPerson \u003d new Person(editedPerson.getName(), editedPerson.getPhone(), editedPerson.getEmail(),","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"                                       editedPerson.getAddress(), editedPerson.getTags(), convertedAllergies,","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"                                        editedPerson.getOrders());","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"        if (!ignoreAllergyOrderConflicts \u0026\u0026 newPerson.hasOrderConflicts()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(MESSAGE_CONFLICTING_ORDERS);","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"        model.setPerson(personToEdit, newPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"joeng03"},"content":"        assert model.hasPerson(newPerson) : \"New Person data should be added into model\";","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"timetraveller-123"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(newPerson)), newPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"joeng03"},"content":"        Set\u003cAllergy\u003e updatedAllergies \u003d editPersonDescriptor.getAllergies().orElse(personToEdit.getAllergies());","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"        Set\u003cOrder\u003e orders \u003d personToEdit.getOrders();","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"HEEaZ"},"content":"                updatedAddress, updatedTags, updatedAllergies, orders);","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand otherEditCommand \u003d (EditPersonCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"joeng03"},"content":"        private Set\u003cAllergy\u003e allergies;","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"joeng03"},"content":"            setAllergies(toCopy.allergies);","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"joeng03"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, allergies);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"joeng03"},"content":"        /**","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"joeng03"},"content":"         * Sets {@code allergies} to this object\u0027s {@code allergies}.","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"joeng03"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"joeng03"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"joeng03"},"content":"        public void setAllergies(Set\u003cAllergy\u003e allergies) {","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"joeng03"},"content":"            this.allergies \u003d (allergies !\u003d null) ? new HashSet\u003c\u003e(allergies) : null;","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":247,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"joeng03"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"joeng03"},"content":"         * Returns an unmodifiable allergy set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-14"},{"lineNumber":260,"author":{"gitId":"joeng03"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-14"},{"lineNumber":261,"author":{"gitId":"joeng03"},"content":"         * Returns {@code Optional#empty()} if {@code allergies} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":262,"author":{"gitId":"joeng03"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":263,"author":{"gitId":"joeng03"},"content":"        public Optional\u003cSet\u003cAllergy\u003e\u003e getAllergies() {","lastModifiedDate":"2023-10-14"},{"lineNumber":264,"author":{"gitId":"joeng03"},"content":"            return (allergies !\u003d null) ? Optional.of(Collections.unmodifiableSet(allergies)) : Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":265,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":266,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":283,"author":{"gitId":"joeng03"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"joeng03"},"content":"                    \u0026\u0026 Objects.equals(allergies, otherEditPersonDescriptor.allergies);","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"joeng03"},"content":"                    .add(\"allergies\", allergies)","lastModifiedDate":"2023-10-16"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"HEEaZ":22,"joeng03":54,"-":210,"timetraveller-123":13}},{"path":"src/main/java/seedu/pharmhub/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting PharmHub as requested ...\";","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"                MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"HEEaZ":2,"joeng03":3,"-":15}},{"path":"src/main/java/seedu/pharmhub/logic/commands/FindMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":" * Finds and lists all medicines in PharmHub whose name contains the given keyword as a substring.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"public class FindMedicineCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    public static final String COMMAND_WORD \u003d \"findm\";","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all medicines whose names contain \"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"            + \"the given substring (case insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]... \\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"            + \"Example: \" + COMMAND_WORD + \" ol\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    private final String[] keyWords;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    public FindMedicineCommand(String... keyWords) {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        this.keyWords \u003d keyWords;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        Predicate\u003cMedicine\u003e predicate \u003d m -\u003e Stream.of(keyWords).anyMatch(x -\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"                m.getMedicineName().toLowerCase().contains(x.toLowerCase())","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"                || m.getShortForm().toLowerCase().contains(x.toLowerCase()));","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredMedicineList(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        return new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"                String.format(Messages.MESSAGE_MEDICINES_LISTED_OVERVIEW, model.getFilteredMedicineList().size()),","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"                CommandResult.ListPanelEffects.MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof FindMedicineCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        FindMedicineCommand otherFindCommand \u003d (FindMedicineCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        return Arrays.equals(keyWords, otherFindCommand.keyWords);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"keyWords\", keyWords)","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"HEEaZ":1,"joeng03":6,"timetraveller-123":61}},{"path":"src/main/java/seedu/pharmhub/logic/commands/FindOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":" * Finds and lists all persons in PharmHub whose name contains any of the argument keywords.","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"public class FindOrderCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    public static final String COMMAND_WORD \u003d \"findo\";","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"            + \": Finds all orders with statuses matching the given status (if any) AND containing \"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"            + \"any of the given medicines (if any) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"            + \"Parameters: \" + \"[\" + PREFIX_STATUS + \"STATUS]\"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"            + \"[\" + PREFIX_MEDICINE_NAME + \"MEDICINE_NAME]...\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"            + \"Example: \" + COMMAND_WORD + \" s/preparing m/panadol\";","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    private final Status statusToFind;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    private final Set\u003cMedicine\u003e medicineToFind;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"     * Constructor method for the find order class.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"     * @param statusToFind The status to find.","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"     * @param medicineToFind The Medicine to find.","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    public FindOrderCommand(Status statusToFind, Set\u003cMedicine\u003e medicineToFind) {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        this.statusToFind \u003d statusToFind;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"        this.medicineToFind \u003d medicineToFind;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"        if (statusToFind \u003d\u003d null \u0026\u0026 medicineToFind \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"            return new CommandResult(FindOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        Predicate\u003cOrder\u003e statusMatches \u003d order -\u003e statusToFind \u003d\u003d null","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"                || order.getStatus().getStatus() \u003d\u003d statusToFind.getStatus();","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"        Predicate\u003cOrder\u003e medicineMatches \u003d order -\u003e medicineToFind \u003d\u003d null","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"                || order.getMedicines().stream()","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"                .anyMatch(medicine -\u003e medicineToFind.stream()","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"                        .anyMatch(checkMedicine -\u003e checkMedicine.isSameMedicine(medicine)));","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        Predicate\u003cOrder\u003e combined \u003d statusMatches.and(medicineMatches);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"        model.updateFilteredOrderList(combined);","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"        return new CommandResult(","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"                String.format(Messages.MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()),","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"                CommandResult.ListPanelEffects.ORDER);","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"        if (!(other instanceof FindOrderCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"        FindOrderCommand otherFindCommand \u003d (FindOrderCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"        return statusToFind.equals(otherFindCommand.statusToFind)","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"                \u0026\u0026 medicineToFind.equals(otherFindCommand.medicineToFind);","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"                .add(\"status\", statusToFind)","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"                .add(\"medicine\", medicineToFind)","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"                .toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"LinWanLeii":75,"HEEaZ":5,"joeng03":11}},{"path":"src/main/java/seedu/pharmhub/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import java.util.List;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":" * Finds and lists all persons in PharmHub whose name contains any of the argument keywords.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"findp\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"            + \"Parameters: findp [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG] [no/ALLERGY]\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"            + \"At least one of the parameters must be specified.\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex Bernice Charlotte p/123456 no/Paracetamol Penicillin\";","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    private final List\u003cString\u003e nameKeywords;","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"    private final Predicate\u003cPerson\u003e nameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    private final Phone phoneToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    private final Email emailToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    private final Set\u003cTag\u003e tagsToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"    private final Set\u003cAllergy\u003e allergiesToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"     * Constructor method for the find person class.","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"     * @param nameKeywords The name keywords of the person.","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"     * @param phoneToFind The phone to find.","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"     * @param emailToFind The email to find.","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"     * @param tagsToFind The tags to find.","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"     * @param allergiesToFind The allergies to find.","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    public FindPersonCommand(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"                             Phone phoneToFind, Email emailToFind, Set\u003cTag\u003e tagsToFind, Set\u003cAllergy\u003e allergiesToFind) {","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        this.nameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"                nameKeywords \u003d\u003d null","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"                        ? person -\u003e true","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"                        : new NameContainsKeywordsPredicate(nameKeywords);","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"        this.phoneToFind \u003d phoneToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        this.emailToFind \u003d emailToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        this.tagsToFind \u003d tagsToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"        this.allergiesToFind \u003d allergiesToFind;","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"    public FindPersonCommand(","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"            List\u003cString\u003e nameKeywords","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"    ) {","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"        this(nameKeywords, null, null, null, null);","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cPerson\u003e phoneMatches \u003d person -\u003e phoneToFind \u003d\u003d null","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"                || person.getPhone().equals(phoneToFind);","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cPerson\u003e emailMatches \u003d person -\u003e emailToFind \u003d\u003d null","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"                || person.getEmail().equals(emailToFind);","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cPerson\u003e tagMatches \u003d person -\u003e tagsToFind \u003d\u003d null","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"                || person.getTags().stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"                .anyMatch(tag -\u003e tagsToFind.stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"                        .anyMatch(checkTag -\u003e checkTag.equals(tag)));","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cPerson\u003e allergyMatches \u003d person -\u003e allergiesToFind \u003d\u003d null","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"                || person.getAllergies().stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"                .anyMatch(allergy -\u003e allergiesToFind.stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"                        .anyMatch(checkAllergy-\u003e checkAllergy.isSameAllergy(allergy)));","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cPerson\u003e combined \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"                nameContainsKeywordsPredicate","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"                        .and(phoneMatches)","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"                        .and(emailMatches)","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"                        .and(tagMatches)","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"                        .and(allergyMatches);","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"joeng03"},"content":"        model.updateFilteredPersonList(combined);","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"                CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"        if (!(other instanceof FindPersonCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"        FindPersonCommand otherFindCommand \u003d (FindPersonCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"joeng03"},"content":"        return nameContainsKeywordsPredicate.equals(otherFindCommand.nameContainsKeywordsPredicate)","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 ((phoneToFind \u003d\u003d null \u0026\u0026 otherFindCommand.phoneToFind \u003d\u003d null)","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"joeng03"},"content":"                || phoneToFind.equals(otherFindCommand.phoneToFind))","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 ((emailToFind \u003d\u003d null \u0026\u0026 otherFindCommand.emailToFind \u003d\u003d null)","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"joeng03"},"content":"                || emailToFind.equals(otherFindCommand.emailToFind))","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 ((tagsToFind \u003d\u003d null \u0026\u0026 otherFindCommand.tagsToFind \u003d\u003d null)","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"joeng03"},"content":"                || tagsToFind.equals(otherFindCommand.tagsToFind))","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 ((allergiesToFind \u003d\u003d null \u0026\u0026 otherFindCommand.allergiesToFind \u003d\u003d null)","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"                || allergiesToFind.equals(otherFindCommand.allergiesToFind));","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"        if (nameKeywords !\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"            toStringBuilder.add(\"nameKeywords\", nameKeywords);","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"joeng03"},"content":"        if (phoneToFind !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":134,"author":{"gitId":"joeng03"},"content":"            toStringBuilder.add(\"phone\", phoneToFind);","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"joeng03"},"content":"        if (emailToFind !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"joeng03"},"content":"            toStringBuilder.add(\"email\", emailToFind);","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":139,"author":{"gitId":"joeng03"},"content":"        if (tagsToFind !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":140,"author":{"gitId":"joeng03"},"content":"            toStringBuilder.add(\"tags\", tagsToFind);","lastModifiedDate":"2023-11-05"},{"lineNumber":141,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"joeng03"},"content":"        if (allergiesToFind !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":143,"author":{"gitId":"joeng03"},"content":"            toStringBuilder.add(\"allergies\", allergiesToFind);","lastModifiedDate":"2023-11-05"},{"lineNumber":144,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":145,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":146,"author":{"gitId":"joeng03"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"HEEaZ":6,"joeng03":107,"-":35}},{"path":"src/main/java/seedu/pharmhub/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":2,"-":19}},{"path":"src/main/java/seedu/pharmhub/logic/commands/ListMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_MEDICINES;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":" * Lists all medicines in PharmHub to the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"public class ListMedicineCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"    public static final String COMMAND_WORD \u003d \"listm\";","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all medicines\";","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredMedicineList(PREDICATE_SHOW_ALL_MEDICINES);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"        return new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"                MESSAGE_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"                CommandResult.ListPanelEffects.MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"joeng03":3,"timetraveller-123":22}},{"path":"src/main/java/seedu/pharmhub/logic/commands/ListOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":" * Lists all orders in PharmHub to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"public class ListOrderCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"listo\";","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"                MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"                CommandResult.ListPanelEffects.ORDER);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HEEaZ":22,"joeng03":3}},{"path":"src/main/java/seedu/pharmhub/logic/commands/ListPeopleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":" * Lists all persons in the PharmHub to the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"public class ListPeopleCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"listp\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HEEaZ":3,"joeng03":4,"-":17}},{"path":"src/main/java/seedu/pharmhub/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":" * Redoes the last undo","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redo the last undo made to PharmHub\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Redo successful.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        if (!model.canRedo()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"                    \"Redo failed: \" + Messages.MESSAGE_NO_VALID_PREVIOUS_STATE);","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        model.redo();","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(MESSAGE_UNDO_SUCCESS);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":24,"joeng03":4}},{"path":"src/main/java/seedu/pharmhub/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":" * Undoes the last action that modified PharmHub","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undo the last change made to PharmHub\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Undo successful.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        if (!model.canUndo()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"                    \"Undo failed: \" + Messages.MESSAGE_NO_VALID_PREVIOUS_STATE);","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        model.undo();","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(MESSAGE_UNDO_SUCCESS);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":24,"joeng03":4}},{"path":"src/main/java/seedu/pharmhub/logic/commands/UpdateStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.CollectionUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":" * Edits the details of an existing person in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"public class UpdateStatusCommand extends Command {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    public static final String COMMAND_WORD \u003d \"updates\";","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the Status of the order identified \"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"            + \"by the order number used in the displayed order list. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_STATUS + \"STATUS\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"            + PREFIX_STATUS + \"completed\";","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_EDIT_ORDER_STATUS_SUCCESS \u003d \"Successfully updated status of Order #%1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"Status to edit to must be provided.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"Operation would result in duplicate order\";","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MESSAGE_WRONG_CHRONOLOGICAL_ORDER_STATUS \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"            \"Status can only be updated in a chronological order \"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"                    + Status.OrderStatus.PENDING + \" (PD) -\u003e \"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"                    + Status.OrderStatus.PREPARING + \" (PR) -\u003e \"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"                    + Status.OrderStatus.COMPLETED + \" (CP) -\u003e \"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"                    + Status.OrderStatus.CANCELLED + \" (CC)\";","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    private final Index index;","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"    private final EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"     * @param index of the order in the filtered order list to edit","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"     * @param editOrderDescriptor details to edit the order with","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"    public UpdateStatusCommand(Index index, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"        this.editOrderDescriptor \u003d new EditOrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003e\u003d 0 : \"Index should be positive\";","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        assert index.getZeroBased() \u003c lastShownList.size() : \"Index should be within bounds of order list\";","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"        if (!Status.isValidChronologicalStatus(orderToEdit.getStatus().getStatus(),","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"                editedOrder.getStatus().getStatus())) {","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"            throw new CommandException(MESSAGE_WRONG_CHRONOLOGICAL_ORDER_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"        if (!orderToEdit.isSameOrder(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_EDIT_ORDER_STATUS_SUCCESS, Messages.format(editedOrder)), editedOrder);","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"     * edited with {@code editOrderDescriptor}.","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"    private static Order createEditedOrder(Order orderToEdit, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"        OrderNumber updatedOrderNumber \u003d orderToEdit.getOrderNumber();","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"        Person updatedPerson \u003d editOrderDescriptor.getPerson().orElse(orderToEdit.getPerson());","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cMedicine\u003e updatedMedicineName \u003d editOrderDescriptor.getMedicines().orElse(orderToEdit.getMedicines());","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"        Status updatedStatus \u003d editOrderDescriptor.getStatus().orElse(orderToEdit.getStatus());","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"        return new Order(updatedOrderNumber, updatedPerson, updatedMedicineName, updatedStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"        if (!(other instanceof UpdateStatusCommand)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand otherEditCommand \u003d (UpdateStatusCommand) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"LinWanLeii"},"content":"                \u0026\u0026 editOrderDescriptor.equals(otherEditCommand.editOrderDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"LinWanLeii"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"LinWanLeii"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"LinWanLeii"},"content":"                .add(\"editOrderDescriptor\", editOrderDescriptor)","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"LinWanLeii"},"content":"                .toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"LinWanLeii"},"content":"     * Stores the details to edit the order with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"LinWanLeii"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"LinWanLeii"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"LinWanLeii"},"content":"        private OrderNumber orderNumber;","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"LinWanLeii"},"content":"        private Person person;","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"LinWanLeii"},"content":"        private Status status;","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"timetraveller-123"},"content":"        private Set\u003cMedicine\u003e medicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"LinWanLeii"},"content":"        public EditOrderDescriptor() {}","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"LinWanLeii"},"content":"        /**","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"LinWanLeii"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"LinWanLeii"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"LinWanLeii"},"content":"         */","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"LinWanLeii"},"content":"        public EditOrderDescriptor(EditOrderDescriptor toCopy) {","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"LinWanLeii"},"content":"            setOrderNumber(toCopy.orderNumber);","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"LinWanLeii"},"content":"            setPerson(toCopy.person);","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"HEEaZ"},"content":"            setMedicines(toCopy.medicines);","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"LinWanLeii"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"LinWanLeii"},"content":"        /**","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"LinWanLeii"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"LinWanLeii"},"content":"         */","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"LinWanLeii"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"HEEaZ"},"content":"            return CollectionUtil.isAnyNonNull(orderNumber, person, medicines, status);","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"LinWanLeii"},"content":"        public void setOrderNumber(OrderNumber orderNumber) {","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"LinWanLeii"},"content":"            this.orderNumber \u003d orderNumber;","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"LinWanLeii"},"content":"        public Optional\u003cOrderNumber\u003e getOrderNumber() {","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"LinWanLeii"},"content":"            return Optional.ofNullable(orderNumber);","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"LinWanLeii"},"content":"        public void setPerson(Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"LinWanLeii"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"LinWanLeii"},"content":"        public Optional\u003cPerson\u003e getPerson() {","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"LinWanLeii"},"content":"            return Optional.ofNullable(person);","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"HEEaZ"},"content":"        /**","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"HEEaZ"},"content":"         * Sets {@code medicines} to this object\u0027s {@code medicines}.","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"HEEaZ"},"content":"         * A defensive copy of {@code medicines} is used internally.","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"HEEaZ"},"content":"         */","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"timetraveller-123"},"content":"        public void setMedicines(Set\u003cMedicine\u003e medicines) {","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"HEEaZ"},"content":"            this.medicines \u003d (medicines !\u003d null) ? new HashSet\u003c\u003e(medicines) : null;","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"HEEaZ"},"content":"        /**","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"HEEaZ"},"content":"         * Returns an unmodifiable medicines set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"HEEaZ"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"HEEaZ"},"content":"         * Returns {@code Optional#empty()} if {@code medicines} is null.","lastModifiedDate":"2023-10-30"},{"lineNumber":194,"author":{"gitId":"HEEaZ"},"content":"         */","lastModifiedDate":"2023-10-30"},{"lineNumber":195,"author":{"gitId":"timetraveller-123"},"content":"        public Optional\u003cSet\u003cMedicine\u003e\u003e getMedicines() {","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"HEEaZ"},"content":"            return (medicines !\u003d null) ? Optional.of(Collections.unmodifiableSet(medicines)) : Optional.empty();","lastModifiedDate":"2023-10-30"},{"lineNumber":197,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":199,"author":{"gitId":"LinWanLeii"},"content":"        public void setStatus(Status orderStatus) {","lastModifiedDate":"2023-10-30"},{"lineNumber":200,"author":{"gitId":"LinWanLeii"},"content":"            this.status \u003d orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":201,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":202,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":203,"author":{"gitId":"LinWanLeii"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"LinWanLeii"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-10-30"},{"lineNumber":205,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":206,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":207,"author":{"gitId":"LinWanLeii"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":208,"author":{"gitId":"LinWanLeii"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":209,"author":{"gitId":"LinWanLeii"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":210,"author":{"gitId":"LinWanLeii"},"content":"                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":211,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"LinWanLeii"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":214,"author":{"gitId":"LinWanLeii"},"content":"            if (!(other instanceof EditOrderDescriptor)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":215,"author":{"gitId":"LinWanLeii"},"content":"                return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":216,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":217,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":218,"author":{"gitId":"LinWanLeii"},"content":"            EditOrderDescriptor otherEditOrderDescriptor \u003d (EditOrderDescriptor) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":219,"author":{"gitId":"LinWanLeii"},"content":"            return Objects.equals(orderNumber, otherEditOrderDescriptor.orderNumber)","lastModifiedDate":"2023-10-30"},{"lineNumber":220,"author":{"gitId":"LinWanLeii"},"content":"                    \u0026\u0026 Objects.equals(person, otherEditOrderDescriptor.person)","lastModifiedDate":"2023-10-30"},{"lineNumber":221,"author":{"gitId":"HEEaZ"},"content":"                    \u0026\u0026 Objects.equals(medicines, otherEditOrderDescriptor.medicines)","lastModifiedDate":"2023-10-30"},{"lineNumber":222,"author":{"gitId":"LinWanLeii"},"content":"                    \u0026\u0026 Objects.equals(status, otherEditOrderDescriptor.status);","lastModifiedDate":"2023-10-30"},{"lineNumber":223,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":224,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":225,"author":{"gitId":"LinWanLeii"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":226,"author":{"gitId":"LinWanLeii"},"content":"        public String toString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":227,"author":{"gitId":"LinWanLeii"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-30"},{"lineNumber":228,"author":{"gitId":"LinWanLeii"},"content":"                    .add(\"orderNumber\", orderNumber)","lastModifiedDate":"2023-10-30"},{"lineNumber":229,"author":{"gitId":"LinWanLeii"},"content":"                    .add(\"person\", person)","lastModifiedDate":"2023-10-30"},{"lineNumber":230,"author":{"gitId":"HEEaZ"},"content":"                    .add(\"medicines\", medicines)","lastModifiedDate":"2023-10-30"},{"lineNumber":231,"author":{"gitId":"LinWanLeii"},"content":"                    .add(\"status\", status)","lastModifiedDate":"2023-10-30"},{"lineNumber":232,"author":{"gitId":"LinWanLeii"},"content":"                    .toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":233,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":234,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":235,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":189,"HEEaZ":24,"joeng03":18,"timetraveller-123":4}},{"path":"src/main/java/seedu/pharmhub/logic/commands/ViewOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.format;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":" * Finds and displays the order with the specified order number.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"public class ViewOrderCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"viewo\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays the order identified by the given \"","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"            + \"order number\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"            + \"Parameters: ORDER_NUMBER\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 12345\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_ORDER_NOT_FOUND \u003d \"No order found with order number #%1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_VIEW_ORDER_SUCCESS \u003d \"Displayed Order: #%1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    private final String orderNumber;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    public ViewOrderCommand(String orderNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        this.orderNumber \u003d orderNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        Optional\u003cOrder\u003e orderOptional \u003d model.getOrder(orderNumber);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        if (orderOptional.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(String.format(MESSAGE_ORDER_NOT_FOUND, orderNumber));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_VIEW_ORDER_SUCCESS, format(orderOptional.get())),","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"                    orderOptional.get());","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        if (!(other instanceof ViewOrderCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand otherViewOrderCommand \u003d (ViewOrderCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        return orderNumber.equals(otherViewOrderCommand.orderNumber);","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"                .add(\"orderNumber\", orderNumber)","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"HEEaZ":62,"joeng03":6,"timetraveller-123":3}},{"path":"src/main/java/seedu/pharmhub/logic/commands/ViewPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":" * Finds and displays the order with the specified order number.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"public class ViewPersonCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    public static final String COMMAND_WORD \u003d \"viewp\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays the person identified by the index number \"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"            + \"in the displayed person list.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public static final String MESSAGE_VIEW_ORDER_SUCCESS \u003d \"Displayed Person: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    public ViewPersonCommand(Index targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        assert targetIndex.getZeroBased() \u003e\u003d 0 : \"Index should be positive\";","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"        assert targetIndex.getZeroBased() \u003c lastShownList.size() : \"Index should be within bounds of person list\";","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        Person personToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_VIEW_ORDER_SUCCESS, personToDisplay.getName()), personToDisplay);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"        if (!(other instanceof ViewPersonCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        ViewPersonCommand otherViewPersonCommand \u003d (ViewPersonCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"        return targetIndex.equals(otherViewPersonCommand.targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"HEEaZ":64,"joeng03":10}},{"path":"src/main/java/seedu/pharmhub/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"joeng03":1,"-":16}},{"path":"src/main/java/seedu/pharmhub/logic/parser/AddMedicineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":" * Parses input arguments and creates a new AddMedicineCommand object.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"public class AddMedicineCommandParser implements Parser\u003cAddMedicineCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMedicineCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"     * and returns an AddMedicineCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    public AddMedicineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEDICINE_NAME);","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        if (!argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"                || argMultimap.getValue(PREFIX_MEDICINE_NAME).orElse(\"\").isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMedicineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MEDICINE_NAME);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        String medicineName \u003d argMultimap.getValue(PREFIX_MEDICINE_NAME).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        if (!Medicine.isValidMedicineName(medicineName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(Medicine.MESSAGE_MEDICINE_NAME_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"        return new AddMedicineCommand(new Medicine(medicineName));","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"HEEaZ":5,"joeng03":6,"timetraveller-123":29}},{"path":"src/main/java/seedu/pharmhub/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_IGNORE_ALLERGY;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ORDER_NUMBER;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":" * Parses input arguments and creates a new AddOrderCommand object.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"     * and returns an AddOrderCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ORDER_NUMBER, PREFIX_MEDICINE_NAME, PREFIX_IGNORE_ALLERGY);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        if (argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"            || argMultimap.getValue(PREFIX_MEDICINE_NAME).orElse(\"\").isEmpty()","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"            || argMultimap.getValue(PREFIX_ORDER_NUMBER).orElse(\"\").isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ORDER_NUMBER);","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        OrderNumber orderNumber \u003d ParserUtil.parseOrderNumber(argMultimap.getValue(PREFIX_ORDER_NUMBER).get());","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        Set\u003cMedicine\u003e medicines \u003d ParserUtil.parseMedicines(argMultimap.getAllValues(PREFIX_MEDICINE_NAME));","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"        Boolean ignoreAllergy \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"        if (argMultimap.getValue(PREFIX_IGNORE_ALLERGY).isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"            ignoreAllergy \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        return new AddOrderCommand(index, orderNumber, medicines, ignoreAllergy);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"HEEaZ":9,"joeng03":15,"timetraveller-123":26}},{"path":"src/main/java/seedu/pharmhub/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"                        PREFIX_ALLERGY);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        Set\u003cAllergy\u003e allergyList \u003d ParserUtil.parseAllergies(argMultimap.getAllValues(PREFIX_ALLERGY));","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, allergyList, new HashSet\u003c\u003e());","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"HEEaZ":6,"joeng03":21,"-":40}},{"path":"src/main/java/seedu/pharmhub/logic/parser/AddShortFormCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_DELETE_SHORT_FORM;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddShortFormCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":" * Parses input arguments and creates a new AddShortFormCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"public class AddShortFormCommandParser implements Parser\u003cAddShortFormCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"     * Parses the given {@code String} of arguments in the context of the AddShortFormCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"     * and returns an AddShortFormCommand object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    public AddShortFormCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEDICINE_NAME, PREFIX_DELETE_SHORT_FORM);","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"        Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortFormCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"        if (argMultimap.getValue(PREFIX_DELETE_SHORT_FORM).isPresent()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"            return new AddShortFormCommand(index);","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        if (argMultimap.getValue(PREFIX_MEDICINE_NAME).orElse(\"\").isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortFormCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MEDICINE_NAME);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        String shortForm \u003d argMultimap.getValue(PREFIX_MEDICINE_NAME).get().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        if (!Medicine.isValidShortForm(shortForm)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(Medicine.MESSAGE_SHORT_FORM_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        return new AddShortFormCommand(index, new Medicine(shortForm));","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":4,"joeng03":8,"timetraveller-123":39}},{"path":"src/main/java/seedu/pharmhub/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"joeng03":3,"-":75}},{"path":"src/main/java/seedu/pharmhub/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"        String newString \u003d argsString.replaceAll(\" +\", \" \")","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"            .replaceAll(\"//\", Character.toString((char) 127));","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(newString, prefixes);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        return extractArguments(newString, positions);","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"timetraveller-123"},"content":"        return value.trim().replaceAll(\"/\", \"\")","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"timetraveller-123"},"content":"            .replaceAll(Character.toString((char) 127), \"/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"joeng03":1,"-":144,"timetraveller-123":6}},{"path":"src/main/java/seedu/pharmhub/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    public static final Prefix PREFIX_ALLERGY \u003d new Prefix(\"no/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    public static final Prefix PREFIX_ORDER_NUMBER \u003d new Prefix(\"o/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    public static final Prefix PREFIX_MEDICINE_NAME \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"    public static final Prefix PREFIX_IGNORE_ALLERGY \u003d new Prefix(\"ia/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    public static final Prefix PREFIX_DELETE_SHORT_FORM \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LinWanLeii":1,"HEEaZ":2,"joeng03":4,"-":14,"timetraveller-123":1}},{"path":"src/main/java/seedu/pharmhub/logic/parser/DeleteMedicineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeleteMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":" * Parses input arguments and creates a new DeleteMedicineCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"public class DeleteMedicineCommandParser implements Parser\u003cDeleteMedicineCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMedicineCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"     * and returns a DeleteMedicineCommand object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    public DeleteMedicineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"            return new DeleteMedicineCommand(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMedicineCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"joeng03":5,"timetraveller-123":23}},{"path":"src/main/java/seedu/pharmhub/logic/parser/DeleteOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"public class DeleteOrderCommandParser implements Parser\u003cDeleteOrderCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteOrderCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"     * and returns a DeleteOrderCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"    public DeleteOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"            return new DeleteOrderCommand(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"joeng03":5,"timetraveller-123":22}},{"path":"src/main/java/seedu/pharmhub/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"HEEaZ":4,"joeng03":5,"-":20}},{"path":"src/main/java/seedu/pharmhub/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_IGNORE_ALLERGY;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"                        PREFIX_ALLERGY, PREFIX_IGNORE_ALLERGY);","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"                PREFIX_ADDRESS, PREFIX_IGNORE_ALLERGY);","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"        parseAllergiesForEdit(argMultimap.getAllValues(PREFIX_ALLERGY)).ifPresent(editPersonDescriptor::setAllergies);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"        boolean ignoreAllergies \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"        if (argMultimap.getValue(PREFIX_IGNORE_ALLERGY).isPresent()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"            ignoreAllergies \u003d true;","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"        return new EditPersonCommand(index, editPersonDescriptor, ignoreAllergies);","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"joeng03"},"content":"     * Parses {@code Collection\u003cString\u003e allergies} into a {@code Set\u003cAllergy\u003e} if {@code allergies} is non-empty.","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"     * If {@code allergies} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"     * {@code Set\u003cAllergy\u003e} containing zero allergies.","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"    private Optional\u003cSet\u003cAllergy\u003e\u003e parseAllergiesForEdit(Collection\u003cString\u003e allergies) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"joeng03"},"content":"        assert allergies !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"joeng03"},"content":"        if (allergies.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"        Collection\u003cString\u003e allergySet \u003d allergies.size() \u003d\u003d 1 \u0026\u0026 allergies.contains(\"\") ? Collections.emptySet()","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"                : allergies;","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"        return Optional.of(ParserUtil.parseAllergies(allergySet));","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"HEEaZ":14,"joeng03":33,"-":66}},{"path":"src/main/java/seedu/pharmhub/logic/parser/FindMedicineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":" * Parses input arguments and creates a new FindMedicineCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"public class FindMedicineCommandParser implements Parser\u003cFindMedicineCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMedicineCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"     * and returns a FindMedicineCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"    public FindMedicineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMedicineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        return new FindMedicineCommand(nameKeywords);","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"joeng03":4,"timetraveller-123":24}},{"path":"src/main/java/seedu/pharmhub/logic/parser/FindOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import java.util.List;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"import seedu.pharmhub.model.order.exceptions.InvalidStatusException;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"public class FindOrderCommandParser implements Parser\u003cFindOrderCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    public FindOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STATUS, PREFIX_MEDICINE_NAME);","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STATUS, PREFIX_MEDICINE_NAME);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"        Status statusToFind \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"        Set\u003cMedicine\u003e medicineToFind \u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"            try {","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"                String s \u003d argMultimap.getValue(PREFIX_STATUS).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"                statusToFind \u003d ParserUtil.parseStatus(Status.shortFormToFull(s));","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"                assert Status.isValidOrderStatus(statusToFind.toString()) : \"Status should be valid\";","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"            } catch (InvalidStatusException se) {","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"                throw new ParseException(se.getMessage());","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        if (argMultimap.getValue(PREFIX_MEDICINE_NAME).isPresent()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"            String medicineArg \u003d argMultimap.getValue(PREFIX_MEDICINE_NAME).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"            List\u003cString\u003e list \u003d Arrays.asList(medicineArg.split(\"\\\\s+\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"            medicineToFind \u003d ParserUtil.parseMedicines(list);","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        if (statusToFind \u003d\u003d null \u0026\u0026 medicineToFind \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"        return new FindOrderCommand(statusToFind, medicineToFind);","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"LinWanLeii":46,"HEEaZ":16,"joeng03":8}},{"path":"src/main/java/seedu/pharmhub/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import java.util.List;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_ALLERGY);","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_ALLERGY);","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"        Name nameToFind \u003d null;","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d null;","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        Phone phoneToFind \u003d null;","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"        Email emailToFind \u003d null;","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"        Set\u003cTag\u003e tagsToFind \u003d null;","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"        Set\u003cAllergy\u003e allergiesToFind \u003d null;","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"            nameToFind \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"            nameKeywords \u003d Arrays.asList(nameToFind.toString().split(\"\\\\s+\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"            phoneToFind \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"            emailToFind \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"            String tagArg \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"            List\u003cString\u003e list \u003d Arrays.asList(tagArg.split(\"\\\\s+\"));","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"            tagsToFind \u003d ParserUtil.parseTags(list);","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"        if (argMultimap.getValue(PREFIX_ALLERGY).isPresent()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"            String allergyArg \u003d argMultimap.getValue(PREFIX_ALLERGY).get();","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"            List\u003cString\u003e list \u003d Arrays.asList(allergyArg.split(\"\\\\s+\"));","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"            allergiesToFind \u003d ParserUtil.parseAllergies(list);","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"        if (nameToFind \u003d\u003d null \u0026\u0026 phoneToFind \u003d\u003d null \u0026\u0026 emailToFind \u003d\u003d null \u0026\u0026 tagsToFind \u003d\u003d null","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 allergiesToFind \u003d\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"        return new FindPersonCommand(nameKeywords,","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"                phoneToFind, emailToFind, tagsToFind, allergiesToFind","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"        );","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"HEEaZ":3,"joeng03":61,"-":23}},{"path":"src/main/java/seedu/pharmhub/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.Command;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"joeng03":3,"-":13}},{"path":"src/main/java/seedu/pharmhub/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.StringUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"joeng03"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"joeng03"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"joeng03"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"joeng03"},"content":"    public static Allergy parseAllergy(String allergy) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"joeng03"},"content":"        requireNonNull(allergy);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"joeng03"},"content":"        String trimmedAllergy \u003d allergy.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"joeng03"},"content":"        if (!Allergy.isValidAllergyName(trimmedAllergy)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"joeng03"},"content":"            throw new ParseException(Allergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"timetraveller-123"},"content":"        return new Allergy(new Medicine(allergy));","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"joeng03"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"joeng03"},"content":"    public static Set\u003cAllergy\u003e parseAllergies(Collection\u003cString\u003e allergies) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"joeng03"},"content":"        requireNonNull(allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"joeng03"},"content":"        final Set\u003cAllergy\u003e allergySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"joeng03"},"content":"        for (String allergyName : allergies) {","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"joeng03"},"content":"            allergySet.add(parseAllergy(allergyName));","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"joeng03"},"content":"        return allergySet;","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"timetraveller-123"},"content":"     * Parses {@code String orderNumber} into a {@code OrderNumber}.","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"timetraveller-123"},"content":"    public static OrderNumber parseOrderNumber(String orderNumber) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(orderNumber);","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"timetraveller-123"},"content":"        String trimmedOrderNumber \u003d orderNumber.trim();","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"timetraveller-123"},"content":"        if (!OrderNumber.isValidOrderNumber(trimmedOrderNumber)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"timetraveller-123"},"content":"            throw new ParseException(OrderNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"timetraveller-123"},"content":"        return new OrderNumber(trimmedOrderNumber);","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"HEEaZ"},"content":"     * Parses {@code Collection\u003cString\u003e medicines} into a {@code Set\u003cString\u003e medicines}.","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"timetraveller-123"},"content":"    public static Set\u003cMedicine\u003e parseMedicines(Collection\u003cString\u003e medicines) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"HEEaZ"},"content":"        requireNonNull(medicines);","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"timetraveller-123"},"content":"        final Set\u003cMedicine\u003e medicineSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"HEEaZ"},"content":"        for (String medicine : medicines) {","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"timetraveller-123"},"content":"            medicineSet.add(new Medicine(medicine));","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"HEEaZ"},"content":"        return medicineSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"LinWanLeii"},"content":"     * Parses {@code Collection\u003cString\u003e medicines} into a {@code Set\u003cString\u003e medicines}.","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"LinWanLeii"},"content":"    public static Medicine parseMedicine(String medicine) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"LinWanLeii"},"content":"        String trimmedMedicineName \u003d medicine.trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"LinWanLeii"},"content":"        if (!Medicine.isValidMedicineName(trimmedMedicineName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"LinWanLeii"},"content":"            throw new ParseException(Medicine.MESSAGE_MEDICINE_NAME_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"LinWanLeii"},"content":"        return new Medicine(trimmedMedicineName);","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"LinWanLeii"},"content":"     * Parses a {@code Status status} into a {@code Status}.","lastModifiedDate":"2023-10-30"},{"lineNumber":194,"author":{"gitId":"LinWanLeii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-30"},{"lineNumber":195,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":196,"author":{"gitId":"LinWanLeii"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":197,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"LinWanLeii"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":199,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-30"},{"lineNumber":200,"author":{"gitId":"LinWanLeii"},"content":"        String orderStatus \u003d status.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":201,"author":{"gitId":"LinWanLeii"},"content":"        if (!Status.isValidOrderStatus(orderStatus)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":202,"author":{"gitId":"LinWanLeii"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":203,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"LinWanLeii"},"content":"        return new Status(Status.toOrderStatus(orderStatus));","lastModifiedDate":"2023-10-30"},{"lineNumber":205,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LinWanLeii":25,"HEEaZ":9,"joeng03":41,"-":115,"timetraveller-123":16}},{"path":"src/main/java/seedu/pharmhub/logic/parser/PharmHubParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddShortFormCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.Command;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeleteMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ListMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ListOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ListPeopleCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.RedoCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.UndoCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.UpdateStatusCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"public class PharmHubParser {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PharmHubParser.class);","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        switch (commandWord.toLowerCase()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"        case FindMedicineCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"            return new FindMedicineCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"        case FindOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"            return new FindOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"        case ListPeopleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"            return new ListPeopleCommand();","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        case ListOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"            return new ListOrderCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"        case ListMedicineCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"            return new ListMedicineCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"        case ViewOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"            return new ViewOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"        case DeleteOrderCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"            return new DeleteOrderCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"        case ViewPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"            return new ViewPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"        case UpdateStatusCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"            return new UpdateStatusCommandParser().parse(arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"HEEaZ"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"timetraveller-123"},"content":"        case AddMedicineCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"timetraveller-123"},"content":"            return new AddMedicineCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"        case AddShortFormCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"            return new AddShortFormCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"        case DeleteMedicineCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"            return new DeleteMedicineCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LinWanLeii":6,"HEEaZ":25,"joeng03":30,"-":59,"timetraveller-123":22}},{"path":"src/main/java/seedu/pharmhub/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"joeng03":1,"-":41}},{"path":"src/main/java/seedu/pharmhub/logic/parser/UpdateStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.UpdateStatusCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.UpdateStatusCommand.EditOrderDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"import seedu.pharmhub.model.order.exceptions.InvalidStatusException;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"public class UpdateStatusCommandParser implements Parser\u003cUpdateStatusCommand\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateStatusCommand","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"     * and returns an UpdateStatusCommand object for execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    public UpdateStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"        Index index;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateStatusCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STATUS);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor editOrderDescriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"            String s \u003d argMultimap.getValue(PREFIX_STATUS).get();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"            try {","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"                String inputStatus \u003d Status.shortFormToFull(s);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"                editOrderDescriptor.setStatus(ParserUtil.parseStatus(inputStatus));","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"                assert Status.isValidOrderStatus(inputStatus) : \"Status should be valid\";","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"            } catch (InvalidStatusException se) {","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"                throw new ParseException(se.getMessage());","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"            throw new ParseException(UpdateStatusCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        return new UpdateStatusCommand(index, editOrderDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":51,"joeng03":8}},{"path":"src/main/java/seedu/pharmhub/logic/parser/ViewOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":" * Parses input arguments and creates a new ViewOrderCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"public class ViewOrderCommandParser implements Parser\u003cViewOrderCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewOrderCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"     * and returns a ViewOrderCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public ViewOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"        if (trimmedArgs.isEmpty() || !trimmedArgs.matches(\"^\\\\d+$\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"        return new ViewOrderCommand(trimmedArgs);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"HEEaZ":23,"joeng03":4,"timetraveller-123":1}},{"path":"src/main/java/seedu/pharmhub/logic/parser/ViewPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":" * Parses input arguments and creates a new ViewPersonCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"public class ViewPersonCommandParser implements Parser\u003cViewPersonCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"     * and returns a ViewPersonCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public ViewPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"            return new ViewPersonCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"HEEaZ":23,"joeng03":5}},{"path":"src/main/java/seedu/pharmhub/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"joeng03":2,"-":15}},{"path":"src/main/java/seedu/pharmhub/model/InfoObject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":" * Interface for objects to be displayed on the info panel","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"public interface InfoObject {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"HEEaZ":6,"joeng03":1}},{"path":"src/main/java/seedu/pharmhub/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    Predicate\u003cMedicine\u003e PREDICATE_SHOW_ALL_MEDICINES \u003d unused -\u003e true;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"     * Returns the user prefs\u0027 PharmHub file path.","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    Path getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"     * Sets the user prefs\u0027 PharmHub file path.","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"    void setPharmHubFilePath(Path pharmHubFilePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"     * Replaces PharmHub data with the data in {@code PharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"    void setPharmHub(ReadOnlyPharmHub pharmHub);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"     * Clears the PharmHub data","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"    void clearPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"    /** Returns the PharmHub */","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"    ReadOnlyPharmHub getPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"     * Returns true if an order with the same identity as {@code order} exists in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"     * Returns true if a medicine with the same identity as {@code medicine} exists in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"    boolean hasMedicine(Medicine medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"     * Deletes the given person and the person\u0027s orders.","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"     * The person must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"     * {@code person} must not already exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"     * {@code target} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"     * Adds the given order.","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"    void addOrder(Order order);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"     * Deletes the given order.","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"joeng03"},"content":"     * The order must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"timetraveller-123"},"content":"    void deleteOrder(Order target);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"HEEaZ"},"content":"     * Gets the order with the specified orderNumber.","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"HEEaZ"},"content":"     * @param orderNumber","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"     * @return Order with the specified orderNumber.","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"timetraveller-123"},"content":"    Optional\u003cOrder\u003e getOrder(String orderNumber);","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"     * {@code target} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"joeng03"},"content":"     * The Order identity of {@code editedOrder} must not be the same as another existing Order in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"LinWanLeii"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"     * Adds the given medicine.","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"    void addMedicine(Medicine medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"     * Deletes the given medicine.","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"joeng03"},"content":"     * The medicine must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"timetraveller-123"},"content":"    void deleteMedicine(Medicine medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"timetraveller-123"},"content":"     * Gets the medicine that has the identity as the given oven.","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"timetraveller-123"},"content":"     * @param medicine","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"timetraveller-123"},"content":"     * @return medicine with the same identity.","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"timetraveller-123"},"content":"    Optional\u003cMedicine\u003e getMedicine(Medicine medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"timetraveller-123"},"content":"     * Replaces the given medicine {@code target} with {@code editedMedicine}.","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"joeng03"},"content":"     * {@code target} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"timetraveller-123"},"content":"     * The Medicine identity of {@code editedMedicine} must not be the same as another existing Medicine in the","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"joeng03"},"content":"     * PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"timetraveller-123"},"content":"    void setMedicine(Medicine target, Medicine editedMedicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"HEEaZ"},"content":"    boolean canUndo();","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"HEEaZ"},"content":"    void undo();","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"HEEaZ"},"content":"    boolean canRedo();","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"HEEaZ"},"content":"    void redo();","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"timetraveller-123"},"content":"    /** Returns an unmodifiable view of the filtered order list */","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"timetraveller-123"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"timetraveller-123"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"timetraveller-123"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"timetraveller-123"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"timetraveller-123"},"content":"    /** Returns an unmodifiable view of the filtered medicine list */","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"timetraveller-123"},"content":"    ObservableList\u003cMedicine\u003e getFilteredMedicineList();","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"timetraveller-123"},"content":"     * Updates the filter of the filtered medicine list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"timetraveller-123"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"timetraveller-123"},"content":"    void updateFilteredMedicineList(Predicate\u003cMedicine\u003e predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LinWanLeii":4,"HEEaZ":18,"joeng03":28,"-":70,"timetraveller-123":72}},{"path":"src/main/java/seedu/pharmhub/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":" * Represents the in-memory model of the PharmHub data.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"    private final VersionedPharmHub pharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    private final FilteredList\u003cMedicine\u003e filteredMedicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"     * Initializes a ModelManager with the given PharmHub and userPrefs.","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"    public ModelManager(ReadOnlyPharmHub pharmHub, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"        requireAllNonNull(pharmHub, userPrefs);","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        logger.fine(\"Initializing with PharmHub: \" + pharmHub + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        this.pharmHub \u003d new VersionedPharmHub(pharmHub);","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.pharmHub.getPersonList());","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.pharmHub.getOrderList());","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        filteredMedicines \u003d new FilteredList\u003c\u003e(this.pharmHub.getMedicineList());","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"        this(new VersionedPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"    public Path getPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        return userPrefs.getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"    public void setPharmHubFilePath(Path pharmHubFilePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"        requireNonNull(pharmHubFilePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"        userPrefs.setPharmHubFilePath(pharmHubFilePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PharmHub \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"    public void setPharmHub(ReadOnlyPharmHub pharmHub) {","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"        this.pharmHub.resetData(pharmHub);","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"    public ReadOnlyPharmHub getPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"        return pharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"    public void clearPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"        pharmHub.clear();","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"        return pharmHub.hasPerson(person);","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"joeng03"},"content":"        pharmHub.removePerson(target);","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"joeng03"},"content":"        pharmHub.addPerson(person);","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"joeng03"},"content":"        pharmHub.setPerson(target, editedPerson);","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"timetraveller-123"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"        pharmHub.addOrder(order);","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"joeng03"},"content":"        pharmHub.removeOrder(target);","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"    public Optional\u003cOrder\u003e getOrder(String orderNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"joeng03"},"content":"        return pharmHub.getOrder(orderNumber);","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"LinWanLeii"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"joeng03"},"content":"        return pharmHub.hasOrder(order);","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"LinWanLeii"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"LinWanLeii"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"joeng03"},"content":"        pharmHub.setOrder(target, editedOrder);","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"timetraveller-123"},"content":"    public void addMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"joeng03"},"content":"        pharmHub.addMedicine(medicine);","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"timetraveller-123"},"content":"    public void deleteMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"joeng03"},"content":"        pharmHub.removeMedicine(medicine);","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"timetraveller-123"},"content":"    public Optional\u003cMedicine\u003e getMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"joeng03"},"content":"        return pharmHub.getMedicine(medicine);","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"timetraveller-123"},"content":"    public boolean hasMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"joeng03"},"content":"        return pharmHub.hasMedicine(medicine);","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"timetraveller-123"},"content":"    public void setMedicine(Medicine target, Medicine editedMedicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"timetraveller-123"},"content":"        requireAllNonNull(target, editedMedicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"joeng03"},"content":"        pharmHub.setMedicine(target, editedMedicine);","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"HEEaZ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"HEEaZ"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"joeng03"},"content":"        return pharmHub.canUndo();","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"HEEaZ"},"content":"    public void undo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"joeng03"},"content":"        pharmHub.undo();","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"HEEaZ"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"joeng03"},"content":"        return pharmHub.canRedo();","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"HEEaZ"},"content":"    public void redo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"joeng03"},"content":"        pharmHub.redo();","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"joeng03"},"content":"     * {@code versionedPharmHub}","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":220,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"timetraveller-123"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Order List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"timetraveller-123"},"content":"     * Returns an unmodifiable view of the list of {@code Order} backed by the internal list of","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"joeng03"},"content":"     * {@code versionedPharmHub}","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"timetraveller-123"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"timetraveller-123"},"content":"        return filteredOrders;","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"timetraveller-123"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"timetraveller-123"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"timetraveller-123"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Medicine List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"timetraveller-123"},"content":"     * Returns an unmodifiable view of the list of {@code Medicine} backed by the internal list of","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"joeng03"},"content":"     * {@code versionedPharmHub}","lastModifiedDate":"2023-11-09"},{"lineNumber":243,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"timetraveller-123"},"content":"    public ObservableList\u003cMedicine\u003e getFilteredMedicineList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"timetraveller-123"},"content":"        return filteredMedicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"timetraveller-123"},"content":"    public void updateFilteredMedicineList(Predicate\u003cMedicine\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"timetraveller-123"},"content":"        filteredMedicines.setPredicate(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":267,"author":{"gitId":"joeng03"},"content":"        return pharmHub.equals(otherModelManager.pharmHub)","lastModifiedDate":"2023-11-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"timetraveller-123"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-12"},{"lineNumber":270,"author":{"gitId":"timetraveller-123"},"content":"                \u0026\u0026 filteredOrders.equals(otherModelManager.filteredOrders);","lastModifiedDate":"2023-10-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LinWanLeii":10,"HEEaZ":25,"joeng03":51,"-":115,"timetraveller-123":72}},{"path":"src/main/java/seedu/pharmhub/model/PharmHub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.MedicineList;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderList;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.UniquePersonList;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":" * Wraps all data at the PharmHub level","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"public class PharmHub implements ReadOnlyPharmHub {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    private final OrderList orders;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    private final MedicineList medicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        orders \u003d new OrderList();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"        medicines \u003d new MedicineList();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    public PharmHub() {}","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"     * Creates an PharmHub using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"    public PharmHub(ReadOnlyPharmHub toBeCopied) {","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"     * Replaces the contents of the order list with {@code orders}.","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"     * Replaces the contents of the medicine list with {@code medicines}.","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"    public void setMedicines(List\u003cMedicine\u003e medicines) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"        this.medicines.setMedicines(medicines);","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"     * Resets the existing data of this {@code PharmHub} with {@code newData}.","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"    public void resetData(ReadOnlyPharmHub newData) {","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"        setMedicines(newData.getMedicineList());","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"        updatePersonOrders();","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"    private void updatePersonOrders() {","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"        getPersonList().forEach(Person::clearOrders);","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        getOrderList().forEach(Order::addOrderToPerson);","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"joeng03"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"    public void clear() {","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"        resetData(new PharmHub());","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"     * Adds a person to the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"joeng03"},"content":"     * The person must not already exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"joeng03"},"content":"     * {@code target} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"joeng03"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"        orders.editOrdersWithPerson(target, editedPerson);","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"        updatePersonOrders();","lastModifiedDate":"2023-11-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"joeng03"},"content":"     * Removes {@code key} and the corresponding orders from this {@code PharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"joeng03"},"content":"     * {@code key} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"        orders.removeOrdersWithPerson(key);","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"HEEaZ"},"content":"        updatePersonOrders();","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"timetraveller-123"},"content":"    //// order-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"joeng03"},"content":"     * Returns true if an order with the same identity as {@code order} exists in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"timetraveller-123"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"timetraveller-123"},"content":"        return orders.contains(order);","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"joeng03"},"content":"     * Adds an order to the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"timetraveller-123"},"content":"    public void addOrder(Order o) {","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"timetraveller-123"},"content":"        orders.add(o);","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":159,"author":{"gitId":"HEEaZ"},"content":"        updatePersonOrders();","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"joeng03"},"content":"     * Removes {@code key} {@code PharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"joeng03"},"content":"     * {@code key} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"timetraveller-123"},"content":"    public void removeOrder(Order key) {","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"timetraveller-123"},"content":"        orders.remove(key);","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":169,"author":{"gitId":"HEEaZ"},"content":"        updatePersonOrders();","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"HEEaZ"},"content":"     * Retrieves the order with the specified order number","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"HEEaZ"},"content":"     * @return Order with specified orderNumer","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"timetraveller-123"},"content":"    public Optional\u003cOrder\u003e getOrder(String orderNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"HEEaZ"},"content":"        return orders.getOrder(orderNumber);","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"LinWanLeii"},"content":"     * Replaces the given order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"joeng03"},"content":"     * {@code target} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"joeng03"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"LinWanLeii"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"LinWanLeii"},"content":"        orders.setOrder(target, editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":191,"author":{"gitId":"HEEaZ"},"content":"        updatePersonOrders();","lastModifiedDate":"2023-11-06"},{"lineNumber":192,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"timetraveller-123"},"content":"    //// medicine-level operations","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"joeng03"},"content":"     * Returns true if a medicine with the same identity as {@code medicine} exists in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"timetraveller-123"},"content":"    public boolean hasMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"timetraveller-123"},"content":"        return medicines.contains(medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"joeng03"},"content":"     * Adds a medicine to the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"timetraveller-123"},"content":"    public void addMedicine(Medicine m) {","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"timetraveller-123"},"content":"        medicines.add(m);","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"joeng03"},"content":"     * Removes {@code key} {@code PharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"joeng03"},"content":"     * {@code key} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"timetraveller-123"},"content":"    public void removeMedicine(Medicine m) {","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"timetraveller-123"},"content":"        medicines.remove(m);","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"timetraveller-123"},"content":"     * Retrieves the medicine with the same identity as the given one.","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"timetraveller-123"},"content":"    public Optional\u003cMedicine\u003e getMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"timetraveller-123"},"content":"        return medicines.getMedicine(medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"timetraveller-123"},"content":"     * Replaces the given medicine {@code target} in the list with {@code editedMedicine}.","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"joeng03"},"content":"     * {@code target} must exist in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"timetraveller-123"},"content":"     * The medicine identity of {@code editedMedicine} must not be the same as another existing medicine","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"joeng03"},"content":"     * in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"timetraveller-123"},"content":"    public void setMedicine(Medicine target, Medicine editedMedicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(editedMedicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"timetraveller-123"},"content":"        medicines.setMedicine(target, editedMedicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"orders\", orders)","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":254,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":255,"author":{"gitId":"timetraveller-123"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":256,"author":{"gitId":"timetraveller-123"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":257,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":258,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":259,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"timetraveller-123"},"content":"    public ObservableList\u003cMedicine\u003e getMedicineList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"timetraveller-123"},"content":"        return medicines.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":271,"author":{"gitId":"joeng03"},"content":"        if (!(other instanceof PharmHub)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":275,"author":{"gitId":"joeng03"},"content":"        PharmHub otherPharmHub \u003d (PharmHub) other;","lastModifiedDate":"2023-11-09"},{"lineNumber":276,"author":{"gitId":"joeng03"},"content":"        return persons.equals(otherPharmHub.persons)","lastModifiedDate":"2023-11-09"},{"lineNumber":277,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 orders.equals(otherPharmHub.orders)","lastModifiedDate":"2023-11-09"},{"lineNumber":278,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 medicines.equals(otherPharmHub.medicines);","lastModifiedDate":"2023-11-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":283,"author":{"gitId":"timetraveller-123"},"content":"        return Objects.hash(persons, orders);","lastModifiedDate":"2023-10-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":285,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LinWanLeii":7,"HEEaZ":30,"joeng03":41,"-":107,"timetraveller-123":101}},{"path":"src/main/java/seedu/pharmhub/model/ReadOnlyPharmHub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":" * Unmodifiable view of an PharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"public interface ReadOnlyPharmHub {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    ObservableList\u003cMedicine\u003e getMedicineList();","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    Optional\u003cOrder\u003e getOrder(String orderNumber);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    Optional\u003cMedicine\u003e getMedicine(Medicine medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HEEaZ":3,"joeng03":6,"-":13,"timetraveller-123":7}},{"path":"src/main/java/seedu/pharmhub/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    Path getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"joeng03":3,"-":13}},{"path":"src/main/java/seedu/pharmhub/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"    private Path pharmHubFilePath \u003d Paths.get(\"data\" , \"pharmhub.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        setPharmHubFilePath(newUserPrefs.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"    public Path getPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"        return pharmHubFilePath;","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"    public void setPharmHubFilePath(Path pharmHubFilePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        requireNonNull(pharmHubFilePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"        this.pharmHubFilePath \u003d pharmHubFilePath;","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 pharmHubFilePath.equals(otherUserPrefs.pharmHubFilePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        return Objects.hash(guiSettings, pharmHubFilePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"        sb.append(\"\\nLocal data file location : \" + pharmHubFilePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":12,"-":76}},{"path":"src/main/java/seedu/pharmhub/model/VersionedPharmHub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":" * Wraps the {@code PharmHub} with an PharmHub that supports versioning","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"public class VersionedPharmHub extends PharmHub {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"    private final ArrayDeque\u003cPharmHub\u003e undoHistory;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    private final ArrayDeque\u003cPharmHub\u003e redoHistory;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"    VersionedPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        super();","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"        undoHistory \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        redoHistory \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"     * Creates a VersionedPharmHub using the models in {@code toBeCopied} and the {@code modelManager}","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    public VersionedPharmHub(ReadOnlyPharmHub toBeCopied) {","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        super(toBeCopied);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        undoHistory \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        redoHistory \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    private void saveHistory() {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        if (undoHistory.size() \u003e 30) {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"            undoHistory.pollLast();","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"        undoHistory.addFirst(new PharmHub(this));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    private void clearRedoHistory() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        redoHistory.clear();","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"     * Returns true if the VersionedPharmHub can be reverted to the previous state","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        return !undoHistory.isEmpty();","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"     * Reverts the VersionedPharmHub to the previous state","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"    public void undo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        assert(!undoHistory.isEmpty());","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        PharmHub prev \u003d undoHistory.pollFirst();","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"        redoHistory.addFirst(new PharmHub(this));","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        super.resetData(prev);","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"     * Returns true if the VersionedPharmHub can be reverted to the next state (before the previous undo)","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        return !redoHistory.isEmpty();","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"     * Reverts the VersionedPharmHub to the next state (before the previous undo)","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"    public void redo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"        assert(!redoHistory.isEmpty());","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"        PharmHub next \u003d redoHistory.pollFirst();","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"        undoHistory.addFirst(new PharmHub(this));","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"        super.resetData(next);","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undoable functions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"    public void clear() {","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"        super.clear();","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"        super.addPerson(p);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"        super.setPerson(target, editedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"        super.removePerson(key);","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"    public void addOrder(Order o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"        super.addOrder(o);","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"    public void removeOrder(Order key) {","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"        super.removeOrder(key);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"HEEaZ"},"content":"        super.setOrder(target, editedOrder);","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"HEEaZ"},"content":"    public void addMedicine(Medicine m) {","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"        super.addMedicine(m);","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"HEEaZ"},"content":"    public void removeMedicine(Medicine m) {","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"HEEaZ"},"content":"        super.removeMedicine(m);","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"HEEaZ"},"content":"    public void setMedicine(Medicine target, Medicine editedMedicine) {","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"        saveHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"HEEaZ"},"content":"        super.setMedicine(target, editedMedicine);","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"        clearRedoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":121,"joeng03":19}},{"path":"src/main/java/seedu/pharmhub/model/allergy/Allergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":" * Represents a Allergy of a patient.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidAllergyName(String)}","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"public class Allergy {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Allergy names should be alphanumeric\";","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"    public final Medicine allergy;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"     * Constructs a {@code Allergy}.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"     * @param allergy A valid medicine.","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    public Allergy(Medicine allergy) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(allergy);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        this.allergy \u003d allergy;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if a given medicine is a valid medicine.","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    public static boolean isValidAllergyName(String test) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        return Medicine.isValidMedicineName(test);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"     * Returns true if both allergies have the same medicine name.","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"     * This defines a weaker notion of equality between two allergies.","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"    public boolean isSameAllergy(Allergy a) {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"        if (a \u003d\u003d this) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"        if (a \u003d\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"        return allergy.isSameMedicine(a.allergy);","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        if (!(other instanceof Allergy)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        Allergy otherAllergy \u003d (Allergy) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        return allergy.equals(otherAllergy.allergy);","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"        return allergy.hashCode();","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"        return \u0027[\u0027 + allergy.getMedicineName() + \u0027]\u0027;","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"     * Retruns a copy of the allergic medicine.","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"    public Medicine getAllery() {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"        return new Medicine(allergy.getMedicineName(), allergy.getShortForm());","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"joeng03":62,"timetraveller-123":20}},{"path":"src/main/java/seedu/pharmhub/model/medicine/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":" * Represents a Medicine in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"public class Medicine {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_MEDICINE_NAME_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"            \"Medicine Names should not be empty\"; // temporarily this will change soon","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_SHORT_FORM_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"            \"Medicine short forms should not be empty\"; // temporarily this will change soon","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    public final String medicineName;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    public final String shortForm;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    public Medicine(String medicineName) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(medicineName);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        checkArgument(isValidMedicineName(medicineName), MESSAGE_MEDICINE_NAME_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        this.shortForm \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"    public Medicine(String medicineName, String shortForm) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"        requireAllNonNull(medicineName, shortForm);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        checkArgument(isValidMedicineName(medicineName), MESSAGE_MEDICINE_NAME_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        this.shortForm \u003d shortForm;","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"    public String getMedicineName() {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        return this.medicineName;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"    public String getShortForm() {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"        return this.shortForm;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"    public boolean hasShortForm() {","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        return !shortForm.isEmpty();","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if both medicines have the same medicine name.","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"     * This defines a weaker notion of equality between two medicines.","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"    public boolean isSameMedicine(Medicine m) {","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        if (m \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"        if (m \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        return (medicineName.toLowerCase().equals(m.medicineName.toLowerCase())","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"                || medicineName.toLowerCase().equals(m.shortForm.toLowerCase())","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"                || m.shortForm.toLowerCase().equals(medicineName.toLowerCase()));","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if both orders have the same identity and data fields.","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        if (!(o instanceof Medicine)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"        Medicine otherMedicine \u003d (Medicine) o;","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"        return medicineName.equals(otherMedicine.medicineName);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"        return Objects.hash(medicineName);","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"        return \"[ \" + medicineName + \" ]\";","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"    public static boolean isValidMedicineName(String s) {","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"        return !s.isEmpty();","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"    public static boolean isValidShortForm(String s) {","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"        return true; //same as above","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"HEEaZ":3,"joeng03":4,"timetraveller-123":102}},{"path":"src/main/java/seedu/pharmhub/model/medicine/MedicineList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.exceptions.DuplicateMedicineException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.exceptions.MedicineNotFoundException;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":" * A list of medicines that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":" * A medicine is considered unique by comparing using {@code Medicine#isSameMedicine(Medicine)}. As such, adding of","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":" * medicines uses Medicine#isSameMedicine(Medicine) for equality so as to ensure that the medicine being added or","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":" * updated is unique in terms of identity in the MedicineList.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":" *","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":" *","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":" * @see Medicine#isSameMedicine(Medicine)","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"public class MedicineList {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    private final ObservableList\u003cMedicine\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    private final ObservableList\u003cMedicine\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if the list contains an equivalent medicine as the given argument.","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    public boolean contains(Medicine toCheck) {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMedicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"     * Adds a medicine to the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"    public void add(Medicine toAdd) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"            throw new DuplicateMedicineException();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"     * Removes the equivalent medicine from the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"     * The medicine must exist in the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"    public void remove(Medicine toRemove) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"            throw new MedicineNotFoundException();","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"    public void setMedicines(MedicineList replacement) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"     * Replaces the contents of this list with {@code medicines}.","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"    public void setMedicines(List\u003cMedicine\u003e medicines) {","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        requireAllNonNull(medicines);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"        internalList.setAll(medicines);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"     * Retrieves the medicine with the same identity as given medicine specified by Medicine#isSameMedicine(Medicine)","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"    public Optional\u003cMedicine\u003e getMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"        Stream\u003cMedicine\u003e filtered \u003d internalList.stream().filter(m -\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"                medicine.isSameMedicine(m));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"        return filtered.findFirst();","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"     * Replaces the medicine {@code target} in the list with {@code editedMedicine}.","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"     * The medicine identity of {@code editedMedicine} must not be the same as another existing medicine in the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"    public void setMedicine(Medicine target, Medicine editedMedicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"        requireAllNonNull(target, editedMedicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"            throw new MedicineNotFoundException();","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"        if (!target.isSameMedicine(editedMedicine) \u0026\u0026 contains(editedMedicine)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"            throw new DuplicateMedicineException();","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"        internalList.set(index, editedMedicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"    public ObservableList\u003cMedicine\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof MedicineList)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"timetraveller-123"},"content":"        MedicineList medicineList \u003d (MedicineList) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.equals(medicineList.internalList);","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"timetraveller-123"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"joeng03":5,"timetraveller-123":133}},{"path":"src/main/java/seedu/pharmhub/model/medicine/exceptions/DuplicateMedicineException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.medicine.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":" * Signals that the operation will result in duplicate Medicines (Medicines are considered duplicates if they have the","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":" * same identity).","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"public class DuplicateMedicineException extends RuntimeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"    public DuplicateMedicineException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"        super(\"Operation would result in duplicate medicines\");","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"joeng03":1,"timetraveller-123":10}},{"path":"src/main/java/seedu/pharmhub/model/medicine/exceptions/MedicineNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.medicine.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":" * Signals that the operation is unable to find the specified medicine.","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"public class MedicineNotFoundException extends RuntimeException { }","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"joeng03":1,"timetraveller-123":5}},{"path":"src/main/java/seedu/pharmhub/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.InfoObject;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":" * Represents an Order in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"public class Order implements InfoObject {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    private final OrderNumber orderNumber;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    private final Person person;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    private final Set\u003cMedicine\u003e medicines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    private final Status orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    public Order(OrderNumber orderNumber, Person person, Set\u003cMedicine\u003e medicines, Status orderStatus) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        requireAllNonNull(orderNumber, person, medicines);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        this.orderNumber \u003d orderNumber;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"        this.medicines.addAll(medicines);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"        this.orderStatus \u003d orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    public OrderNumber getOrderNumber() {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        return orderNumber;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"    public Person getPerson() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        return person;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"    public Set\u003cMedicine\u003e getMedicines() {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        return Collections.unmodifiableSet(medicines);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"        return orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    public void addOrderToPerson() {","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        person.addOrder(this);","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if both orders have the same order number.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"     * This defines a weaker notion of equality between two orders.","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"    public boolean isSameOrder(Order otherOrder) {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        if (otherOrder \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"        return otherOrder !\u003d null","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"                \u0026\u0026 otherOrder.getOrderNumber().equals(getOrderNumber());","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if both orders have the same identity and data fields.","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"        return orderNumber.equals(otherOrder.orderNumber)","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"                \u0026\u0026 medicines.equals(otherOrder.medicines)","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"                \u0026\u0026 person.equals(otherOrder.person)","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"                \u0026\u0026 orderStatus.equals(otherOrder.orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"        return Objects.hash(orderNumber, person, medicines, orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"orderNumber\", orderNumber)","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"                .add(\"person\", person)","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"                .add(\"medicines\", medicines)","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"                .add(\"status\", orderStatus)","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"LinWanLeii":8,"HEEaZ":16,"joeng03":7,"timetraveller-123":76}},{"path":"src/main/java/seedu/pharmhub/model/order/OrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":" * A list of orders that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":" * An order is considered unique by comparing using {@code Order#isSameOrder(Order)}. As such, adding of","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":" * orders uses Order#isSameOrder(Order) for equality so as to ensure that the order being added or updated is","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":" * unique in terms of identity in the OrderList.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":" * @see Order#isSameOrder(Order)","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"public class OrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if the list contains an equivalent order as the given argument.","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOrder);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"     * Adds an order to the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"     * Removes the equivalent order from the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"     * The order must exist in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"    public void remove(Order toRemove) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"     * Deletes orders in this list which belong to given person.","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"     * @param person","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"    public void removeOrdersWithPerson(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cOrder\u003e temp \u003d internalList.stream().filter(x -\u003e !x.getPerson().equals(person))","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"        this.setOrders(temp);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"     * Edits orders in this list which belong to given person.","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"     * @param person","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"    public void editOrdersWithPerson(Person person, Person newPerson) {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cOrder\u003e temp \u003d internalList.stream().map(x -\u003e x.getPerson().equals(person)","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"                ? new Order(x.getOrderNumber(), newPerson, x.getMedicines(), x.getStatus()) : x)","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"        this.setOrders(temp);","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"     * Gets an order from the orderList based on its orderNumber.","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"     * @param orderNumber","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"     * @return Order with specified orderNumber, if any.","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"    public Optional\u003cOrder\u003e getOrder(String orderNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"        Stream\u003cOrder\u003e filtered \u003d internalList.stream().filter(order -\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"                order.getOrderNumber().toString().equals(orderNumber));","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        return filtered.findFirst();","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"    public void setOrders(OrderList replacement) {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"     * Replaces the contents of this list with {@code orders}.","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"        if (!target.isSameOrder(editedOrder) \u0026\u0026 contains(editedOrder)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"timetraveller-123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof OrderList)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"timetraveller-123"},"content":"        OrderList orderList \u003d (OrderList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.equals(orderList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"timetraveller-123"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"timetraveller-123"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"LinWanLeii":21,"HEEaZ":11,"joeng03":5,"timetraveller-123":130}},{"path":"src/main/java/seedu/pharmhub/model/order/OrderNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":" * Represents an Order\u0027s order number in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOrderNumber(String)}","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"public class OrderNumber {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"            \"Order numbers should only contain numbers, and it should be at least 1 digit long\";","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+$\";","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"    public final String value;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"     * Constructs a {@code OrderNumber}.","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"     * @param orderNumber A valid order number.","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    public OrderNumber(String orderNumber) {","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        requireNonNull(orderNumber);","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"        checkArgument(isValidOrderNumber(orderNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"        value \u003d orderNumber;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"     * Returns true if a given string is a valid order number.","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    public static boolean isValidOrderNumber(String test) {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        return this.value;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        if (!(other instanceof OrderNumber)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"        OrderNumber otherOrderNumber \u003d (OrderNumber) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        return value.equals(otherOrderNumber.value);","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"joeng03":3,"timetraveller-123":60}},{"path":"src/main/java/seedu/pharmhub/model/order/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import seedu.pharmhub.model.order.exceptions.InvalidStatusException;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * Represents a Status of a order.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * Guarantees: Status is valid as declared in {@link #isValidOrderStatus(OrderStatus)}","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"public class Status {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"     * Represents the status that are available for the orders.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    public enum OrderStatus {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"        PENDING,","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"        PREPARING,","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        COMPLETED,","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        CANCELLED","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Order Status can only be \"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"            + OrderStatus.PENDING + (\"/PD, \")","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"            + OrderStatus.PREPARING + (\"/PR, \")","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"            + OrderStatus.COMPLETED + (\"/CP, \")","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"            + OrderStatus.CANCELLED + (\"/CC\");","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    private final OrderStatus orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     * @param orderStatus A valid status for an order.","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    public Status(OrderStatus orderStatus) {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        assert isValidOrderStatus(orderStatus)","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"                : \"OrderStatus can only be PENDING/PREPARING/COMPLETED/CANCELLED\";","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        checkArgument(isValidOrderStatus(orderStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"        this.orderStatus \u003d orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"     * Gets the OrderStatus of the Status.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"     * @return The orderStatus.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"    public OrderStatus getStatus() {","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        return orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"     * Converts String to order Status.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"     * @param status The status of the order.","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"    public static OrderStatus toOrderStatus(String status) {","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"        assert isValidOrderStatus(status)","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"                : \"OrderStatus can only be PENDING/PREPARING/COMPLETED/CANCELLED\";","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        checkArgument(isValidOrderStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"        for (OrderStatus validStatus : OrderStatus.values()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"            if (validStatus.toString().equals(status.toUpperCase())) {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"                return validStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"        return null;","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"     * Returns true if a given orderStatus is a valid status.","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"    public static boolean isValidOrderStatus(OrderStatus orderStatus) {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"        for (OrderStatus validStatus : OrderStatus.values()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"            if (orderStatus \u003d\u003d validStatus) {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"        return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"     * Returns true if a given orderStatus is a valid status.(For String)","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"    public static boolean isValidOrderStatus(String orderStatus) {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"        for (OrderStatus validStatus : OrderStatus.values()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"            if (validStatus.toString().equalsIgnoreCase(orderStatus)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"        return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"     * Returns where the status input is in chronological order.","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"     * @param oldStatus The old Status.","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"     * @param newStatus The new Status.","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"     * @return Whether the New Status is valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"    public static boolean isValidChronologicalStatus(OrderStatus oldStatus, OrderStatus newStatus) {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"        switch (oldStatus) {","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"        case PENDING:","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"            return newStatus !\u003d OrderStatus.PENDING;","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"        case PREPARING:","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"            return !(newStatus \u003d\u003d OrderStatus.PENDING","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"                    || newStatus \u003d\u003d OrderStatus.PREPARING);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"        case COMPLETED:","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"            return !(newStatus \u003d\u003d OrderStatus.PENDING","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"                    || newStatus \u003d\u003d OrderStatus.PREPARING","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"                        || newStatus \u003d\u003d OrderStatus.COMPLETED);","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"        case CANCELLED:","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"        default:","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"     * Testing whether the input is a valid short form.","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"     * @param shortForm The input short form.","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"     * @return The boolean on if it is true.","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"LinWanLeii"},"content":"    public static boolean isValidShortForm(String shortForm) {","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"        String sf \u003d shortForm.toLowerCase().trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"        if (sf.equalsIgnoreCase(\"pd\") || sf.equalsIgnoreCase(\"pr\")","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"HEEaZ"},"content":"                || sf.equalsIgnoreCase(\"cp\") || sf.equalsIgnoreCase(\"cc\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"LinWanLeii"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"LinWanLeii"},"content":"        return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"LinWanLeii"},"content":"     * Returns a OrderStatus from the short form provided.","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"LinWanLeii"},"content":"     * @param shortForm The short form given.","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"LinWanLeii"},"content":"     * @return The orderStatus it converted to.","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"LinWanLeii"},"content":"     * @throws CommandException If the short form provided is not valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"LinWanLeii"},"content":"    public static String shortFormToFull(String shortForm) throws InvalidStatusException {","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"LinWanLeii"},"content":"        assert !shortForm.equals(\"\") : MESSAGE_CONSTRAINTS + \"Cannot be empty\";","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"LinWanLeii"},"content":"        if (isValidOrderStatus(shortForm.toUpperCase())) {","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"LinWanLeii"},"content":"            return shortForm;","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"LinWanLeii"},"content":"        if (!isValidShortForm(shortForm)) {","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"LinWanLeii"},"content":"            throw new InvalidStatusException();","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"LinWanLeii"},"content":"        requireNonNull(shortForm);","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"LinWanLeii"},"content":"        String sf \u003d shortForm.toLowerCase().trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"LinWanLeii"},"content":"        switch (sf) {","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"LinWanLeii"},"content":"        case \"pd\":","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"LinWanLeii"},"content":"            return \"PENDING\";","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"LinWanLeii"},"content":"        case \"pr\":","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"LinWanLeii"},"content":"            return \"PREPARING\";","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"HEEaZ"},"content":"        case \"cp\":","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"LinWanLeii"},"content":"            return \"COMPLETED\";","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"LinWanLeii"},"content":"        case \"cc\":","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"LinWanLeii"},"content":"            return \"CANCELLED\";","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"LinWanLeii"},"content":"        default:","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"LinWanLeii"},"content":"            return null;","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"LinWanLeii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"LinWanLeii"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"LinWanLeii"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"LinWanLeii"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"LinWanLeii"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"LinWanLeii"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"LinWanLeii"},"content":"        Status otherAllergy \u003d (Status) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"LinWanLeii"},"content":"        return orderStatus.equals(otherAllergy.orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"LinWanLeii"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"LinWanLeii"},"content":"        return orderStatus.hashCode();","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"LinWanLeii"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"LinWanLeii"},"content":"        return orderStatus.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":194,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":195,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":196,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":189,"HEEaZ":4,"joeng03":3}},{"path":"src/main/java/seedu/pharmhub/model/order/exceptions/DuplicateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":" * Signals that the operation will result in duplicate Orders (Orders are considered duplicates if they have the same","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":" * identity).","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"public class DuplicateOrderException extends RuntimeException {","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"    public DuplicateOrderException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"        super(\"Operation would result in duplicate orders\");","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"joeng03":1,"timetraveller-123":10}},{"path":"src/main/java/seedu/pharmhub/model/order/exceptions/InvalidStatusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package seedu.pharmhub.model.order.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":" * Signals that the operation is unable to find the specified order.","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"public class InvalidStatusException extends RuntimeException {","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    public InvalidStatusException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"        super(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"LinWanLeii":14}},{"path":"src/main/java/seedu/pharmhub/model/order/exceptions/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":" * Signals that the operation is unable to find the specified order.","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"public class OrderNotFoundException extends RuntimeException { }","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"joeng03":1,"timetraveller-123":7}},{"path":"src/main/java/seedu/pharmhub/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":" * Represents a Person\u0027s address in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":3,"-":62}},{"path":"src/main/java/seedu/pharmhub/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":" * Represents a Person\u0027s email in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":3,"-":76}},{"path":"src/main/java/seedu/pharmhub/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":" * Represents a Person\u0027s name in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"            \"Names should only contain alphanumeric characters, spaces, dots, slashes, hyphens \"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"                     + \", single-quotes and it should not be blank\";","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[[a-zA-Z]|\\\\/|\\\\-|\u0027|.|[0-9]][[A-z]|\\\\/|\\\\s|\\\\-|\u0027|.|[0-9]]*$\";","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"        return fullName.trim().equalsIgnoreCase(otherName.fullName.trim());","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HEEaZ":1,"joeng03":3,"-":61,"timetraveller-123":3}},{"path":"src/main/java/seedu/pharmhub/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.StringUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"joeng03":3,"-":41}},{"path":"src/main/java/seedu/pharmhub/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.InfoObject;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":" * Represents a Person in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"public class Person implements InfoObject {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    private final Set\u003cAllergy\u003e allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    private final Set\u003cOrder\u003e orders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cAllergy\u003e allergies,","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"                  Set\u003cOrder\u003e orders) {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"        requireAllNonNull(name, phone, email, address, tags, allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        this.allergies.addAll(allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"     * Returns an immutable allergy set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"    public Set\u003cAllergy\u003e getAllergies() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        return Collections.unmodifiableSet(allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"     * Returns an immutable order set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"    public Set\u003cOrder\u003e getOrders() {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"        return Collections.unmodifiableSet(orders);","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"    public void setOrders(Set\u003cOrder\u003e newOrders) {","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"        orders.clear();","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"        orders.addAll(newOrders);","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"    public void clearOrders() {","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"        orders.clear();","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"     * Adds an order to the person.","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"     * @param o The order to be added.","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"    public void addOrder(Order o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"        this.orders.add(o);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"     * Removes an order from the person.","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"     * @param o The order to be removed.","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"    public void removeOrder(Order o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"        this.orders.remove(o);","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"     * Replaces an order in the person.","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"     * @param oldOrder The order to be replaced.","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"     * @param newOrder The new order.","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"HEEaZ"},"content":"    public void replaceOrder(Order oldOrder, Order newOrder) {","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"        this.orders.remove(oldOrder);","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"        this.orders.add(newOrder);","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"joeng03"},"content":"     * Returns true if the person is allergic to the medicine.","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"timetraveller-123"},"content":"    public boolean isAllergicTo(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"timetraveller-123"},"content":"        return allergies.stream().anyMatch(allergy -\u003e allergy.getAllery().isSameMedicine(medicine));","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"HEEaZ"},"content":"     * Returns true if the person is allergic to any of the given medicines.","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"timetraveller-123"},"content":"    public boolean isAllergicToAny(Set\u003cMedicine\u003e medicines) {","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"timetraveller-123"},"content":"        return medicines.stream().anyMatch(medicine -\u003e isAllergicTo(medicine));","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"HEEaZ"},"content":"    public boolean hasOrderConflicts() {","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"HEEaZ"},"content":"        return orders.stream().anyMatch(o -\u003e isAllergicToAny(o.getMedicines()));","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"joeng03"},"content":"                \u0026\u0026 allergies.equals(otherPerson.allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"joeng03"},"content":"        return Objects.hash(name, phone, email, address, tags, allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"joeng03"},"content":"                .add(\"allergies\", allergies)","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HEEaZ":57,"joeng03":29,"-":107,"timetraveller-123":4}},{"path":"src/main/java/seedu/pharmhub/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":" * Represents a Person\u0027s phone number in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":3,"-":58}},{"path":"src/main/java/seedu/pharmhub/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":4,"-":146}},{"path":"src/main/java/seedu/pharmhub/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"joeng03":1,"-":10}},{"path":"src/main/java/seedu/pharmhub/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person.exceptions;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"joeng03":1,"-":5}},{"path":"src/main/java/seedu/pharmhub/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":" * Represents a Tag in the PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeng03":3,"-":59}},{"path":"src/main/java/seedu/pharmhub/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":" * Contains utility methods for populating {@code PharmHub} with sample data.","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    public static final HashSet\u003cOrder\u003e EMPTY_ORDERS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"        return new Person[]{ new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"                        getTagSet(\"friends\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"                        getAllergySet(\"Paracetamol\", \"Penicillin\"), EMPTY_ORDERS","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"                ), new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"                        getTagSet(\"colleagues\", \"friends\"), getAllergySet(\"Paracetamol\", \"Penicillin\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"                EMPTY_ORDERS","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"                ), new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"                        getTagSet(\"neighbours\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"                        getAllergySet(\"Paracetamol\"), EMPTY_ORDERS","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"                ), new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"                        getTagSet(\"family\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"                        getAllergySet(\"Penicillin\"), EMPTY_ORDERS","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"                ), new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"                        getTagSet(\"classmates\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"                        getAllergySet(\"Paracetamol\", \"Penicillin\"), EMPTY_ORDERS","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"                ), new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"                        getTagSet(\"colleagues\"),","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"                        getAllergySet(\"Paracetamol\"), EMPTY_ORDERS","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"                )","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"    public static ReadOnlyPharmHub getSamplePharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"        PharmHub sampleAb \u003d new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        sampleAb.addMedicine(new Medicine(\"Paracetamol\", \"par\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"        sampleAb.addMedicine(new Medicine(\"Panadol\", \"pan\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        sampleAb.addMedicine(new Medicine(\"Penicillin\", \"pen\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        sampleAb.addMedicine(new Medicine(\"Ibuprofen\", \"ibu\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"     * Returns an allergy set containing the list of strings given.","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"    public static Set\u003cAllergy\u003e getAllergySet(String... strings) {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"                .map(x -\u003e new Allergy(new Medicine(x)))","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"HEEaZ":10,"joeng03":36,"-":35,"timetraveller-123":5}},{"path":"src/main/java/seedu/pharmhub/storage/JsonAdaptedAllergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":" * Jackson-friendly version of {@link Allergy}.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"class JsonAdaptedAllergy {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"    private final JsonAdaptedMedicine allergy;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"     * Constructs a {@code JsonAdaptedAllergy} with the given {@code allergyName}.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    public JsonAdaptedAllergy(@JsonProperty(\"allergy\") JsonAdaptedMedicine allergy) {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"        this.allergy \u003d allergy;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"     * Converts a given {@code Allergy} into this class for Jackson use.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"    public JsonAdaptedAllergy(Allergy source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"        allergy \u003d new JsonAdaptedMedicine(source.allergy);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"     * Converts this Jackson-friendly adapted allergy object into the model\u0027s {@code Allergy} object.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted allergy.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    public Allergy toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        return new Allergy(allergy.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"joeng03":35,"timetraveller-123":6}},{"path":"src/main/java/seedu/pharmhub/storage/JsonAdaptedMedicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":" * Jackson-friendly version of {@link Medicine}.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"public class JsonAdaptedMedicine {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Medicine\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"    private final String medicineName;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"    private final String shortForm;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"     * Constructs a {@code JsonAdaptedMedicine} with the given medicine details.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    public JsonAdaptedMedicine(@JsonProperty(\"medicineName\") String medicineName,","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"                            @JsonProperty(\"shortForm\") String shortForm) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"        this.shortForm \u003d shortForm;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"     * Converts a given {@code Medicine} into this class for Jackson use.","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    public JsonAdaptedMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        this.medicineName \u003d medicine.getMedicineName();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        this.shortForm \u003d medicine.getShortForm();","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"     * Converts this Jackson-friendly adapted medicine object into the model\u0027s {@code Medicine} object.","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted medcine.","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"    public Medicine toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        if (medicineName \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"medicineName\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        if (shortForm \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"shortForm\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        if (!Medicine.isValidMedicineName(medicineName)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"            throw new IllegalValueException(Medicine.MESSAGE_MEDICINE_NAME_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"        if (!Medicine.isValidShortForm(shortForm)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"            throw new IllegalValueException(Medicine.MESSAGE_SHORT_FORM_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"        return new Medicine(medicineName, shortForm);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"joeng03":3,"timetraveller-123":61}},{"path":"src/main/java/seedu/pharmhub/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"public class JsonAdaptedOrder {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    private final String orderNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    private final JsonAdaptedPerson person;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    private final List\u003cJsonAdaptedMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    private final JsonAdaptedStatus orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"orderNumber\") String orderNumber,","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"                            @JsonProperty(\"person\") JsonAdaptedPerson person,","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"                            @JsonProperty(\"medicines\") List\u003cJsonAdaptedMedicine\u003e medicines,","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"                            @JsonProperty(\"status\") JsonAdaptedStatus orderStatus) {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        this.orderNumber \u003d orderNumber;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"        if (medicines !\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"            this.medicines.addAll(medicines);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        this.orderStatus \u003d orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"    public JsonAdaptedOrder(Order order) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"        this.orderNumber \u003d order.getOrderNumber().value;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"        this.person \u003d new JsonAdaptedPerson(order.getPerson());","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        medicines.addAll(order.getMedicines().stream().map(JsonAdaptedMedicine::new).collect(Collectors.toList()));","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        this.orderStatus \u003d new JsonAdaptedStatus(order.getStatus());","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        final List\u003cMedicine\u003e orderMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        for (JsonAdaptedMedicine medicine : medicines) {","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"            orderMedicines.add(medicine.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Person.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"        if (orderStatus \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"        final Person p \u003d person.toModelType();","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"        final Status s \u003d orderStatus.toModelType();","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        if (orderNumber \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"                    OrderNumber.class.getSimpleName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"        if (!OrderNumber.isValidOrderNumber(orderNumber)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"            throw new IllegalValueException(OrderNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"        if (orderMedicines.size() \u003c 1) {","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"medicines\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"        final Set\u003cMedicine\u003e modelMedicines \u003d new HashSet\u003c\u003e(orderMedicines);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"        return new Order(new OrderNumber(orderNumber), p, modelMedicines, s);","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"LinWanLeii":8,"HEEaZ":14,"joeng03":7,"timetraveller-123":73}},{"path":"src/main/java/seedu/pharmhub/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    private final List\u003cJsonAdaptedAllergy\u003e allergies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"            @JsonProperty(\"allergies\") List\u003cJsonAdaptedAllergy\u003e allergies) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        if (allergies !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"            this.allergies.addAll(allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"        allergies.addAll(source.getAllergies().stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"                .map(JsonAdaptedAllergy::new)","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        final List\u003cAllergy\u003e personAllergies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"        for (JsonAdaptedAllergy allergy : allergies) {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"            personAllergies.add(allergy.toModelType());","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"        final Set\u003cAllergy\u003e modelAllergies \u003d new HashSet\u003c\u003e(personAllergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelAllergies, new HashSet\u003c\u003e());","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"HEEaZ":1,"joeng03":27,"-":99}},{"path":"src/main/java/seedu/pharmhub/storage/JsonAdaptedStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * Jackson-friendly version of {@link Status}.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"class JsonAdaptedStatus {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    private final String orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs a {@code JsonAdaptedStatus} with the given {@code orderStatus}.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    public JsonAdaptedStatus(String orderStatus) {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        this.orderStatus \u003d orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     * Converts a given {@code Status} into this class for Jackson use.","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    public JsonAdaptedStatus(Status source) {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        this.orderStatus \u003d source.getStatus().toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    @JsonValue","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    public String getOrderStatus() {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"        return orderStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"     * Converts this Jackson-friendly adapted Status object into the model\u0027s {@code Status} object.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted status.","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    public Status toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        if (!Status.isValidOrderStatus(orderStatus)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"        return new Status(Status.OrderStatus.valueOf(orderStatus));","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":45,"joeng03":3}},{"path":"src/main/java/seedu/pharmhub/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"joeng03":3,"-":45}},{"path":"src/main/java/seedu/pharmhub/storage/JsonPharmHubStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.FileUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.JsonUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":" * A class to access PharmHub data stored as a json file on the hard disk.","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"public class JsonPharmHubStorage implements PharmHubStorage {","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPharmHubStorage.class);","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"    private Path filePath;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    public JsonPharmHubStorage(Path filePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"    public Path getPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"        return filePath;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"    public Optional\u003cReadOnlyPharmHub\u003e readPharmHub() throws DataLoadingException {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"        return readPharmHub(filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"     * Similar to {@link #readPharmHub()}.","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"    public Optional\u003cReadOnlyPharmHub\u003e readPharmHub(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"        Optional\u003cJsonSerializablePharmHub\u003e jsonPharmHub \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"                filePath, JsonSerializablePharmHub.class);","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        if (!jsonPharmHub.isPresent()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"            return Optional.empty();","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"            return Optional.of(jsonPharmHub.get().toModelType());","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"    public void savePharmHub(ReadOnlyPharmHub pharmHub) throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"        savePharmHub(pharmHub, filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"     * Similar to {@link #savePharmHub(ReadOnlyPharmHub)}.","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"    public void savePharmHub(ReadOnlyPharmHub pharmHub, Path filePath) throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"        requireNonNull(pharmHub);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePharmHub(pharmHub), filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":80}},{"path":"src/main/java/seedu/pharmhub/storage/JsonSerializablePharmHub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":" * An Immutable PharmHub that is serializable to JSON format.","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"@JsonRootName(value \u003d \"pharmhub\")","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"class JsonSerializablePharmHub {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"Orders list contains duplicate order(s).\";","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_DUPLICATE_MEDICINE \u003d \"Medicines list contains duplicate medicine(s)\";","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"Order(s) belongs to person not in the Persons list\";","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    public static final String MESSAGE_INVALID_MEDICINE \u003d \"Data contains medicine(s) not in the medicine list\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    private final List\u003cJsonAdaptedMedicine\u003e medicineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"     * Constructs a {@code JsonSerializablePharmHub} with the given persons.","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"    public JsonSerializablePharmHub(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"                                       @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders,","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"                                       @JsonProperty(\"medicineList\") List\u003cJsonAdaptedMedicine\u003e medicineList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"        this.medicineList.addAll(medicineList);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"     * Converts a given {@code ReadOnlyPharmHub} into this class for Jackson use.","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"    public JsonSerializablePharmHub(ReadOnlyPharmHub source) {","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        medicineList.addAll(source.getMedicineList().stream().map(JsonAdaptedMedicine::new)","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"     * Converts this PharmHub into the model\u0027s {@code PharmHub} object.","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"    public PharmHub toModelType() throws IllegalValueException {","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"        PharmHub pharmHub \u003d new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        for (JsonAdaptedMedicine jsonAdaptedMedicine : medicineList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"            Medicine medicine \u003d jsonAdaptedMedicine.toModelType();","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"            if (pharmHub.hasMedicine(medicine)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEDICINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"            pharmHub.addMedicine(medicine);","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"            if (pharmHub.hasPerson(person)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"            Set\u003cMedicine\u003e allergyMedicines \u003d new HashSet\u003c\u003e(person.getAllergies().stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"                    .map(Allergy::getAllery).collect(Collectors.toList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"            Set\u003cMedicine\u003e convertedMedicines \u003d getMedicines(pharmHub, allergyMedicines);","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"            Set\u003cAllergy\u003e convertedAllergies \u003d new HashSet\u003c\u003e(convertedMedicines.stream().map(Allergy::new)","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"            Person newPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"                    person.getAddress(), person.getTags(), convertedAllergies, new HashSet\u003c\u003e());","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"            pharmHub.addPerson(newPerson);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType();","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"joeng03"},"content":"            if (pharmHub.hasOrder(order)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"            Person person \u003d pharmHub.getPersonList().stream().filter(order.getPerson()::isSamePerson)","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"                    .findFirst().orElseThrow(() -\u003e new IllegalValueException(MESSAGE_INVALID_PERSON));","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"joeng03"},"content":"            Set\u003cMedicine\u003e convertedMedicines \u003d getMedicines(pharmHub, order.getMedicines());","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"            Order toAdd \u003d new Order(order.getOrderNumber(), person, convertedMedicines, order.getStatus());","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"joeng03"},"content":"            pharmHub.addOrder(toAdd);","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"joeng03"},"content":"        return pharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"timetraveller-123"},"content":"     * Converts the given set of medicines to another set of medicines with medicine short forms expanded to","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"     * the full name of the medicine as it is in the given PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"timetraveller-123"},"content":"     * Throws Illegal Value exception if the given medicine name or its short form cannot be found in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"     * PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"    public static Set\u003cMedicine\u003e getMedicines(PharmHub ab, Set\u003cMedicine\u003e medicines) throws IllegalValueException {","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cMedicine\u003e convertedMedicines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"timetraveller-123"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"            Optional\u003cMedicine\u003e m \u003d ab.getMedicine(medicine);","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"            if (m.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"                throw new IllegalValueException(MESSAGE_INVALID_MEDICINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"            convertedMedicines.add(m.get());","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"        return convertedMedicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"HEEaZ":4,"joeng03":31,"-":35,"timetraveller-123":69}},{"path":"src/main/java/seedu/pharmhub/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.JsonUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"joeng03":5,"-":42}},{"path":"src/main/java/seedu/pharmhub/storage/PharmHubStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":" * Represents a storage for {@link seedu.pharmhub.model.PharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"public interface PharmHubStorage {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"    Path getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"     * Returns PharmHub data as a {@link ReadOnlyPharmHub}.","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    Optional\u003cReadOnlyPharmHub\u003e readPharmHub() throws DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"     * @see #getPharmHubFilePath()","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    Optional\u003cReadOnlyPharmHub\u003e readPharmHub(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"     * Saves the given {@link ReadOnlyPharmHub} to the storage.","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"     * @param pharmHub cannot be null.","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    void savePharmHub(ReadOnlyPharmHub pharmHub) throws IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"     * @see #savePharmHub(ReadOnlyPharmHub)","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    void savePharmHub(ReadOnlyPharmHub pharmHub, Path filePath) throws IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":45}},{"path":"src/main/java/seedu/pharmhub/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":" * API of the Storage component","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"public interface Storage extends PharmHubStorage, UserPrefsStorage {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"    Path getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"    Optional\u003cReadOnlyPharmHub\u003e readPharmHub() throws DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"    void savePharmHub(ReadOnlyPharmHub pharmHub) throws IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":32}},{"path":"src/main/java/seedu/pharmhub/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":" * Manages storage of PharmHub data in local storage.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"    private PharmHubStorage pharmHubStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"     * Creates a {@code StorageManager} with the given {@code PharmHubStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    public StorageManager(PharmHubStorage pharmHubStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"        this.pharmHubStorage \u003d pharmHubStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PharmHub methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"    public Path getPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"        return pharmHubStorage.getPharmHubFilePath();","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"    public Optional\u003cReadOnlyPharmHub\u003e readPharmHub() throws DataLoadingException {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        return readPharmHub(pharmHubStorage.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"    public Optional\u003cReadOnlyPharmHub\u003e readPharmHub(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"        return pharmHubStorage.readPharmHub(filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"    public void savePharmHub(ReadOnlyPharmHub pharmHub) throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"        savePharmHub(pharmHub, pharmHubStorage.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"    public void savePharmHub(ReadOnlyPharmHub pharmHub, Path filePath) throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"        pharmHubStorage.savePharmHub(pharmHub, filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":78}},{"path":"src/main/java/seedu/pharmhub/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":" * Represents a storage for {@link seedu.pharmhub.model.UserPrefs}.","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"     * Saves the given {@link seedu.pharmhub.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"joeng03":6,"-":30}},{"path":"src/main/java/seedu/pharmhub/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.CommandResult;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"         * @see seedu.pharmhub.logic.Logic#execute(String)","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"joeng03":5,"-":80}},{"path":"src/main/java/seedu/pharmhub/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w08-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joeng03":3,"-":99}},{"path":"src/main/java/seedu/pharmhub/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Logic;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.CommandResult;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.InfoObject;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    private MedicineListPanel medicineListPanel;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    private OrderDisplay orderDisplay;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    private StackPane infoDisplayPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"HEEaZ"},"content":"        personListPanel \u003d new PersonListPanel(this, logic.getFilteredPersonList());","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"HEEaZ"},"content":"        orderListPanel \u003d new OrderListPanel(this, logic.getFilteredOrderList());","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"timetraveller-123"},"content":"        medicineListPanel \u003d new MedicineListPanel(this, logic.getFilteredMedicineList());","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"        listPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"HEEaZ"},"content":"    private void handleListPanelDisplay(CommandResult.ListPanelEffects panelToShow) {","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"HEEaZ"},"content":"        assert (panelToShow !\u003d CommandResult.ListPanelEffects.NO_EFFECT);","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"timetraveller-123"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"timetraveller-123"},"content":"        if (panelToShow \u003d\u003d CommandResult.ListPanelEffects.PERSON) {","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"timetraveller-123"},"content":"            listPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"timetraveller-123"},"content":"        } else if (panelToShow \u003d\u003d CommandResult.ListPanelEffects.ORDER) {","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"timetraveller-123"},"content":"            listPanelPlaceholder.getChildren().add(orderListPanel.getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"timetraveller-123"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"timetraveller-123"},"content":"            listPanelPlaceholder.getChildren().add(medicineListPanel.getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"HEEaZ"},"content":"    protected void handleDisplayInfo(InfoObject objectToDisplay) {","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"HEEaZ"},"content":"        assert(objectToDisplay instanceof Order || objectToDisplay instanceof Person);","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"HEEaZ"},"content":"        if (objectToDisplay instanceof Order) {","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"HEEaZ"},"content":"            Order order \u003d (Order) objectToDisplay;","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"HEEaZ"},"content":"            OrderDisplay orderDisplay \u003d new OrderDisplay(order);","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"HEEaZ"},"content":"            infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"HEEaZ"},"content":"            infoDisplayPlaceholder.getChildren().add(orderDisplay.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"HEEaZ"},"content":"        } else if (objectToDisplay instanceof Person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"HEEaZ"},"content":"            Person person \u003d (Person) objectToDisplay;","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"HEEaZ"},"content":"            PersonDisplay personDisplay \u003d new PersonDisplay(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"HEEaZ"},"content":"            infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"HEEaZ"},"content":"            infoDisplayPlaceholder.getChildren().add(personDisplay.getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"HEEaZ"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"HEEaZ"},"content":"            throw new RuntimeException(\"Invalid object to display\");","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"joeng03"},"content":"     * @see seedu.pharmhub.logic.Logic#execute(String)","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"HEEaZ"},"content":"            if (commandResult.getListPanelEffects() !\u003d CommandResult.ListPanelEffects.NO_EFFECT) {","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"HEEaZ"},"content":"                handleListPanelDisplay(commandResult.getListPanelEffects());","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"HEEaZ"},"content":"            if (commandResult.hasInfoObject()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"HEEaZ"},"content":"                handleDisplayInfo(commandResult.getInfoObject());","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LinWanLeii":2,"HEEaZ":34,"joeng03":12,"-":184,"timetraveller-123":11}},{"path":"src/main/java/seedu/pharmhub/ui/MedicineCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":" * A UI component that displays information of a {@code Medicine}.","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"public class MedicineCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"    private static final String FXML \u003d \"MedicineListCard.fxml\";","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"    public final Medicine medicine;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"    // FXML Elements","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    private Label medicineName;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    private Label shortForm;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    private Label id;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"     * Creates a {@code MedicineCode} with the given {@code Medicine} and index to display.","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    public MedicineCard(Medicine medicine, int displayedIndex) {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        super(FXML);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"        this.medicine \u003d medicine;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        medicineName.setText(medicine.getMedicineName());","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        if (medicine.hasShortForm()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"            shortForm.setText(\"Shortform: \" + medicine.getShortForm());","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"HEEaZ":4,"joeng03":2,"timetraveller-123":36}},{"path":"src/main/java/seedu/pharmhub/ui/MedicineListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"public class MedicineListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"    private static final String FXML \u003d \"MedicineListPanel.fxml\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    private final MainWindow mw;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    private ListView\u003cMedicine\u003e medicineListView;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"     * Creates a {@code MedicineListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    public MedicineListPanel(MainWindow mw, ObservableList\u003cMedicine\u003e medicineList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"        super(FXML);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"        this.mw \u003d mw;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        medicineListView.setItems(medicineList);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        medicineListView.setCellFactory(listView -\u003e new MedicineListPanel.MedicineListViewCell());","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Medicine} using an {@code MedicineCard}.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    class MedicineListViewCell extends ListCell\u003cMedicine\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        protected void updateItem(Medicine medicine, boolean empty) {","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"            super.updateItem(medicine, empty);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"            if (empty || medicine \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"                setGraphic(null);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"                setText(null);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"                setGraphic(new MedicineCard(medicine, getIndex() + 1).getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"joeng03":3,"timetraveller-123":47}},{"path":"src/main/java/seedu/pharmhub/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":" * A UI component that displays information of a {@code Order}.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    public final Order order;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    // FXML Elements","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    private Label orderNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    private Label personName;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    private Label address;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    private FlowPane medicines;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    private Label id;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    private Label status;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"     * Creates a {@code OrderCode} with the given {@code Order} and index to display.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        super(FXML);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        this.order \u003d order;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        orderNumber.setText(\"Order #\" + order.getOrderNumber());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"        personName.setText(order.getPerson().getName().fullName);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        address.setText(order.getPerson().getAddress().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        order.getMedicines().stream().map(Medicine::getMedicineName)","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"                .sorted()","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"                .forEach(medicine -\u003e medicines.getChildren().add(new Label(medicine)));","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"        status.setText(order.getStatus().toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        status.setWrapText(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"        // Set the appropriate CSS style class based on the status","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        String statusStyleClass \u003d \"status-\" + order.getStatus().toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"        status.getStyleClass().add(statusStyleClass);","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"LinWanLeii":8,"HEEaZ":42,"joeng03":3,"timetraveller-123":3}},{"path":"src/main/java/seedu/pharmhub/ui/OrderDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.StringUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"public class OrderDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    private static final String FXML \u003d \"OrderDisplay.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    private Order order;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    private Label orderNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    private Label orderPerson;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    private Label orderDetails;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"    private Label status;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     * Creates the order display.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"    public OrderDisplay(Order order) {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/OrderDisplay.fxml\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        orderNumber.setText(order.getOrderNumber().toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        orderPerson.setText(order.getPerson().getName().fullName);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        orderDetails.setText(StringUtil.setToStr(order.getMedicines()));","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"        status.setText(order.getStatus().toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        status.setWrapText(true);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"        // Set the appropriate CSS style class based on the status","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        String statusStyleClass \u003d \"status-\" + order.getStatus().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"        status.getStyleClass().add(statusStyleClass);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"LinWanLeii":49,"HEEaZ":3,"joeng03":3,"timetraveller-123":1}},{"path":"src/main/java/seedu/pharmhub/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    private final MainWindow mw;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public OrderListPanel(MainWindow mw, ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        super(FXML);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        this.mw \u003d mw;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListPanel.OrderListViewCell());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Order} using an {@code OrderCard}.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"            super.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"                logger.info(String.format(\"Order #%s clicked\", order.getOrderNumber()));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"                mw.handleDisplayInfo(order);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"            });","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"                setText(null);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HEEaZ":51,"joeng03":3}},{"path":"src/main/java/seedu/pharmhub/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/PharmHub-level4/issues/336\"\u003eThe issue on PharmHub level 4\u003c/a\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"    private FlowPane allergies;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"        person.getAllergies().stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"                .sorted(Comparator.comparing(allergy -\u003e allergy.allergy.getMedicineName()))","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"                .forEach(allergy -\u003e allergies.getChildren().add(new Label(allergy.allergy.getMedicineName())));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"joeng03":7,"-":56,"timetraveller-123":2}},{"path":"src/main/java/seedu/pharmhub/ui/PersonDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.EnumMap;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.StringUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":" * An ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"public class PersonDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    private static final String FXML \u003d \"PersonDisplay.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    private Label name;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    private Label address;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    private Label phoneNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    private Label email;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    private Label allergies;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    private VBox pendingOrderVbox;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    private VBox preparingOrderVbox;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    private VBox completedOrderVbox;","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    private VBox cancelledOrderVbox;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"     * Creates the person display.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"    public PersonDisplay(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"        super(FXML);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        phoneNumber.setText(person.getPhone().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        allergies.setText(StringUtil.setToStr(person.getAllergies()));","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        EnumMap\u003cStatus.OrderStatus, Integer\u003e indexes \u003d new EnumMap\u003c\u003e(Status.OrderStatus.class);","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        for (Status.OrderStatus e : Status.OrderStatus.values()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"            indexes.put(e, 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        person.getOrders().forEach(o -\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"            switch (o.getStatus().getStatus()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"            case PENDING:","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"                pendingOrderVbox.getChildren().add(","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"                        new PersonDisplayOrderCard(o, indexes.get(Status.OrderStatus.PENDING)).getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"                indexes.put(Status.OrderStatus.PENDING, indexes.get(Status.OrderStatus.PENDING) + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"            case PREPARING:","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"                preparingOrderVbox.getChildren().add(","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"                        new PersonDisplayOrderCard(o, indexes.get(Status.OrderStatus.PREPARING)).getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"                indexes.put(Status.OrderStatus.PREPARING, indexes.get(Status.OrderStatus.PREPARING) + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"            case COMPLETED:","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"                completedOrderVbox.getChildren().add(","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"                        new PersonDisplayOrderCard(o, indexes.get(Status.OrderStatus.COMPLETED)).getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"                indexes.put(Status.OrderStatus.COMPLETED, indexes.get(Status.OrderStatus.COMPLETED) + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"            case CANCELLED:","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"                cancelledOrderVbox.getChildren().add(","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"                        new PersonDisplayOrderCard(o, indexes.get(Status.OrderStatus.CANCELLED)).getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"                indexes.put(Status.OrderStatus.CANCELLED, indexes.get(Status.OrderStatus.CANCELLED) + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"            default:","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"                throw new RuntimeException(\"Unknown order status type: \" + o.getStatus().getStatus());","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"        });","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"HEEaZ":80,"joeng03":4}},{"path":"src/main/java/seedu/pharmhub/ui/PersonDisplayOrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":" * A UI component that displays information of a {@code Order}.","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"public class PersonDisplayOrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    private static final String FXML \u003d \"PersonDisplayOrderListCard.fxml\";","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    public final Order order;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    // FXML Elements","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    private Label orderNumber;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    private Label personName;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    private FlowPane medicines;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    private Label id;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    private Label status;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"     * Creates a {@code OrderCode} with the given {@code Order} and index to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"    public PersonDisplayOrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        super(FXML);","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        this.order \u003d order;","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        orderNumber.setText(\"Order #\" + order.getOrderNumber());","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        personName.setText(order.getPerson().getName().fullName);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        order.getMedicines().stream().map(Medicine::getMedicineName)","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"                .sorted()","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"                .forEach(medicine -\u003e medicines.getChildren().add(new Label(medicine)));","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        status.setText(order.getStatus().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        status.setWrapText(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        // Set the appropriate CSS style class based on the status","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        String statusStyleClass \u003d \"status-\" + order.getStatus().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"        status.getStyleClass().add(statusStyleClass);","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":50,"joeng03":3}},{"path":"src/main/java/seedu/pharmhub/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    private final MainWindow mw;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public PersonListPanel(MainWindow mw, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        this.mw \u003d mw;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"            super.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"                logger.info(String.format(\"Person \u0027%s\u0027 clicked\", person.getName().fullName));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"                mw.handleDisplayInfo(person);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"            });","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"HEEaZ":7,"joeng03":3,"-":45}},{"path":"src/main/java/seedu/pharmhub/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joeng03":1,"-":27}},{"path":"src/main/java/seedu/pharmhub/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":1,"-":27}},{"path":"src/main/java/seedu/pharmhub/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"joeng03":1,"-":12}},{"path":"src/main/java/seedu/pharmhub/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.MainApp;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.LogsCenter;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.StringUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Logic;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joeng03":5,"-":83}},{"path":"src/main/java/seedu/pharmhub/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.MainApp;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joeng03":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":".person-display \u003e .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"HEEaZ"},"content":".person_display_cell_big_label {","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"HEEaZ"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"HEEaZ"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"HEEaZ"},"content":".person_display_cell_small_label {","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"HEEaZ"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"HEEaZ"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"HEEaZ"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"LinWanLeii"},"content":".cell_order_label {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"LinWanLeii"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"LinWanLeii"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"LinWanLeii"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"LinWanLeii"},"content":".cell_detail_label {","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"LinWanLeii"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"LinWanLeii"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"LinWanLeii"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":173,"author":{"gitId":"HEEaZ"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"HEEaZ"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"timetraveller-123"},"content":"#tags, #allergies, #medicines, #shortForm {","lastModifiedDate":"2023-11-01"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"HEEaZ"},"content":"#tags .label, #allergies .label, #medicines .label{","lastModifiedDate":"2023-10-30"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":385,"author":{"gitId":"joeng03"},"content":"#tags .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-18"},{"lineNumber":387,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":388,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":389,"author":{"gitId":"joeng03"},"content":"#allergies .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":390,"author":{"gitId":"joeng03"},"content":"    -fx-background-color: #ff7377;","lastModifiedDate":"2023-10-18"},{"lineNumber":391,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":392,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":393,"author":{"gitId":"HEEaZ"},"content":"#medicines .label {","lastModifiedDate":"2023-10-30"},{"lineNumber":394,"author":{"gitId":"HEEaZ"},"content":"    -fx-background-color: #40A347;","lastModifiedDate":"2023-10-30"},{"lineNumber":395,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":396,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":397,"author":{"gitId":"timetraveller-123"},"content":"#shortForm .label {","lastModifiedDate":"2023-11-01"},{"lineNumber":398,"author":{"gitId":"timetraveller-123"},"content":"    -fx-background-color: #00FF00;","lastModifiedDate":"2023-11-01"},{"lineNumber":399,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":401,"author":{"gitId":"LinWanLeii"},"content":".status-PENDING {","lastModifiedDate":"2023-10-30"},{"lineNumber":402,"author":{"gitId":"LinWanLeii"},"content":"    -fx-background-color: #ff4500;","lastModifiedDate":"2023-10-30"},{"lineNumber":403,"author":{"gitId":"LinWanLeii"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-30"},{"lineNumber":404,"author":{"gitId":"LinWanLeii"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":405,"author":{"gitId":"LinWanLeii"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":406,"author":{"gitId":"LinWanLeii"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":407,"author":{"gitId":"LinWanLeii"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-30"},{"lineNumber":408,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":409,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":410,"author":{"gitId":"LinWanLeii"},"content":".status-PREPARING {","lastModifiedDate":"2023-10-30"},{"lineNumber":411,"author":{"gitId":"LinWanLeii"},"content":"    -fx-background-color: #00008b;","lastModifiedDate":"2023-10-30"},{"lineNumber":412,"author":{"gitId":"LinWanLeii"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-30"},{"lineNumber":413,"author":{"gitId":"LinWanLeii"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":414,"author":{"gitId":"LinWanLeii"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":415,"author":{"gitId":"LinWanLeii"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":416,"author":{"gitId":"LinWanLeii"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-30"},{"lineNumber":417,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":418,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":419,"author":{"gitId":"LinWanLeii"},"content":".status-COMPLETED{","lastModifiedDate":"2023-10-30"},{"lineNumber":420,"author":{"gitId":"LinWanLeii"},"content":"    -fx-background-color: #006400;","lastModifiedDate":"2023-10-30"},{"lineNumber":421,"author":{"gitId":"LinWanLeii"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-30"},{"lineNumber":422,"author":{"gitId":"LinWanLeii"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":423,"author":{"gitId":"LinWanLeii"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":424,"author":{"gitId":"LinWanLeii"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":425,"author":{"gitId":"LinWanLeii"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-30"},{"lineNumber":426,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":427,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":428,"author":{"gitId":"LinWanLeii"},"content":".status-OTHERS {","lastModifiedDate":"2023-10-30"},{"lineNumber":429,"author":{"gitId":"LinWanLeii"},"content":"    -fx-background-color: #000000;","lastModifiedDate":"2023-10-30"},{"lineNumber":430,"author":{"gitId":"LinWanLeii"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-30"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-30"},{"lineNumber":435,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":41,"HEEaZ":27,"-":355,"timetraveller-123":5,"joeng03":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"         title\u003d\"PharmHub App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"          \u003cHBox VBox.vgrow\u003d\"ALWAYS\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"            \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" minWidth\u003d\"325\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"            \u003cStackPane fx:id\u003d\"infoDisplayPlaceholder\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"LinWanLeii":4,"HEEaZ":2,"-":58}},{"path":"src/main/resources/view/MedicineListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"timetraveller-123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"                \u003cLabel fx:id\u003d\"medicineName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"            \u003cLabel fx:id\u003d\"shortForm\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"HEEaZ":1,"timetraveller-123":32}},{"path":"src/main/resources/view/MedicineListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"timetraveller-123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"    \u003cListView fx:id\u003d\"medicineListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"timetraveller-123":9}},{"path":"src/main/resources/view/OrderDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"  \u003cVBox spacing\u003d\"20\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Order Number: \" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"      \u003cLabel fx:id\u003d\"orderNumber\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"      \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$status\" style\u003d\"-fx-font-size: 20px;\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Name: \" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"      \u003cLabel fx:id\u003d\"orderPerson\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Medication: \" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"      \u003cLabel fx:id\u003d\"orderDetails\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"LinWanLeii":26}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        \u003cLabel fx:id\u003d\"orderNumber\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"        \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"personName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"      \u003cFlowPane fx:id\u003d\"medicines\" /\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"LinWanLeii":1,"HEEaZ":35}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"  \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HEEaZ":8}},{"path":"src/main/resources/view/PersonDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"\u003cScrollPane styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"  \u003cVBox spacing\u003d\"20\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Name: \" underline\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Address: \" underline\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Phone Number: \" underline\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"phoneNumber\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Email: \" underline\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    \u003cHBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Allergies: \" underline\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"allergies\" styleClass\u003d\"cell_order_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    \u003cVBox fx:id\u003d\"pendingOrderVbox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Orders pending: \" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    \u003cVBox fx:id\u003d\"preparingOrderVbox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Orders preparing: \" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    \u003cVBox fx:id\u003d\"completedOrderVbox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Orders completed: \" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"    \u003cVBox fx:id\u003d\"cancelledOrderVbox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel styleClass\u003d\"cell_order_label\" text\u003d\"Orders cancelled: \" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":51}},{"path":"src/main/resources/view/PersonDisplayOrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"person_display_cell_big_label\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        \u003cLabel fx:id\u003d\"orderNumber\" text\u003d\"\\$first\" styleClass\u003d\"person_display_cell_big_label\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"      \u003cLabel fx:id\u003d\"personName\" styleClass\u003d\"person_display_cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"      \u003cFlowPane fx:id\u003d\"medicines\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":35}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"      \u003cFlowPane fx:id\u003d\"allergies\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":36,"joeng03":1}},{"path":"src/test/java/seedu/pharmhub/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"joeng03":1,"-":88}},{"path":"src/test/java/seedu/pharmhub/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"joeng03":1,"-":26}},{"path":"src/test/java/seedu/pharmhub/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"joeng03":1,"-":15}},{"path":"src/test/java/seedu/pharmhub/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":2,"-":133}},{"path":"src/test/java/seedu/pharmhub/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.core.index;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"joeng03":2,"-":65}},{"path":"src/test/java/seedu/pharmhub/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"joeng03":2,"-":34}},{"path":"src/test/java/seedu/pharmhub/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"joeng03":3,"-":105}},{"path":"src/test/java/seedu/pharmhub/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.Config;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"joeng03":4,"-":112}},{"path":"src/test/java/seedu/pharmhub/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":2,"-":21}},{"path":"src/test/java/seedu/pharmhub/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.SerializableTestClass;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.TestUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":3,"-":42}},{"path":"src/test/java/seedu/pharmhub/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.commons.util;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":147,"author":{"gitId":"HEEaZ"},"content":"    //---------------- Tests for unmodifiableSetToCommaSeparatedStr --------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"    public void unmodifiableSetToCommaSeparatedStr_validInputs_correctResults() {","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"HEEaZ"},"content":"        // Empty set","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(\"\", StringUtil.setToStr(Collections.emptySet()));","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"        // Set with 1 object","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(\"1\", StringUtil.setToStr(new HashSet\u003c\u003e(List.of(1))));","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"HEEaZ":13,"joeng03":2,"-":141}},{"path":"src/test/java/seedu/pharmhub/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.CommandResult;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ListPeopleCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.JsonPharmHubStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.storage.StorageManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"        JsonPharmHubStorage pharmHubStorage \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"                new JsonPharmHubStorage(temporaryFolder.resolve(\"pharmHub.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"        StorageManager storage \u003d new StorageManager(pharmHubStorage, userPrefsStorage);","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"        String deleteCommand \u003d \"deletep 9\";","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"        String listCommand \u003d ListPeopleCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(listCommand, ListPeopleCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredOrderList().remove(0));","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"joeng03"},"content":"        // Inject LogicManager with an PharmHubStorage that throws the IOException e when saving","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"joeng03"},"content":"        JsonPharmHubStorage pharmHubStorage \u003d new JsonPharmHubStorage(prefPath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"joeng03"},"content":"            public void savePharmHub(ReadOnlyPharmHub pharmHub, Path filePath)","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"joeng03"},"content":"        StorageManager storage \u003d new StorageManager(pharmHubStorage, userPrefsStorage);","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"joeng03"},"content":"        // Triggers the savePharmHub method by executing an add command","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"HEEaZ"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"HEEaZ":9,"joeng03":32,"-":139}},{"path":"src/test/java/seedu/pharmhub/logic/commands/AddMedicineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.IBUPROFEN_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PARACETAMOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"public class AddMedicineCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"    private Model model;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_newMedicine_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.addMedicine(IBUPROFEN_MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"                String.format(AddMedicineCommand.MESSAGE_SUCCESS, Messages.format(IBUPROFEN_MEDICINE)));","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandSuccess(new AddMedicineCommand(IBUPROFEN_MEDICINE), model,","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"                expectedCommandResult,","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"                expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_duplicateMedicine_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicineInList \u003d model.getFilteredMedicineList().get(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(new AddMedicineCommand(medicineInList), model,","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"                String.format(AddMedicineCommand.MESSAGE_DUPLICATE_MEDICINE, medicineInList.getMedicineName()));","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"    public void constructor_nullMedicine_throwsNullPointerException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMedicineCommand(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"        AddMedicineCommand addIbuprofenCommand \u003d new AddMedicineCommand(IBUPROFEN_MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        AddMedicineCommand addParacetamolCommand \u003d new AddMedicineCommand(PARACETAMOL_MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(addParacetamolCommand.equals(addParacetamolCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        AddMedicineCommand addParacetamolCommandCopy \u003d new AddMedicineCommand(PARACETAMOL_MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(addParacetamolCommandCopy.equals(addParacetamolCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(addParacetamolCommand.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(addIbuprofenCommand.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(addIbuprofenCommand.equals(addParacetamolCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"        AddMedicineCommand addCommand \u003d new AddMedicineCommand(IBUPROFEN_MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        String expected \u003d AddMedicineCommand.class.getCanonicalName() + \"{toAdd\u003d\" + IBUPROFEN_MEDICINE + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"HEEaZ":1,"joeng03":14,"timetraveller-123":73}},{"path":"src/test/java/seedu/pharmhub/logic/commands/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"class AddOrderCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    private final OrderNumber orderNumber \u003d new OrderNumber(\"2\");","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    private final String medicineName \u003d \"Panadol\";","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    private final Medicine medicine \u003d new Medicine(medicineName);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    private final Set\u003cMedicine\u003e medicines \u003d new HashSet\u003c\u003e(List.of(medicine));","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"    private final Status orderStatus \u003d new Status(Status.OrderStatus.PENDING);","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(INDEX_FIRST, orderNumber, medicines, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        Order order \u003d new Order(orderNumber, model.getFilteredPersonList().get(0), medicines, orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.addOrder(order);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(AddOrderCommand.MESSAGE_SUCCESS, Messages.format(order));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, order);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(addOrderCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(INDEX_FIRST, orderNumber, medicines, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        Order order \u003d new Order(orderNumber, personInFilteredList, medicines, orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(AddOrderCommand.MESSAGE_SUCCESS, Messages.format(order));","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.addOrder(order);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, order);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(addOrderCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"    void execute_allergicToMedicineAndIgnoreAllergy_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"        Person person \u003d new PersonBuilder().withAllergies(medicineName).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"        model.addPerson(person);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(INDEX_FIRST, orderNumber, medicines, true);","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"        Order order \u003d new Order(orderNumber, model.getFilteredPersonList().get(0), medicines, orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"        expectedModel.addOrder(order);","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(AddOrderCommand.MESSAGE_SUCCESS, Messages.format(order));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, order);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(addOrderCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_filteredList_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"        // ensures that outOfBoundIndex is still in bounds of PharmHub list","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPharmHub().getPersonList().size());","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(outOfBoundIndex, orderNumber, medicines, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"        Order order \u003d new Order(orderNumber, person, medicines, orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.addOrder(order);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(addOrderCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"joeng03"},"content":"    void execute_allergicToMedicineAndNotIgnoreAllergy_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"joeng03"},"content":"        Person person \u003d new PersonBuilder().withAllergies(medicineName).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"joeng03"},"content":"        model.addPerson(person);","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"joeng03"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(Index.fromOneBased(model.getFilteredPersonList().size()),","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"                orderNumber, medicines,","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"                false);","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"        Order order \u003d new Order(orderNumber, model.getFilteredPersonList().get(0), medicines, orderStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"joeng03"},"content":"        expectedModel.addOrder(order);","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"joeng03"},"content":"        assertCommandFailure(addOrderCommand, model, Messages.MESSAGE_ALLERGIC_TO_MEDICINE);","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"HEEaZ"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(INDEX_FIRST, orderNumber, medicines, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(addOrderCommand.equals(addOrderCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(addOrderCommand.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_duplicateOrder_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"timetraveller-123"},"content":"        Order orderInList \u003d model.getFilteredOrderList().get(0);","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"HEEaZ"},"content":"        assertCommandFailure(new AddOrderCommand(INDEX_FIRST, orderInList.getOrderNumber() , medicines, true),","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"HEEaZ"},"content":"                model, String.format(AddOrderCommand.MESSAGE_DUPLICATE_ORDER, orderInList.getOrderNumber()));","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"LinWanLeii":1,"HEEaZ":27,"joeng03":54,"timetraveller-123":64}},{"path":"src/test/java/seedu/pharmhub/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"                validPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"                expectedCommandResult,","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"        Person personInList \u003d model.getPharmHub().getPersonList().get(0);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model,","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"                String.format(AddPersonCommand.MESSAGE_DUPLICATE_PERSON, personInList.getName()));","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"HEEaZ":9,"joeng03":13,"-":30}},{"path":"src/test/java/seedu/pharmhub/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        AddPersonCommand addCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        assertThrows(CommandException.class, String.format(","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, validPerson.getName()), () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"        AddPersonCommand addCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"joeng03"},"content":"        public Path getPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"        public void setPharmHubFilePath(Path pharmHubFilePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"        public void undo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"HEEaZ"},"content":"        public boolean canUndo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"        public void redo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"HEEaZ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"HEEaZ"},"content":"        public boolean canRedo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"HEEaZ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"joeng03"},"content":"        public void setPharmHub(ReadOnlyPharmHub newData) {","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"joeng03"},"content":"        public void clearPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"joeng03"},"content":"        public ReadOnlyPharmHub getPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"timetraveller-123"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"LinWanLeii"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"LinWanLeii"},"content":"        public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"LinWanLeii"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"timetraveller-123"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"timetraveller-123"},"content":"        public void deleteOrder(Order order) {","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"timetraveller-123"},"content":"        public Optional\u003cOrder\u003e getOrder(String orderNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"HEEaZ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"timetraveller-123"},"content":"        public boolean hasMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"timetraveller-123"},"content":"        public void setMedicine(Medicine target, Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"timetraveller-123"},"content":"        public void addMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"timetraveller-123"},"content":"        public void deleteMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"timetraveller-123"},"content":"        public Optional\u003cMedicine\u003e getMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"timetraveller-123"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":241,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":243,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":244,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":245,"author":{"gitId":"timetraveller-123"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":247,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":248,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"timetraveller-123"},"content":"        public ObservableList\u003cMedicine\u003e getFilteredMedicineList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"timetraveller-123"},"content":"        public void updateFilteredMedicineList(Predicate\u003cMedicine\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"timetraveller-123"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"joeng03"},"content":"        public ReadOnlyPharmHub getPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":298,"author":{"gitId":"joeng03"},"content":"            return new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"LinWanLeii":4,"HEEaZ":38,"joeng03":21,"-":178,"timetraveller-123":61}},{"path":"src/test/java/seedu/pharmhub/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"    public void execute_emptyPharmHub_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    public void execute_nonEmptyPharmHub_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"        Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"        expectedModel.setPharmHub(new PharmHub());","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":31}},{"path":"src/test/java/seedu/pharmhub/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.getTypicalOrders;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.InfoObject;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"                CommandResult.ListPanelEffects.NO_EFFECT)));","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", (InfoObject) null)));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"                CommandResult.ListPanelEffects.NO_EFFECT, null)));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        // different listPanelEffects value -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"                CommandResult.ListPanelEffects.PERSON)));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"                CommandResult.ListPanelEffects.ORDER)));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"        // different InfoObjectValue -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        CommandResult withDifferentInfoObjectValue \u003d new CommandResult(","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"                \"feedback\", getTypicalOrders().get(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(commandResult.equals(withDifferentInfoObjectValue));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(withDifferentInfoObjectValue.equals(commandResult));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"                false, CommandResult.ListPanelEffects.NO_EFFECT, null).hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"                true, CommandResult.ListPanelEffects.NO_EFFECT, null).hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"        // different InfoObject -\u003e returns different hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"                false, CommandResult.ListPanelEffects.NO_EFFECT, getTypicalOrders().get(0)).hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", listPanelEffects\u003d\" + commandResult.getListPanelEffects()","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"                + \", infoObject\u003d\" + commandResult.getInfoObject() + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"    public void hasInfoObjectMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        CommandResult commandResultWithoutInfoObject \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(commandResultWithoutInfoObject.hasInfoObject());","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"        CommandResult commandWithInfoObject \u003d new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"                CommandResult.ListPanelEffects.NO_EFFECT, getTypicalOrders().get(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(commandWithInfoObject.hasInfoObject());","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"HEEaZ":39,"joeng03":3,"-":59}},{"path":"src/test/java/seedu/pharmhub/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    public static final String VALID_ALLERGY_ASPIRIN \u003d \"Aspirin\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"    public static final String VALID_ALLERGY_PENICILLIN \u003d \"Penicillin\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    public static final String VALID_STATUS_PENDING \u003d \"PENDING\";","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"    public static final String VALID_STATUS_COMPLETED \u003d \"COMPLETED\";","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"    public static final String VALID_SHORT_STATUS_COMPLETED \u003d \"cp\";","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"    public static final String VALID_MEDICINE_PANADOL \u003d \"panadol\";","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"    public static final String VALID_MEDICINE_IBUPROFEN \u003d \"ibuprofen\";","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"    public static final String VALID_SHORT_MEDICINE_PANADOL \u003d \"pan\";","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    public static final String VALID_SHORT_MEDICINE_IBUPROFEN \u003d \"ibu\";","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"    public static final String ALLERGY_DESC_ASPIRIN \u003d \" \" + PREFIX_ALLERGY + VALID_ALLERGY_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"    public static final String ALLERGY_DESC_PENICILLIN \u003d \" \" + PREFIX_ALLERGY + VALID_ALLERGY_PENICILLIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"    public static final String STATUS_DESC_PENDING \u003d \" \" + PREFIX_STATUS + VALID_STATUS_PENDING;","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MEDICINE_DESC_PANADOL \u003d \" \" + PREFIX_MEDICINE_NAME + VALID_MEDICINE_PANADOL;","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    public static final String MEDICINE_DESC_IBUPROFEN \u003d \" \" + PREFIX_MEDICINE_NAME + VALID_MEDICINE_IBUPROFEN;","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"    public static final String SHORT_MEDICINE_DESC_PANADOL \u003d \" \" + PREFIX_MEDICINE_NAME + VALID_SHORT_MEDICINE_PANADOL;","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"    public static final String SHORT_MEDICINE_DESC_IBUPROFEN \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"            \" \" + PREFIX_MEDICINE_NAME + VALID_SHORT_MEDICINE_IBUPROFEN;","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"    // Invalid cases","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"DONE\"; // no such status","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"    public static final String INVALID_SHORT_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"de\"; // no such short form medicine","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"    public static final String INVALID_MEDICINE_DESC \u003d \" \" + PREFIX_MEDICINE_NAME + \"*!*!*\"; // no such medicine","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"    public static final String INVALID_MEDICINE \u003d \"*!*!*\"; // no such medicine","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"                .withAllergies(VALID_ALLERGY_ASPIRIN, VALID_ALLERGY_PENICILLIN)","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"     * - the PharmHub, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"joeng03"},"content":"        PharmHub expectedPharmHub \u003d new PharmHub(actualModel.getPharmHub());","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":138,"author":{"gitId":"joeng03"},"content":"        assertEquals(expectedPharmHub, actualModel.getPharmHub());","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"joeng03"},"content":"     * {@code model}\u0027s PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"timetraveller-123"},"content":"     * Updates {@code model}\u0027s filtered list to show only the order at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"joeng03"},"content":"     * {@code model}\u0027s PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"timetraveller-123"},"content":"    public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOrderList().size());","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"timetraveller-123"},"content":"        Order order \u003d model.getFilteredOrderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredOrderList(x-\u003e x.getOrderNumber() \u003d\u003d order.getOrderNumber());","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(1, model.getFilteredOrderList().size());","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"timetraveller-123"},"content":"     * Updates {@code model}\u0027s filtered list to show only the medicine at the given {@code targetIndex} in the","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"joeng03"},"content":"     * {@code model}\u0027s PharmHub.","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"timetraveller-123"},"content":"    public static void showMedicineAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMedicineList().size());","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicine \u003d model.getFilteredMedicineList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredMedicineList(x-\u003e medicine.getMedicineName().equals(x.getMedicineName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(1, model.getFilteredMedicineList().size());","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LinWanLeii":18,"HEEaZ":2,"joeng03":32,"-":105,"timetraveller-123":24}},{"path":"src/test/java/seedu/pharmhub/logic/commands/DeleteMedicineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.showMedicineAtIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIFTH;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":" * {@code DeleteMedicineCommand}.","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"public class DeleteMedicineCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    private Model model;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    public void init() {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicineToDelete \u003d model.getFilteredMedicineList().get(INDEX_FIFTH.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteCommand \u003d new DeleteMedicineCommand(INDEX_FIFTH);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(DeleteMedicineCommand.MESSAGE_DELETE_MEDICINE_SUCCESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"                Messages.format(medicineToDelete));","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.deleteMedicine(medicineToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandSuccess(deleteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteCommand \u003d new DeleteMedicineCommand(outOfBoundIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MEDICINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"        showMedicineAtIndex(model, INDEX_FIFTH);","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicineToDelete \u003d model.getFilteredMedicineList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteCommand \u003d new DeleteMedicineCommand(INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(DeleteMedicineCommand.MESSAGE_DELETE_MEDICINE_SUCCESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"                Messages.format(medicineToDelete));","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.deleteMedicine(medicineToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandSuccess(deleteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"        showMedicineAtIndex(model, INDEX_FIFTH);","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"        // ensures that outOfBoundIndex is still in bounds of PharmHub list","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPharmHub().getMedicineList().size());","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteCommand \u003d new DeleteMedicineCommand(outOfBoundIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MEDICINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_deleteMedicineWithAllergy_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteCommand \u003d new DeleteMedicineCommand(INDEX_SECOND);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicine \u003d model.getFilteredMedicineList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(DeleteMedicineCommand.MESSAGE_DELETE_MEDICINE_FAILURE,","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"                Messages.format(medicine));","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_deleteMedicineWithOrder_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteCommand \u003d new DeleteMedicineCommand(INDEX_THIRD);","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"        Medicine medicine \u003d model.getFilteredMedicineList().get(INDEX_THIRD.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(DeleteMedicineCommand.MESSAGE_DELETE_MEDICINE_FAILURE,","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"                Messages.format(medicine));","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteFirstCommand \u003d new DeleteMedicineCommand(INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteSecondCommand \u003d new DeleteMedicineCommand(INDEX_SECOND);","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"timetraveller-123"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"timetraveller-123"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteFirstCommandCopy \u003d new DeleteMedicineCommand(INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"timetraveller-123"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"timetraveller-123"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"timetraveller-123"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"timetraveller-123"},"content":"        DeleteMedicineCommand deleteCommand \u003d new DeleteMedicineCommand(targetIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"timetraveller-123"},"content":"        String expected \u003d DeleteMedicineCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"joeng03":20,"timetraveller-123":120}},{"path":"src/test/java/seedu/pharmhub/logic/commands/DeleteOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"class DeleteOrderCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"    private Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"                Messages.format(orderToDelete));","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, orderToDelete);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(deleteOrderCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"                Messages.format(orderToDelete));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        showNoOrder(expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, orderToDelete);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(deleteOrderCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"        // ensures that outOfBoundIndex is still in bounds of PharmHub list","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPharmHub().getOrderList().size());","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteFirstOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteSecondOrderCommand \u003d new DeleteOrderCommand(INDEX_SECOND);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(deleteFirstOrderCommand.equals(deleteFirstOrderCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteFirstOrderCommandCopy \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(deleteFirstOrderCommand.equals(deleteFirstOrderCommandCopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"timetraveller-123"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(deleteFirstOrderCommand.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(deleteFirstOrderCommand.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"timetraveller-123"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(deleteFirstOrderCommand.equals(deleteSecondOrderCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"timetraveller-123"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"timetraveller-123"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"timetraveller-123"},"content":"        String expected \u003d DeleteOrderCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(expected, deleteOrderCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"timetraveller-123"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"timetraveller-123"},"content":"     * Updates {@code model}\u0027s filtered order list to show nothing.","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"    private void showNoOrder(Model model) {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"        model.updateFilteredOrderList(p -\u003e false);","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(model.getFilteredOrderList().isEmpty());","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"HEEaZ":6,"joeng03":18,"timetraveller-123":95}},{"path":"src/test/java/seedu/pharmhub/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    private Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, personToDelete);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(deleteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, personToDelete);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(deleteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        // ensures that outOfBoundIndex is still in bounds of PharmHub list","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPharmHub().getPersonList().size());","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"HEEaZ":18,"joeng03":18,"-":83,"timetraveller-123":5}},{"path":"src/test/java/seedu/pharmhub/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    private Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"                String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(editCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"                .withTags(VALID_TAG_HUSBAND).withAllergies(\"Penicillin\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).withAllergies(\"Penicillin\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(indexLastPerson, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"                String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(editCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST, new EditPersonDescriptor(), false);","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"                String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(editCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), false);","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"                String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(new PharmHub(model.getPharmHub()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(editCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_SECOND, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"HEEaZ"},"content":"                String.format(EditPersonCommand.MESSAGE_DUPLICATE_PERSON, descriptor.getName().get()));","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"        // edit person in filtered list into a duplicate in PharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"joeng03"},"content":"        Person personInList \u003d model.getPharmHub().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(personInList).build();","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"HEEaZ"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"HEEaZ"},"content":"                String.format(EditPersonCommand.MESSAGE_DUPLICATE_PERSON, descriptor.getName().get()));","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"joeng03"},"content":"     * but smaller than size of PharmHub","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"timetraveller-123"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"joeng03"},"content":"        // ensures that outOfBoundIndex is still in bounds of PharmHub list","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"joeng03"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPharmHub().getPersonList().size());","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"HEEaZ"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), false);","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"HEEaZ"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST, DESC_AMY, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST, copyDescriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND, DESC_AMY, false)));","lastModifiedDate":"2023-11-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST, DESC_BOB, false)));","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(index, editPersonDescriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"HEEaZ"},"content":"        String expected \u003d EditPersonCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"HEEaZ":38,"joeng03":34,"-":113,"timetraveller-123":10}},{"path":"src/test/java/seedu/pharmhub/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ALLERGY_PENICILLIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"        // different allergies -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAllergies(VALID_ALLERGY_PENICILLIN).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"                + editPersonDescriptor.getAllergies().orElse(null) + \", allergies\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"joeng03":16,"-":61}},{"path":"src/test/java/seedu/pharmhub/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"                MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"HEEaZ":2,"joeng03":5,"-":14}},{"path":"src/test/java/seedu/pharmhub/logic/commands/FindMedicineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_MEDICINES_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PARACETAMOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PENICILLIN_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":" * Contains integration tests (interaction with the Model) for {@code FindMedicineCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"public class FindMedicineCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    private Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        String[] keyWords1 \u003d {\"ol\", \"en\"};","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        String[] keyWords2 \u003d {\"formin\"};","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"        FindMedicineCommand findFirstCommand \u003d new FindMedicineCommand(keyWords1);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"        FindMedicineCommand findSecondCommand \u003d new FindMedicineCommand(keyWords2);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"        FindMedicineCommand findFirstCommandCopy \u003d new FindMedicineCommand(keyWords1);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"        // different medicine -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEDICINES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        String s \u003d \"ol en \";","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"        String[] keyWords \u003d s.split(\"\\\\s+\");","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        FindMedicineCommand command \u003d new FindMedicineCommand(keyWords);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        Predicate\u003cMedicine\u003e predicate \u003d m -\u003e Stream.of(keyWords).anyMatch(x -\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"                m.getMedicineName().toLowerCase().contains(x.toLowerCase()));","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"        expectedModel.updateFilteredMedicineList(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage,","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"                CommandResult.ListPanelEffects.MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(Arrays.asList(PANADOL_MEDICINE, PENICILLIN_MEDICINE, PARACETAMOL_MEDICINE),","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"                model.getFilteredMedicineList());","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        String s \u003d \"ol en \";","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        String[] keyWords \u003d s.split(\"\\\\s+\");","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        FindMedicineCommand findCommand \u003d new FindMedicineCommand(keyWords);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"        String expected \u003d FindMedicineCommand.class.getCanonicalName() + \"{keyWords\u003d\" + keyWords + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"joeng03":13,"timetraveller-123":71}},{"path":"src/test/java/seedu/pharmhub/logic/commands/FindOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.ASPIRIN_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.BENSON_PANADOL_ORDER;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.CARL_PANADOL_ORDER;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PARACETAMOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.STATUS_COMPLETED;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.STATUS_PENDING;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import java.util.List;","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"public class FindOrderCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    private Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"    private Set\u003cMedicine\u003e medicineSetPanadol \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    private Set\u003cMedicine\u003e medicineSetAspirin \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"        medicineSetPanadol.add(PANADOL_MEDICINE);","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"        medicineSetPanadol.add(PARACETAMOL_MEDICINE);","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"        medicineSetAspirin.add(ASPIRIN_MEDICINE);","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        FindOrderCommand findPendingCommand \u003d new FindOrderCommand(STATUS_PENDING, medicineSetPanadol);","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"        FindOrderCommand findCompletedCommand \u003d new FindOrderCommand(STATUS_COMPLETED, medicineSetPanadol);","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"        FindOrderCommand findPanadolCommand \u003d new FindOrderCommand(STATUS_COMPLETED, medicineSetPanadol);","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        FindOrderCommand findAspirinCommand \u003d new FindOrderCommand(STATUS_COMPLETED, medicineSetAspirin);","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        assertTrue(findPendingCommand.equals(findPendingCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"        FindOrderCommand findPendingCommandCopy \u003d new FindOrderCommand(STATUS_PENDING, medicineSetPanadol);","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        assertTrue(findPendingCommand.equals(findPendingCommandCopy));","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        assertFalse(findPendingCommand.equals(1));","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"        assertFalse(findPanadolCommand.equals(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"        assertFalse(findPendingCommand.equals(findCompletedCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"        // different medicine -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"        assertFalse(findPanadolCommand.equals(findAspirinCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"    public void execute_multipleKeywords_singleOrderFound() {","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"        Status statusToFind \u003d STATUS_PENDING;","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"        Set\u003cMedicine\u003e medicineToFind \u003d new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE, ASPIRIN_MEDICINE));","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        FindOrderCommand command \u003d new FindOrderCommand(statusToFind, medicineToFind);","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cOrder\u003e statusMatches \u003d order -\u003e statusToFind \u003d\u003d null","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"                || order.getStatus().getStatus() \u003d\u003d statusToFind.getStatus();","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cOrder\u003e medicineMatches \u003d order -\u003e medicineToFind \u003d\u003d null","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"                || order.getMedicines().stream()","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"                .anyMatch(medicine -\u003e medicineToFind.stream()","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"                        .anyMatch(checkMedicine -\u003e checkMedicine.isSameMedicine(medicine)));","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cOrder\u003e combined \u003d statusMatches.and(medicineMatches);","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredOrderList(combined);","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandResult.ListPanelEffects.ORDER);","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"        assertEquals(Arrays.asList(CARL_PANADOL_ORDER), model.getFilteredOrderList());","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"joeng03"},"content":"    public void execute_singleKeyword_multipleOrdersFound() {","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"        Status statusToFind \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"joeng03"},"content":"        Set\u003cMedicine\u003e medicineToFind \u003d new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE));","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"        FindOrderCommand command \u003d new FindOrderCommand(statusToFind, medicineToFind);","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cOrder\u003e statusMatches \u003d order -\u003e statusToFind \u003d\u003d null","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"                || order.getStatus().getStatus() \u003d\u003d statusToFind.getStatus();","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cOrder\u003e medicineMatches \u003d order -\u003e medicineToFind \u003d\u003d null","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"                || order.getMedicines().stream()","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"joeng03"},"content":"                .anyMatch(medicine -\u003e medicineToFind.stream()","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"                        .anyMatch(checkMedicine -\u003e checkMedicine.isSameMedicine(medicine)));","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"        Predicate\u003cOrder\u003e combined \u003d statusMatches.and(medicineMatches);","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredOrderList(combined);","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"joeng03"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandResult.ListPanelEffects.ORDER);","lastModifiedDate":"2023-11-06"},{"lineNumber":114,"author":{"gitId":"joeng03"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-06"},{"lineNumber":115,"author":{"gitId":"joeng03"},"content":"        assertEquals(Arrays.asList(CARL_PANADOL_ORDER, BENSON_PANADOL_ORDER), model.getFilteredOrderList());","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"joeng03"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"joeng03"},"content":"        medicineSetPanadol.add(PARACETAMOL_MEDICINE);","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"        medicineSetPanadol.add(PANADOL_MEDICINE);","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"        medicineSetAspirin.add(ASPIRIN_MEDICINE);","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"        FindOrderCommand findPendingPanadolCommand \u003d new FindOrderCommand(STATUS_PENDING, medicineSetPanadol);","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"joeng03"},"content":"        FindOrderCommand findCompletedAspirinCommand \u003d new FindOrderCommand(STATUS_COMPLETED, medicineSetAspirin);","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"joeng03"},"content":"        String expectedFindPendingPanadolCommand \u003d FindOrderCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"                + \"{status\u003dPENDING, medicine\u003d[[ Paracetamol ], [ Panadol ]]}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"joeng03"},"content":"        assertEquals(expectedFindPendingPanadolCommand, findPendingPanadolCommand.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"        String expectedFindCompletedAspirinCommand \u003d FindOrderCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"joeng03"},"content":"                + \"{status\u003dCOMPLETED, medicine\u003d[[ Aspirin ]]}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"joeng03"},"content":"        assertEquals(expectedFindCompletedAspirinCommand, findCompletedAspirinCommand.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"LinWanLeii":47,"joeng03":87}},{"path":"src/test/java/seedu/pharmhub/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import java.util.List;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    private Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(prepareNameKeywords(\"first\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(prepareNameKeywords(\"second\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(prepareNameKeywords(\"first\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d prepareNameKeywords(\" \");","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(nameKeywords);","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"                preparePredicate(nameKeywords)","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"        );","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d prepareNameKeywords(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(nameKeywords);","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(preparePredicate(nameKeywords));","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"    public void execute_multipleKeywordAttributes_singlePersonFound() {","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d prepareNameKeywords(\"Alice Benson\");","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"        Set\u003cTag\u003e tagsToFind \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"                        new Tag(\"friends\")","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"                ));","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"        Set\u003cAllergy\u003e allergiesToFind \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"                        new Allergy(new Medicine(\"Penicillin\"))","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"joeng03"},"content":"                ));","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(nameKeywords, null, null, tagsToFind, allergiesToFind);","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(preparePredicate(nameKeywords));","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getTags().stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"joeng03"},"content":"                .anyMatch(tag -\u003e tagsToFind.stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"                        .anyMatch(checkTag -\u003e checkTag.equals(tag)))","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"joeng03"},"content":"        );","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"joeng03"},"content":"                person.getAllergies().stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"                        .anyMatch(allergy -\u003e allergiesToFind.stream()","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"                                .anyMatch(checkAllergy -\u003e checkAllergy.equals(allergy)))","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"        );","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"joeng03"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"joeng03"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"joeng03"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"joeng03"},"content":"    public void execute_multipleNonKeywordAttributes_singlePersonFound() {","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"joeng03"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d null;","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"joeng03"},"content":"        Phone phoneToFind \u003d new Phone(\"95352563\");","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"        Email emailToFind \u003d new Email(\"heinz@example.com\");","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(nameKeywords, phoneToFind, emailToFind, null, null);","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(preparePredicate(nameKeywords));","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getPhone().equals(phoneToFind));","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getEmail().equals(emailToFind));","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"joeng03"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"joeng03"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"joeng03"},"content":"    public void toStringMethodKeywordPredicate() {","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d prepareNameKeywords(\"keyword\");","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand findCommand \u003d new FindPersonCommand(nameKeywords);","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"joeng03"},"content":"        String expected \u003d FindPersonCommand.class.getCanonicalName() + \"{nameKeywords\u003d\" + nameKeywords + \"}\";","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":141,"author":{"gitId":"joeng03"},"content":"    public void toStringMethodMultipleAttributes() {","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d prepareNameKeywords(\"keyword\");","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"joeng03"},"content":"        Email email \u003d new Email(\"test@gmail.com\");","lastModifiedDate":"2023-11-05"},{"lineNumber":144,"author":{"gitId":"joeng03"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-05"},{"lineNumber":145,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-05"},{"lineNumber":146,"author":{"gitId":"joeng03"},"content":"                        new Tag(\"friends\")","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"joeng03"},"content":"                ));","lastModifiedDate":"2023-11-05"},{"lineNumber":148,"author":{"gitId":"joeng03"},"content":"        Set\u003cAllergy\u003e allergies \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-05"},{"lineNumber":149,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-05"},{"lineNumber":150,"author":{"gitId":"joeng03"},"content":"                        new Allergy(new Medicine(\"Penicillin\"))","lastModifiedDate":"2023-11-05"},{"lineNumber":151,"author":{"gitId":"joeng03"},"content":"                ));","lastModifiedDate":"2023-11-05"},{"lineNumber":152,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":153,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand findCommand \u003d new FindPersonCommand(nameKeywords, null, email, tags, allergies);","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"joeng03"},"content":"        String expected \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"joeng03"},"content":"                FindPersonCommand.class.getCanonicalName() + \"{nameKeywords\u003d\" + nameKeywords + \", email\u003d\" + email","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"joeng03"},"content":"                        + \", tags\u003d\" + tags + \", allergies\u003d\" + allergies + \"}\";","lastModifiedDate":"2023-11-05"},{"lineNumber":157,"author":{"gitId":"joeng03"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"joeng03"},"content":"     * Parses {@code userInput} into a {@code List\u003cString\u003e}.","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":163,"author":{"gitId":"joeng03"},"content":"    private List\u003cString\u003e prepareNameKeywords(String userInput) {","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"joeng03"},"content":"        return Arrays.asList(userInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":166,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":167,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":168,"author":{"gitId":"joeng03"},"content":"     * Parses {@code List\u003cString\u003e} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-11-10"},{"lineNumber":169,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":171,"author":{"gitId":"joeng03"},"content":"    private Predicate\u003cPerson\u003e preparePredicate(List\u003cString\u003e nameKeywords) {","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"joeng03"},"content":"        return nameKeywords \u003d\u003d null","lastModifiedDate":"2023-11-10"},{"lineNumber":173,"author":{"gitId":"joeng03"},"content":"                ? person -\u003e true","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"joeng03"},"content":"                : new NameContainsKeywordsPredicate(nameKeywords);","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"HEEaZ":5,"joeng03":117,"-":54}},{"path":"src/test/java/seedu/pharmhub/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"joeng03":5,"-":15}},{"path":"src/test/java/seedu/pharmhub/logic/commands/ListMedicineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.showMedicineAtIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListMedicineCommand.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"public class ListMedicineCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    private Model model;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"        expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"                ListMedicineCommand.MESSAGE_SUCCESS, CommandResult.ListPanelEffects.MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandSuccess(new ListMedicineCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        showMedicineAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"                ListMedicineCommand.MESSAGE_SUCCESS, CommandResult.ListPanelEffects.MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"        assertCommandSuccess(new ListMedicineCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"joeng03":10,"timetraveller-123":34}},{"path":"src/test/java/seedu/pharmhub/logic/commands/ListOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListOrderCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"class ListOrderCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    private Model model;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"        expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"                ListOrderCommand.MESSAGE_SUCCESS, CommandResult.ListPanelEffects.ORDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(new ListOrderCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"HEEaZ":27,"joeng03":8}},{"path":"src/test/java/seedu/pharmhub/logic/commands/ListPeopleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPeopleCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"public class ListPeopleCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"        expectedModel \u003d new ModelManager(model.getPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"                ListPeopleCommand.MESSAGE_SUCCESS, CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(new ListPeopleCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"                ListPeopleCommand.MESSAGE_SUCCESS, CommandResult.ListPanelEffects.PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(new ListPeopleCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"HEEaZ":8,"joeng03":10,"-":24,"timetraveller-123":1}},{"path":"src/test/java/seedu/pharmhub/logic/commands/UpdateStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.STATUS_COMPLETED;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.STATUS_PENDING;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.UpdateStatusCommand.EditOrderDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.OrderBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"public class UpdateStatusCommandTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"    private Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        Order editedOrder \u003d new OrderBuilder().withStatus(\"PREPARING\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(editedOrder).withStatus(\"PREPARING\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand updateStatusCommand \u003d new UpdateStatusCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"                UpdateStatusCommand.MESSAGE_EDIT_ORDER_STATUS_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"                Messages.format(editedOrder));","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, editedOrder);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(updateStatusCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    public void execute_inValidChronological_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        Order editedOrder \u003d new OrderBuilder().withStatus(\"PREPARING\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(editedOrder).withStatus(\"PREPARING\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand updateStatusCommand \u003d new UpdateStatusCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        assertCommandFailure(updateStatusCommand, model, UpdateStatusCommand.MESSAGE_WRONG_CHRONOLOGICAL_ORDER_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand.EditOrderDescriptor editOrderDescriptor \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"                new UpdateStatusCommand.EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand updateStatusCommand \u003d new UpdateStatusCommand(index, editOrderDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        String expected \u003d UpdateStatusCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editOrderDescriptor\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"                + editOrderDescriptor + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(expected, updateStatusCommand.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"        int outOfBoundIndex \u003d INDEX_SECOND.getZeroBased() + 10;","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"                .withStatus(STATUS_PENDING.toString())","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand updateStatusCommand \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"                new UpdateStatusCommand(Index.fromZeroBased(outOfBoundIndex), descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"        // Ensure the index provided is out of bounds","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"        assertCommandFailure(updateStatusCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"    public void isAnyFieldEdited_someFieldsEdited_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"        descriptor.setOrderNumber(new OrderNumber(\"1\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"        // At least one field in the descriptor is edited","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"        assertTrue(descriptor.isAnyFieldEdited());","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"    public void equals_sameDescriptor_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor sameDescriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"        // Both descriptors have the same field values, so they are considered equal","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(descriptor, sameDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"    public void equals_differentDescriptors_returnsFalse() {","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor differentDescriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"        differentDescriptor.setOrderNumber(new OrderNumber(\"1\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"        // The descriptors have different field values, so they are not considered equal","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"        assertNotEquals(descriptor, differentDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"        EditOrderDescriptor otherDescriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"        otherDescriptor.setStatus(STATUS_COMPLETED);","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"        final UpdateStatusCommand standardCommand \u003d new UpdateStatusCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand commandWithSameValues \u003d new UpdateStatusCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"        assertNotEquals(","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"                standardCommand,","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"                new EditPersonCommand(INDEX_FIRST, new EditPersonCommand.EditPersonDescriptor(), false));","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"LinWanLeii"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"LinWanLeii"},"content":"        assertNotEquals(standardCommand, new UpdateStatusCommand(INDEX_SECOND, descriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"LinWanLeii"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"LinWanLeii"},"content":"        assertNotEquals(standardCommand, new UpdateStatusCommand(INDEX_FIRST, otherDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":109,"HEEaZ":6,"joeng03":20}},{"path":"src/test/java/seedu/pharmhub/logic/commands/ViewOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.ORDER_NUMBER_FIRST_ORDER;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.ORDER_NUMBER_SECOND_ORDER;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"class ViewOrderCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    private Model model;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    public void execute_validOrderNumber_orderIsFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand command \u003d new ViewOrderCommand(ORDER_NUMBER_FIRST_ORDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"        Order expectedOrder \u003d model.getPharmHub().getOrder(ORDER_NUMBER_FIRST_ORDER).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"                String.format(ViewOrderCommand.MESSAGE_VIEW_ORDER_SUCCESS, ORDER_NUMBER_FIRST_ORDER),","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"                expectedOrder);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"    public void execute_nonExistentOrderNumber_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"        String orderNumber \u003d \"51920341\";","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand command \u003d new ViewOrderCommand(orderNumber);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        assertCommandFailure(command, model, String.format(ViewOrderCommand.MESSAGE_ORDER_NOT_FOUND, orderNumber));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand viewFirstOrderCommand \u003d new ViewOrderCommand(ORDER_NUMBER_FIRST_ORDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand viewSecondOrderCommand \u003d new ViewOrderCommand(ORDER_NUMBER_SECOND_ORDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(viewFirstOrderCommand.equals(viewFirstOrderCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand viewFirstOrderCommandCopy \u003d new ViewOrderCommand(ORDER_NUMBER_FIRST_ORDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(viewFirstOrderCommand.equals(viewFirstOrderCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(viewFirstOrderCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(viewFirstOrderCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(viewFirstOrderCommand.equals(viewSecondOrderCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"        String orderNumber \u003d \"54321\";","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand viewOrderCommand \u003d new ViewOrderCommand(orderNumber);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"        String expected \u003d ViewOrderCommand.class.getCanonicalName() + \"{orderNumber\u003d\" + orderNumber + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expected, viewOrderCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"HEEaZ":61,"joeng03":12,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/logic/commands/ViewPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"class ViewPersonCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    private Model model;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"        model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        ViewPersonCommand command \u003d new ViewPersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"        Person expectedPerson \u003d model.getPharmHub().getPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"                ViewPersonCommand.MESSAGE_VIEW_ORDER_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"                expectedPerson.getName().fullName);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"                expectedMessage,","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"                expectedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, model);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        ViewPersonCommand viewPersonCommand \u003d new ViewPersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        assertCommandFailure(viewPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"        ViewPersonCommand viewFirstPersonCommand \u003d new ViewPersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(viewFirstPersonCommand.equals(viewFirstPersonCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        ViewPersonCommand viewFirstPersonCommandCopy \u003d new ViewPersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(viewFirstPersonCommand.equals(viewFirstPersonCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(viewFirstPersonCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"        assertFalse(viewFirstPersonCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(viewFirstPersonCommand.equals(new ViewPersonCommand(INDEX_SECOND)));","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        ViewPersonCommand viewPersonCommand \u003d new ViewPersonCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        String expected \u003d ViewPersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + INDEX_FIRST + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expected, viewPersonCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"HEEaZ":60,"joeng03":14,"timetraveller-123":6}},{"path":"src/test/java/seedu/pharmhub/logic/parser/AddMedicineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ORDER_NUMBER;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"public class AddMedicineCommandParserTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMedicineCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    private final Parser\u003cAddMedicineCommand\u003e parser \u003d new AddMedicineCommandParser();","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        //Missing medicineName","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"        //Wrong prefix","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, PREFIX_ORDER_NUMBER + \" panadol\" , MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_preamblePresent_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        //preamble present","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_MEDICINE_NAME + \" panadol\" , MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_multipleValue_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"        //empty medicine name","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, PREFIX_MEDICINE_NAME + \"panadol\" + PREFIX_MEDICINE_NAME + \"panadol\",","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"HEEaZ":3,"joeng03":6,"timetraveller-123":37}},{"path":"src/test/java/seedu/pharmhub/logic/parser/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_MEDICINE_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ORDER_NUMBER;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"class AddOrderCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    private static final String VALID_ORDERNUMBER \u003d PREFIX_ORDER_NUMBER + \" 1 \";","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    private static final String INVALID_ORDERNUMBER_NEGATIVE \u003d PREFIX_ORDER_NUMBER + \"  -1 \";","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    private static final String INVALID_ORDERNUMBER \u003d PREFIX_ORDER_NUMBER + \" asd \";","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    private static final String VALID_MEDICINE_NAME \u003d PREFIX_MEDICINE_NAME + \" Panadol \";","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    private static final String INVALID_MEDICINE_NAME \u003d PREFIX_MEDICINE_NAME + \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    private final Parser\u003cAddOrderCommand\u003e parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"        //Missing index","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, VALID_ORDERNUMBER + VALID_MEDICINE_NAME, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"        //Missing orderNumber","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"1 \" + VALID_MEDICINE_NAME, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        //Missing medicineName","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"1 \" + VALID_MEDICINE_NAME, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        // negative index","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"-5 \" + VALID_ORDERNUMBER + VALID_MEDICINE_NAME, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        // zero index","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"0 \" + VALID_ORDERNUMBER + VALID_MEDICINE_NAME, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"1 some random string \" + VALID_ORDERNUMBER + VALID_MEDICINE_NAME,","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"1 i/ string \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_ORDERNUMBER_NEGATIVE + VALID_MEDICINE_NAME,","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"                OrderNumber.MESSAGE_CONSTRAINTS); // invalid orderNumber","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"1 \" + VALID_ORDERNUMBER + INVALID_MEDICINE_NAME,","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"timetraveller-123"},"content":"                            MESSAGE_INVALID_FORMAT); // invalid medicineName","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_ORDERNUMBER + VALID_MEDICINE_NAME,","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"                OrderNumber.MESSAGE_CONSTRAINTS); // invalid orderNumber","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"        AddOrderCommand expectedCommand \u003d new AddOrderCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"                Index.fromOneBased(1),","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"                new OrderNumber(\"1\"), new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)), false);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        assertParseSuccess(parser, \"1 \" + VALID_ORDERNUMBER + VALID_MEDICINE_NAME, expectedCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"    public void parse_containsIgnoreAllergy_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"        AddOrderCommand expectedCommand \u003d new AddOrderCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"                Index.fromOneBased(1),","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"                new OrderNumber(\"1\"), new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)), true);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"        assertParseSuccess(parser, \"1 \" + VALID_ORDERNUMBER + VALID_MEDICINE_NAME + \" ia/\", expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"HEEaZ":12,"joeng03":16,"timetraveller-123":68}},{"path":"src/test/java/seedu/pharmhub/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ALLERGY_DESC_ASPIRIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ALLERGY_DESC_PENICILLIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ALLERGY_ASPIRIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ALLERGY_PENICILLIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"                .withAllergies(VALID_ALLERGY_ASPIRIN)","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ALLERGY_DESC_ASPIRIN, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"                .withAllergies(VALID_ALLERGY_PENICILLIN, VALID_ALLERGY_ASPIRIN)","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"                        + ALLERGY_DESC_PENICILLIN + ALLERGY_DESC_ASPIRIN,","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"                new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"joeng03"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withAllergies().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"HEEaZ"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"HEEaZ":7,"joeng03":53,"-":144}},{"path":"src/test/java/seedu/pharmhub/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"        assertPreamblePresent(argMultimap, argsString.trim().replaceAll(\"/\", \"\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"        String argsString \u003d \"SomePreambleStringp// pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"joeng03":1,"-":147,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.Command;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"joeng03":3,"-":36}},{"path":"src/test/java/seedu/pharmhub/logic/parser/DeleteMedicineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeleteMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":" * outside of the DeleteMedicineCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":" * same path through the DeleteOrderCommand, and therefore we test only one of them.","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"class DeleteMedicineCommandParserTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    private DeleteMedicineCommandParser parser \u003d new DeleteMedicineCommandParser();","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        assertParseSuccess(parser, \"1\", new DeleteMedicineCommand(INDEX_FIRST));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"                DeleteMedicineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"joeng03":6,"timetraveller-123":27}},{"path":"src/test/java/seedu/pharmhub/logic/parser/DeleteOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":" * outside of the DeleteOrderCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":" * same path through the DeleteOrderCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"public class DeleteOrderCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    private DeleteOrderCommandParser parser \u003d new DeleteOrderCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        assertParseSuccess(parser, \"1\", new DeleteOrderCommand(INDEX_FIRST));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"                DeleteOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"joeng03":6,"timetraveller-123":28}},{"path":"src/test/java/seedu/pharmhub/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":" * outside of the DeletePersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"HEEaZ":5,"joeng03":6,"-":21,"timetraveller-123":1}},{"path":"src/test/java/seedu/pharmhub/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.ALLERGY_DESC_ASPIRIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ALLERGY_ASPIRIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"    private static final String ALLERGY_EMPTY \u003d \" \" + PREFIX_ALLERGY;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"HEEaZ"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"HEEaZ"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"HEEaZ"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"joeng03"},"content":"        // allergies","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"joeng03"},"content":"        userInput \u003d targetIndex.getOneBased() + ALLERGY_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"joeng03"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAllergies(VALID_ALLERGY_ASPIRIN).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"HEEaZ"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":211,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"joeng03"},"content":"    public void parse_resetAllergies_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"timetraveller-123"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"joeng03"},"content":"        String userInput \u003d targetIndex.getOneBased() + ALLERGY_EMPTY;","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"joeng03"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withAllergies().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"HEEaZ":14,"joeng03":57,"-":153,"timetraveller-123":6}},{"path":"src/test/java/seedu/pharmhub/logic/parser/FindMedicineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindMedicineCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"public class FindMedicineCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"    private FindMedicineCommandParser parser \u003d new FindMedicineCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMedicineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"        String[] keyWords \u003d {\"ol\", \"en\"};","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"        FindMedicineCommand expectedFindCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"                new FindMedicineCommand(keyWords);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"        assertParseSuccess(parser, \"ol en\", expectedFindCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        assertParseSuccess(parser, \" \\n ol \\n \\t en  \\t\", expectedFindCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"joeng03":5,"timetraveller-123":28}},{"path":"src/test/java/seedu/pharmhub/logic/parser/FindOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_MEDICINE_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_SHORT_STATUS_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.MEDICINE_DESC_IBUPROFEN;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.MEDICINE_DESC_PANADOL;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.SHORT_MEDICINE_DESC_IBUPROFEN;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.SHORT_MEDICINE_DESC_PANADOL;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.STATUS_DESC_PENDING;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_MEDICINE_PANADOL;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_SHORT_STATUS_COMPLETED;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_STATUS_COMPLETED;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.CommandResult;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"public class FindOrderCommandParserTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    private static Model model \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"    private static Model expectedModel \u003d new ModelManager(getTypicalPharmHub(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    private static final String MESSAGE_CONSTRIANT \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"    private FindOrderCommandParser parser \u003d new FindOrderCommandParser();","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        // empty argument","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"     \", MESSAGE_CONSTRIANT);","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        // invalid argument type","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_CONSTRIANT);","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        // invalid prefix","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"n/pending\", MESSAGE_CONSTRIANT);","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"        // no prefix","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"pending\", MESSAGE_CONSTRIANT);","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"        // extra prefix","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, VALID_MEDICINE_PANADOL + VALID_SHORT_STATUS_COMPLETED","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"                + VALID_STATUS_COMPLETED, MESSAGE_CONSTRIANT);","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_invalidStatusMedicine_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        // invalid status","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"        // invalid short status","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, INVALID_SHORT_STATUS_DESC, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"        // invalid status with valid medicine","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, INVALID_STATUS_DESC + MEDICINE_DESC_PANADOL, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"        // invalid short status with valid medicine","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, INVALID_SHORT_STATUS_DESC","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"                + MEDICINE_DESC_IBUPROFEN, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"        // invalid status with valid medicine type 2","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, INVALID_STATUS_DESC + SHORT_MEDICINE_DESC_PANADOL","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"                + \"IBUPROFEN\", Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"        // invalid short status with valid medicine type 2","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, INVALID_SHORT_STATUS_DESC + MEDICINE_DESC_PANADOL","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"                + \"IBUPROFEN\", Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"        // invalid short status with valid short medicine","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, INVALID_SHORT_STATUS_DESC","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"                + SHORT_MEDICINE_DESC_IBUPROFEN, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_invalidMedicine_zeroOrderListed() {","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"        // invalid medicine with valid status","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"        Set\u003cMedicine\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"        set.add(new Medicine(INVALID_MEDICINE));","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"        FindOrderCommand expectedFindCommand \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"                new FindOrderCommand(new Status(Status.OrderStatus.PENDING), set);","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"        assertParseSuccess(parser, INVALID_MEDICINE_DESC + STATUS_DESC_PENDING, expectedFindCommand);","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"        Predicate\u003cOrder\u003e predicate \u003d Order -\u003e false;","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandResult.ListPanelEffects.ORDER);","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"        assertCommandSuccess(expectedFindCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"LinWanLeii":75,"joeng03":30}},{"path":"src/test/java/seedu/pharmhub/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import java.util.List;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    public void parse_validArgsForName_returnsFindCommand() {","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d List.of(\"Alice\", \"Bob\");","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        FindPersonCommand expectedFindCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"                new FindPersonCommand(nameKeywords);","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"        assertParseSuccess(parser, \" \"","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"                + PREFIX_NAME + \"\\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"    public void parse_validArgsForNameAndOtherAttributes_returnsFindCommand() {","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d List.of(\"Alice\", \"Bob\");","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        Phone phoneToFind \u003d new Phone(\"123456\");","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"        Email emailToFind \u003d new Email(\"rachel@example.com\");","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"        Set\u003cTag\u003e tagsToFind \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"                        new Tag(\"friends\"),","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"                        new Tag(\"owesMoney\")));","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"        Set\u003cAllergy\u003e allergiesToFind \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"                        new Allergy(new Medicine(\"Aspirin\")),","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"                        new Allergy(new Medicine(\"Penicillin\"))));","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand expectedFindCommand \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"                new FindPersonCommand(nameKeywords,","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"                        phoneToFind,","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"                        emailToFind,","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"                        tagsToFind,","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"                        allergiesToFind);","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice Bob\"","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"                        + \" \" + PREFIX_PHONE + \"123456\"","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"                        + \" \" + PREFIX_EMAIL + \"rachel@example.com\"","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"                        + \" \" + PREFIX_TAG + \"friends owesMoney\"","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"                        + \" \" + PREFIX_ALLERGY + \"Aspirin Penicillin\",","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"                expectedFindCommand);","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"    public void parse_validArgsExcludingName_returnsFindCommand() {","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d null;","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"        Phone phoneToFind \u003d new Phone(\"123456\");","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"        Email emailToFind \u003d new Email(\"rachel@example.com\");","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"        Set\u003cTag\u003e tagsToFind \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"                        new Tag(\"friends\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"                        new Tag(\"owesMoney\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"        Set\u003cAllergy\u003e allergiesToFind \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"                Arrays.asList(","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"                        new Allergy(new Medicine(\"Aspirin\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"joeng03"},"content":"                        new Allergy(new Medicine(\"Penicillin\"))));","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"joeng03"},"content":"        FindPersonCommand expectedFindCommand \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"                new FindPersonCommand(nameKeywords,","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"                        phoneToFind,","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"                        emailToFind,","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"                        tagsToFind,","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"joeng03"},"content":"                        allergiesToFind);","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"joeng03"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_PHONE + \"123456\"","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"                        + \" \" + PREFIX_EMAIL + \"rachel@example.com\"","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"joeng03"},"content":"                        + \" \" + PREFIX_TAG + \"friends owesMoney\"","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"                        + \" \" + PREFIX_ALLERGY + \"Aspirin Penicillin\",","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"                expectedFindCommand);","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"HEEaZ":5,"joeng03":87,"-":19}},{"path":"src/test/java/seedu/pharmhub/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"joeng03":10,"-":184,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/logic/parser/PharmHubParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.ORDER_NUMBER_FIRST_ORDER;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ListOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ListPeopleCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"public class PharmHubParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    private final PharmHubParser parser \u003d new PharmHubParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST, descriptor, false), command);","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"                FindPersonCommand.COMMAND_WORD + \" \" + PREFIX_NAME","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"                        + nameKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"        assertEquals(new FindPersonCommand(nameKeywords), command);","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"    public void parseCommand_listPeople() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(parser.parseCommand(ListPeopleCommand.COMMAND_WORD) instanceof ListPeopleCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(parser.parseCommand(ListPeopleCommand.COMMAND_WORD + \" 3\") instanceof ListPeopleCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"    public void parseCommand_listOrders() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(parser.parseCommand(ListOrderCommand.COMMAND_WORD) instanceof ListOrderCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(parser.parseCommand(ListOrderCommand.COMMAND_WORD + \" 3\") instanceof ListOrderCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"    public void parseCommand_viewOrder() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"HEEaZ"},"content":"        ViewOrderCommand command \u003d (ViewOrderCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"                ViewOrderCommand.COMMAND_WORD + \" \" + ORDER_NUMBER_FIRST_ORDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(new ViewOrderCommand(ORDER_NUMBER_FIRST_ORDER), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"    public void parseCommand_viewPerson() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"        ViewPersonCommand command \u003d (ViewPersonCommand) parser.parseCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"                ViewPersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(new ViewPersonCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"HEEaZ":29,"joeng03":32,"-":62,"timetraveller-123":3}},{"path":"src/test/java/seedu/pharmhub/logic/parser/UpdateStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.UpdateStatusCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"public class UpdateStatusCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_STATUS;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateStatusCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    private static final String VALID_STATUS \u003d \" s/PENDING\";","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    private UpdateStatusCommandParser parser \u003d new UpdateStatusCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"        // no index specified","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_validInputWithStatus_returnsUpdateStatusCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand.EditOrderDescriptor descriptor \u003d new UpdateStatusCommand.EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        descriptor.setStatus(new Status(Status.OrderStatus.PENDING));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand expectedCommand \u003d new UpdateStatusCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        assertParseSuccess(parser, \"1 \" + PREFIX_STATUS + \"PENDING\", expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_validInputWithShortForm_returnsUpdateStatusCommand() {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand.EditOrderDescriptor descriptor \u003d new UpdateStatusCommand.EditOrderDescriptor();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"        descriptor.setStatus(new Status(Status.OrderStatus.PENDING));","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"        UpdateStatusCommand expectedCommand \u003d new UpdateStatusCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"        assertParseSuccess(parser, \"1 \" + PREFIX_STATUS + \"pd\", expectedCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        // negative index","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"-5\" + VALID_STATUS, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        // zero index","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"0\" + VALID_STATUS, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_invalidshortform_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"        // invalid status lower case","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"1 s/ww\", Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"        // invalid status upper case","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, \"1 s/WO\", Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_missingStatusPrefix_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"        // Missing PREFIX_STATUS","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"        String userInput \u003d \"updates 1 done\";","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"        // Invalid index","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"        String userInput \u003d \"updates a \" + PREFIX_STATUS + \"PENDING\";","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"    public void parse_invalidStatus_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"        // Invalid status","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"        String userInput \u003d \"updates 1 \" + PREFIX_STATUS + \"INVALID_STATUS\";","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":84,"joeng03":9}},{"path":"src/test/java/seedu/pharmhub/logic/parser/ViewOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewOrderCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"class ViewOrderCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    private ViewOrderCommandParser parser \u003d new ViewOrderCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    public void parse_validArgs_returnsViewOrderCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"        assertParseSuccess(parser, \"1\", new ViewOrderCommand(\"1\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"HEEaZ":20,"joeng03":5,"timetraveller-123":1}},{"path":"src/test/java/seedu/pharmhub/logic/parser/ViewPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.ViewPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"class ViewPersonCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    private ViewPersonCommandParser parser \u003d new ViewPersonCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    public void parse_validArgs_returnsViewPersonCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"                parser,","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"                String.valueOf(INDEX_FIRST.getOneBased()),","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"                new ViewPersonCommand(INDEX_FIRST));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"HEEaZ":22,"joeng03":6,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PharmHubBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"        assertEquals(new PharmHub(), new PharmHub(modelManager.getPharmHub()));","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"        userPrefs.setPharmHubFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"        userPrefs.setPharmHubFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"    public void setPharmHubFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPharmHubFilePath(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"    public void setPharmHubFilePath_validPath_setsPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"        modelManager.setPharmHubFilePath(path);","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"        assertEquals(path, modelManager.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"    public void hasPerson_personNotInPharmHub_returnsFalse() {","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"    public void hasPerson_personInPharmHub_returnsTrue() {","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredOrderList().remove(0));","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"joeng03"},"content":"        PharmHub pharmHub \u003d new PharmHubBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"        PharmHub differentPharmHub \u003d new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"        modelManager \u003d new ModelManager(pharmHub, userPrefs);","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(pharmHub, userPrefs);","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"        // different PharmHub -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPharmHub, userPrefs)));","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"        assertFalse(modelManager.equals(new ModelManager(pharmHub, userPrefs)));","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"joeng03"},"content":"        differentUserPrefs.setPharmHubFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"joeng03"},"content":"        assertFalse(modelManager.equals(new ModelManager(pharmHub, differentUserPrefs)));","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"HEEaZ":5,"joeng03":27,"-":105}},{"path":"src/test/java/seedu/pharmhub/model/PharmHubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"public class PharmHubTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"    private final PharmHub pharmHub \u003d new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        assertEquals(Collections.emptyList(), pharmHub.getPersonList());","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e pharmHub.resetData(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"    public void resetData_withValidReadOnlyPharmHub_replacesData() {","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"        PharmHub newData \u003d getTypicalPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"        pharmHub.resetData(newData);","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        assertEquals(newData, pharmHub);","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"        Order order \u003d new Order(","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"                new OrderNumber(\"12\"), ALICE, new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)),","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"                new Status(Status.OrderStatus.PENDING));","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        List\u003cOrder\u003e newOrders \u003d List.of(order);","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        List\u003cMedicine\u003e newMedicines \u003d List.of(PANADOL_MEDICINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"        PharmHubStub newData \u003d new PharmHubStub(newPersons, newOrders, newMedicines);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e pharmHub.resetData(newData));","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e pharmHub.hasPerson(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"    public void hasPerson_personNotInPharmHub_returnsFalse() {","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        assertFalse(pharmHub.hasPerson(ALICE));","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"    public void hasPerson_personInPharmHub_returnsTrue() {","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"        pharmHub.addPerson(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"        assertTrue(pharmHub.hasPerson(ALICE));","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"    public void hasPerson_personWithSameIdentityFieldsInPharmHub_returnsTrue() {","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"        pharmHub.addPerson(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"        assertTrue(pharmHub.hasPerson(editedAlice));","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e pharmHub.getPersonList().remove(0));","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"        String expected \u003d PharmHub.class.getCanonicalName() + \"{persons\u003d\" + pharmHub.getPersonList() + \", \"","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"                + \"orders\u003d\" + pharmHub.getOrderList() + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"        assertEquals(expected, pharmHub.toString());","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"     * A stub ReadOnlyPharmHub whose persons list can violate interface constraints.","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"    private static class PharmHubStub implements ReadOnlyPharmHub {","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"timetraveller-123"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"timetraveller-123"},"content":"        private final ObservableList\u003cMedicine\u003e medicines \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"joeng03"},"content":"        PharmHubStub(Collection\u003cPerson\u003e persons, Collection\u003cOrder\u003e orders, Collection\u003cMedicine\u003e medicines) {","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"timetraveller-123"},"content":"            this.orders.setAll(orders);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"timetraveller-123"},"content":"            this.medicines.setAll(medicines);","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"timetraveller-123"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"timetraveller-123"},"content":"            return orders;","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"timetraveller-123"},"content":"        public ObservableList\u003cMedicine\u003e getMedicineList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"timetraveller-123"},"content":"            return medicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"timetraveller-123"},"content":"        public Optional\u003cOrder\u003e getOrder(String orderNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"timetraveller-123"},"content":"            return orders.stream().filter(order -\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"timetraveller-123"},"content":"                    order.getOrderNumber().toString().equals(orderNumber)).findFirst();","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"timetraveller-123"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"timetraveller-123"},"content":"        public Optional\u003cMedicine\u003e getMedicine(Medicine medicine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"timetraveller-123"},"content":"            return medicines.stream().filter(m -\u003e medicine.isSameMedicine(m)).findFirst();","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"timetraveller-123"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"HEEaZ":11,"joeng03":40,"-":70,"timetraveller-123":27}},{"path":"src/test/java/seedu/pharmhub/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"    public void setPharmHubFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPharmHubFilePath(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"joeng03":4,"-":17}},{"path":"src/test/java/seedu/pharmhub/model/allergy/AllergyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"public class AllergyTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Allergy(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"    public void constructor_invalidAllergyName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Allergy(new Medicine(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"    public void isValidAllergyName() {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"        // null allergy name","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e Allergy.isValidAllergyName(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"    public void equals_sameAllergyName_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        Allergy allergy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        Allergy allergyCopy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"        assertEquals(allergy, allergyCopy);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    public void equals_differentAllergyName_returnsFalse() {","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        Allergy allergy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"        Allergy allergyCopy \u003d new Allergy(new Medicine(\"Panadol\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"        assertNotEquals(allergy, allergyCopy);","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    public void isSameAllergy_sameAllergyObject_returnsTrue() {","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        Allergy allergy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"        assertEquals(allergy, allergy);","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"    public void isSameAllergy_allergyIsNull_returnsFalse() {","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"        Allergy allergy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        assertNotEquals(allergy, null);","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"    public void isSameAllergy_sameAllergyName_returnsTrue() {","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"        Allergy allergy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"        Allergy allergyCopy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        assertEquals(allergy, allergyCopy);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"    public void isSameAllergy_differentAllergyName_returnsFalse() {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"        Allergy allergy \u003d new Allergy(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"        Allergy allergyCopy \u003d new Allergy(new Medicine(\"Panadol\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"        assertNotEquals(allergy, allergyCopy);","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"joeng03":63,"timetraveller-123":4}},{"path":"src/test/java/seedu/pharmhub/model/medicine/MedicineListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.medicine;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.ASPIRIN_MEDICINE;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.IBUPROFEN_MEDICINE;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PENICILLIN_MEDICINE;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import java.util.List;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.exceptions.DuplicateMedicineException;","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.exceptions.MedicineNotFoundException;","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"class MedicineListTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    private List\u003cMedicine\u003e listOfMedicines \u003d null;","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"    private MedicineList medicineList;","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    public void init() {","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"        listOfMedicines \u003d List.of(ASPIRIN_MEDICINE, IBUPROFEN_MEDICINE, PENICILLIN_MEDICINE);","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"        medicineList \u003d new MedicineList();","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"        for (Medicine medicine : listOfMedicines) {","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"            medicineList.add(medicine);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    public void setMedicines_withMedicineList_successfullySetMedicines() {","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        MedicineList newMedicineList \u003d new MedicineList();","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"        newMedicineList.setMedicines(medicineList);","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicineList, newMedicineList);","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    void setMedicines_withListOfMedicines_successfullySetMedicines() {","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        MedicineList newMedicineList \u003d new MedicineList();","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"        newMedicineList.setMedicines(listOfMedicines);","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicineList, newMedicineList);","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        assertTrue(medicineList.equals(medicineList));","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"        assertFalse(medicineList.equals(PENICILLIN_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"        assertFalse(medicineList.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        MedicineList anotherDifferentMedicineList \u003d new MedicineList();","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        anotherDifferentMedicineList.add(IBUPROFEN_MEDICINE);","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"        assertFalse(medicineList.equals(anotherDifferentMedicineList));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"        MedicineList anotherSameMedicineList \u003d new MedicineList();","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"        for (Medicine medicine : listOfMedicines) {","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"            anotherSameMedicineList.add(medicine);","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"        assertTrue(medicineList.equals(anotherSameMedicineList));","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"    public void add_duplicateMedicine_throwsDuplicateMedicineException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"        assertThrows(DuplicateMedicineException.class, () -\u003e medicineList.add(ASPIRIN_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"    public void remove_medicineInList_successfullyRemovesMedicine() {","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        medicineList.remove(ASPIRIN_MEDICINE);","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        assertFalse(medicineList.contains(ASPIRIN_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"    public void remove_medicineNotInList_throwsMedicineNotFoundException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"        assertThrows(MedicineNotFoundException.class, () -\u003e medicineList.remove(PANADOL_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"    public void contains_medicineInList_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"        assertTrue(medicineList.contains(ASPIRIN_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"    public void contains_medicineNotInList_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"        assertFalse(medicineList.contains(PANADOL_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"joeng03"},"content":"    public void contains_nullMedicine_throwsNullPointerException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e medicineList.contains(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"joeng03"},"content":"    public void getMedicine_medicineInList_returnsMedicine() {","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"        Optional\u003cMedicine\u003e medicine \u003d medicineList.getMedicine(IBUPROFEN_MEDICINE);","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine.get(), IBUPROFEN_MEDICINE);","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"    public void getMedicine_medicineNotInList_returnsEmptyOptional() {","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"        Optional\u003cMedicine\u003e medicine \u003d medicineList.getMedicine(new Medicine(\"PANADOL\"));","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine, Optional.empty());","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"joeng03"},"content":"    public void setMedicine_medicineInList_successfullySetMedicine() {","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"joeng03"},"content":"        medicineList.setMedicine(ASPIRIN_MEDICINE, PANADOL_MEDICINE);","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"joeng03"},"content":"        assertTrue(medicineList.contains(PANADOL_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"joeng03"},"content":"        assertFalse(medicineList.contains(ASPIRIN_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"    public void setMedicine_medicineNotInList_throwsMedicineNotFoundException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"        assertThrows(MedicineNotFoundException.class, () -\u003e medicineList.setMedicine(PANADOL_MEDICINE,","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"joeng03"},"content":"                ASPIRIN_MEDICINE));","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"joeng03"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicineList.toString(), listOfMedicines.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"joeng03":131}},{"path":"src/test/java/seedu/pharmhub/model/medicine/MedicineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.medicine;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"public class MedicineTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Medicine(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"    public void constructor_invalidMedicineName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Medicine(\"\"));","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"    public void hasShortForm_initializedWithValidShortForm_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Panadol\", \"Pan\");","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine.hasShortForm(), true);","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"    public void hasShortForm_notInitializedWithShortForm_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Panadol\");","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine.hasShortForm(), false);","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"    public void getShortForm_initializedWithShortForm_returnsShortForm() {","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Panadol\", \"Pan\");","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine.getShortForm(), \"Pan\");","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"    public void getShortForm_notInitializedWithShortForm_returnsBlankString() {","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Panadol\");","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine.getShortForm(), \"\");","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    public void isValidMedicineName() {","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        // null medicine name","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e Medicine.isValidMedicineName(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"    public void equals_sameMedicineName_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        Medicine medicineCopy \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine, medicineCopy);","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"    public void equals_differentMedicineName_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        Medicine medicineCopy \u003d new Medicine(\"Panadol\");","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"        assertNotEquals(medicine, medicineCopy);","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"    public void isSameMedicine_sameMedicineObject_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine, medicine);","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"    public void isSameMedicine_medicineIsNull_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"        assertNotEquals(medicine, null);","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"    public void isSameMedicine_sameMedicineName_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        Medicine medicineCopy \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        assertEquals(medicine, medicineCopy);","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"    public void isSameMedicine_differentMedicineName_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"        Medicine medicine \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"        Medicine medicineCopy \u003d new Medicine(\"Panadol\");","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"        assertNotEquals(medicine, medicineCopy);","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"    public void isValidShortForm_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"        assertEquals(Medicine.isValidShortForm(\"Pan\"), true);","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"        assertEquals(Medicine.isValidShortForm(\"Asp\"), true);","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"        assertEquals(Medicine.isValidShortForm(\"\"), true);","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"joeng03":93}},{"path":"src/test/java/seedu/pharmhub/model/order/OrderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.CARL_PANADOL_ORDER;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"class OrderListTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    private List\u003cOrder\u003e list;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    private OrderList orderList;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"    private Order order;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    public void init() {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"        order \u003d new Order(new OrderNumber(\"1\"), CARL, new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)),","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"                    new Status(Status.OrderStatus.PENDING));","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        list.add(order);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"        orderList \u003d new OrderList();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        orderList.add(order);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    public void setOrders() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"        OrderList newOrderList \u003d new OrderList();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        newOrderList.setOrders(orderList);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(orderList, newOrderList);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(orderList.equals(orderList));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(orderList.equals(order));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"    public void add_duplicateOrder_throwsDuplicateOrderException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e orderList.add(CARL_PANADOL_ORDER));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"    public void contains_orderInList_returnsTrue() {","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(orderList.contains(CARL_PANADOL_ORDER));","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"    public void contains_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderList.contains(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"HEEaZ":2,"joeng03":6,"timetraveller-123":59}},{"path":"src/test/java/seedu/pharmhub/model/order/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"timetraveller-123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":"class OrderTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"    private final Order order \u003d new Order(new OrderNumber(\"1\"), ALICE, new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)),","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"                                            new Status(Status.OrderStatus.PENDING));","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"        String expected \u003d Order.class.getCanonicalName() + \"{orderNumber\u003d\" + order.getOrderNumber()","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"                + \", person\u003d\" + order.getPerson().toString()","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"                + \", medicines\u003d\" + order.getMedicines()","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"                + \", status\u003d\" + order.getStatus() + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"        assertEquals(expected, order.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(order.equals(order));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        //null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(order.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"        Order newOrder \u003d new Order(new OrderNumber(\"1\"), ALICE, new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)),","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"                new Status(Status.OrderStatus.PENDING));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        //all attributes same -\u003e return true","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(order.equals(newOrder));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"LinWanLeii":1,"HEEaZ":7,"joeng03":3,"timetraveller-123":32}},{"path":"src/test/java/seedu/pharmhub/model/order/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.order;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"public class StatusTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    public void constructor_invalidStatusName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"        String invalidStatusName \u003d \"LOST\";","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"        assertThrows(AssertionError.class, () -\u003e new Status(Status.toOrderStatus(invalidStatusName)));","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    public void equals_sameStatusObjects_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        Status status1 \u003d new Status(Status.OrderStatus.PENDING);","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"        Status status2 \u003d new Status(Status.OrderStatus.PENDING);","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(status1, status2);","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    public void equals_differentStatusObjects_returnsFalse() {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        Status status1 \u003d new Status(Status.OrderStatus.PENDING);","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"        Status status2 \u003d new Status(Status.OrderStatus.COMPLETED);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"        assertNotEquals(status1, status2);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    public void hashCode_equalStatusObjects_returnsEqualHashCodes() {","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"        Status status1 \u003d new Status(Status.toOrderStatus(\"PENDING\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        Status status2 \u003d new Status(Status.OrderStatus.PENDING);","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(status1.hashCode(), status2.hashCode());","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    public void toString_returnsCorrectStringRepresentation() {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"        Status status \u003d new Status(Status.OrderStatus.PREPARING);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(\"PREPARING\", status.toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":42,"joeng03":2}},{"path":"src/test/java/seedu/pharmhub/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"joeng03":2,"-":54}},{"path":"src/test/java/seedu/pharmhub/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"joeng03":2,"-":86}},{"path":"src/test/java/seedu/pharmhub/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"joeng03":2,"-":83}},{"path":"src/test/java/seedu/pharmhub/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"joeng03":2,"-":58}},{"path":"src/test/java/seedu/pharmhub/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        // name differs in case + trailing whitespace, all other attributes same -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName((VALID_NAME_BOB + \" \").toLowerCase()).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"    @Test void isAllergicTo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"        // medicineName exists in allergies of patient -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(ALICE.isAllergicTo(new Medicine(\"Aspirin\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        // medicineName does not exist in allergies of patient -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        assertFalse(ALICE.isAllergicTo(new Medicine(\"Paracetamol\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        assertFalse(ALICE.isAllergicTo(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"        // same name, medicineName exists in allergies of patient -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAllergies(\"paracetamol\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"        assertTrue(editedAlice.isAllergicTo(new Medicine(\"paracetamol\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"                + \", allergies\u003d\" + ALICE.getAllergies() + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"HEEaZ":4,"joeng03":22,"-":83,"timetraveller-123":3}},{"path":"src/test/java/seedu/pharmhub/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"joeng03":2,"-":58}},{"path":"src/test/java/seedu/pharmhub/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.person;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"joeng03":9,"-":166}},{"path":"src/test/java/seedu/pharmhub/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.model.tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"joeng03":2,"-":24}},{"path":"src/test/java/seedu/pharmhub/storage/JsonAdaptedOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.storage.JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalOrders.PANADOL_MEDICINE;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"public class JsonAdaptedOrderTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    private static final String INVALID_ORDERNUMBER_NONINTEGER \u003d \"a234\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    private static final String INVALID_ORDERNUMBER_NEGATIVE \u003d \"-1234\";","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"timetraveller-123"},"content":"    private static final String VALID_ORDERNUMBER \u003d \"1234\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    private static final JsonAdaptedPerson VALID_PERSON \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    private static final JsonAdaptedStatus VALID_STATUS \u003d new JsonAdaptedStatus(\"PENDING\");","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    private static final JsonAdaptedMedicine VALID_MEDICINE \u003d new JsonAdaptedMedicine(PANADOL_MEDICINE);","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"    public void toModelType_nonIntegerOrderNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(INVALID_ORDERNUMBER_NONINTEGER,","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"                VALID_PERSON, List.of(VALID_MEDICINE), VALID_STATUS);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d OrderNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"timetraveller-123"},"content":"    public void toModelType_negativeIntegerOrderNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"timetraveller-123"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(INVALID_ORDERNUMBER_NEGATIVE,","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"timetraveller-123"},"content":"                VALID_PERSON, List.of(VALID_MEDICINE), VALID_STATUS);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d OrderNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"timetraveller-123"},"content":"    public void toModelType_nullOrderNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"timetraveller-123"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(null,","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"timetraveller-123"},"content":"                VALID_PERSON, List.of(VALID_MEDICINE), VALID_STATUS);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, OrderNumber.class.getSimpleName());","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"timetraveller-123"},"content":"    public void toModelType_nullPerson_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"timetraveller-123"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_ORDERNUMBER,","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"timetraveller-123"},"content":"                null, List.of(VALID_MEDICINE), VALID_STATUS);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"timetraveller-123"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Person.class.getSimpleName());","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"timetraveller-123"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"timetraveller-123"},"content":"    public void toModelType_nullMedicineName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"timetraveller-123"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_ORDERNUMBER,","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"                VALID_PERSON, null, VALID_STATUS);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"medicines\");","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"timetraveller-123"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"LinWanLeii":2,"HEEaZ":6,"joeng03":8,"timetraveller-123":54}},{"path":"src/test/java/seedu/pharmhub/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    private static final String INVALID_ALLERGY \u003d \"\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    private static final List\u003cJsonAdaptedAllergy\u003e VALID_ALLERGIES \u003d BENSON.getAllergies().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"            .map(JsonAdaptedAllergy::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"                        VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"                VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"                        VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"                VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"                        VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"                VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"                        VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"                VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"joeng03"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"joeng03"},"content":"                        VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"joeng03"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"joeng03"},"content":"    public void toModelType_invalidAllergies_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"joeng03"},"content":"        List\u003cJsonAdaptedAllergy\u003e invalidAllergies \u003d new ArrayList\u003c\u003e(VALID_ALLERGIES);","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"timetraveller-123"},"content":"        invalidAllergies.add(new JsonAdaptedAllergy(new JsonAdaptedMedicine(INVALID_ALLERGY, \"\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"joeng03"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"joeng03"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"joeng03"},"content":"                        invalidAllergies);","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"joeng03":41,"-":92,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/storage/JsonPharmHubStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"public class JsonPharmHubStorageTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPharmHubStorageTest\");","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"    @TempDir","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    public Path testFolder;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    public void readPharmHub_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPharmHub(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    private java.util.Optional\u003cReadOnlyPharmHub\u003e readPharmHub(String filePath) throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"        return new JsonPharmHubStorage(Paths.get(filePath)).readPharmHub(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"                : null;","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        assertFalse(readPharmHub(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPharmHub(\"notJsonFormatPharmHub.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"    public void readPharmHub_invalidPersonPharmHub_throwDataLoadingException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPharmHub(\"invalidPersonPharmHub.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"    public void readPharmHub_invalidAndValidPersonPharmHub_throwDataLoadingException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPharmHub(\"invalidAndValidPersonPharmHub.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"    public void readAndSavePharmHub_allInOrder_success() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPharmHub.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"        PharmHub original \u003d getTypicalPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"        JsonPharmHubStorage jsonPharmHubStorage \u003d new JsonPharmHubStorage(filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"        jsonPharmHubStorage.savePharmHub(original, filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"        ReadOnlyPharmHub readBack \u003d jsonPharmHubStorage.readPharmHub(filePath).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"        assertEquals(original, new PharmHub(readBack));","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        jsonPharmHubStorage.savePharmHub(original, filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"        readBack \u003d jsonPharmHubStorage.readPharmHub(filePath).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"        assertEquals(original, new PharmHub(readBack));","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"joeng03"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"joeng03"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"joeng03"},"content":"        jsonPharmHubStorage.savePharmHub(original); // file path not specified","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"joeng03"},"content":"        readBack \u003d jsonPharmHubStorage.readPharmHub().get(); // file path not specified","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"joeng03"},"content":"        assertEquals(original, new PharmHub(readBack));","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"    public void savePharmHub_nullPharmHub_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePharmHub(null, \"SomeFile.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"     * Saves {@code PharmHub} at the specified {@code filePath}.","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"    private void savePharmHub(ReadOnlyPharmHub pharmHub, String filePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"joeng03"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"joeng03"},"content":"            new JsonPharmHubStorage(Paths.get(filePath))","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"joeng03"},"content":"                    .savePharmHub(pharmHub, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"joeng03"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"joeng03"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"joeng03"},"content":"    public void savePharmHub_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"joeng03"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePharmHub(new PharmHub(), null));","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":110}},{"path":"src/test/java/seedu/pharmhub/storage/JsonSerializablePharmHubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.util.JsonUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.testutil.TypicalPersons;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"public class JsonSerializablePharmHubTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePharmHubTest\");","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsPharmHub.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonPharmHub.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonPharmHub.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    private static final Path DUPLICATE_ORDER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateOrderPharmHub.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"    private static final Path INVALID_ORDERPERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderPersonPharmHub.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"        JsonSerializablePharmHub dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"                JsonSerializablePharmHub.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"        PharmHub pharmHubFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"        PharmHub typicalPersonsPharmHub \u003d TypicalPersons.getTypicalPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"        assertEquals(pharmHubFromFile, typicalPersonsPharmHub);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"        JsonSerializablePharmHub dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"                JsonSerializablePharmHub.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"joeng03"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"joeng03"},"content":"        JsonSerializablePharmHub dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"joeng03"},"content":"                JsonSerializablePharmHub.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"joeng03"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePharmHub.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"joeng03"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"joeng03"},"content":"    public void toModelType_duplicateOrders_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"        JsonSerializablePharmHub dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ORDER_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"                JsonSerializablePharmHub.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePharmHub.MESSAGE_DUPLICATE_ORDER,","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"joeng03"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"    public void toModelType_invalidOrder_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"joeng03"},"content":"        JsonSerializablePharmHub dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDERPERSON_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"joeng03"},"content":"                JsonSerializablePharmHub.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"joeng03"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePharmHub.MESSAGE_INVALID_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":67}},{"path":"src/test/java/seedu/pharmhub/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        userPrefs.setPharmHubFilePath(Paths.get(\"pharmhub.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"joeng03":6,"-":117}},{"path":"src/test/java/seedu/pharmhub/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.storage;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.TypicalPersons.getTypicalPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.ReadOnlyPharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"        JsonPharmHubStorage pharmHubStorage \u003d new JsonPharmHubStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"        storageManager \u003d new StorageManager(pharmHubStorage, userPrefsStorage);","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"joeng03"},"content":"    public void pharmHubReadSave() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"joeng03"},"content":"         * {@link JsonPharmHubStorage} class.","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"joeng03"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPharmHubStorageTest} class.","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"joeng03"},"content":"        PharmHub original \u003d getTypicalPharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"joeng03"},"content":"        storageManager.savePharmHub(original);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"joeng03"},"content":"        ReadOnlyPharmHub retrieved \u003d storageManager.readPharmHub().get();","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"        assertEquals(original, new PharmHub(retrieved));","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"joeng03"},"content":"    public void getPharmHubFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"        assertNotNull(storageManager.getPharmHubFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":17,"-":51}},{"path":"src/test/java/seedu/pharmhub/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"joeng03":1,"-":33}},{"path":"src/test/java/seedu/pharmhub/testutil/EditOrderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.UpdateStatusCommand.EditOrderDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"public class EditOrderDescriptorBuilder {","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    private EditOrderDescriptor descriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    public EditOrderDescriptorBuilder() {","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"        descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    public EditOrderDescriptorBuilder(EditOrderDescriptor descriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"        this.descriptor \u003d new EditOrderDescriptor(descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    public EditOrderDescriptorBuilder(Order order) {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"        descriptor.setOrderNumber(order.getOrderNumber());","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        descriptor.setPerson(order.getPerson());","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        descriptor.setMedicines(order.getMedicines());","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"        descriptor.setStatus(order.getStatus());","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    public EditOrderDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        descriptor.setStatus(new Status(Status.toOrderStatus(status)));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    public EditOrderDescriptor build() {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        return descriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":39,"HEEaZ":1,"joeng03":4}},{"path":"src/test/java/seedu/pharmhub/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"        descriptor.setAllergies(person.getAllergies());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"joeng03"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cAllergy\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"joeng03"},"content":"     * that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"joeng03"},"content":"    public EditPersonDescriptorBuilder withAllergies(String... allergies) {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"timetraveller-123"},"content":"        Set\u003cAllergy\u003e allergySet \u003d Stream.of(allergies).map(x -\u003e new Allergy(new Medicine(x)))","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"timetraveller-123"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"joeng03"},"content":"        descriptor.setAllergies(allergySet);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"joeng03"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"joeng03":20,"-":79,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"public class OrderBuilder {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    public static final String DEFAULT_ORDER_NUMBER \u003d \"1\";","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"timetraveller-123"},"content":"    public static final Set\u003cMedicine\u003e DEFAULT_MEDICINES \u003d new HashSet\u003c\u003e(List.of(new Medicine(\"Panadol\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    public static final String DEFAULT_STATUS \u003d \"PENDING\";","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"            .withAllergies(\"Aspirin\")","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    private OrderNumber orderNumber;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"    private Person person;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    private Set\u003cMedicine\u003e medicines;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    private Status status;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    public OrderBuilder() {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        orderNumber \u003d new OrderNumber(DEFAULT_ORDER_NUMBER);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        person \u003d ALICE;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        medicines \u003d DEFAULT_MEDICINES;","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        status \u003d new Status(Status.toOrderStatus(DEFAULT_STATUS));","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        orderNumber \u003d orderToCopy.getOrderNumber();","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"        person \u003d orderToCopy.getPerson();","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        medicines \u003d orderToCopy.getMedicines();","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        status \u003d orderToCopy.getStatus();","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"    public OrderBuilder withStatus(String status) {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"        this.status \u003d new Status(Status.toOrderStatus(status));","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"    public Order build() {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"        return new Order(orderNumber, person, medicines, status);","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LinWanLeii":46,"HEEaZ":8,"joeng03":6,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Address;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Email;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Phone;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.util.SampleDataUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"    private Set\u003cAllergy\u003e allergies;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"joeng03"},"content":"        allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"joeng03"},"content":"        allergies \u003d new HashSet\u003c\u003e(personToCopy.getAllergies());","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cAllergy\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"joeng03"},"content":"    public PersonBuilder withAllergies(String... allergies) {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"joeng03"},"content":"        this.allergies \u003d SampleDataUtil.getAllergySet(allergies);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"joeng03"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"        return new Person(name, phone, email, address, tags, allergies, new HashSet\u003c\u003e());","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"HEEaZ":1,"joeng03":20,"-":87}},{"path":"src/test/java/seedu/pharmhub/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.allergy.Allergy;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"joeng03"},"content":"        person.getAllergies().stream().forEach(","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"timetraveller-123"},"content":"            s -\u003e sb.append(PREFIX_ALLERGY + s.allergy.getMedicineName() + \" \")","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"        );","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"joeng03"},"content":"                sb.append(PREFIX_TAG + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"joeng03"},"content":"        if (descriptor.getAllergies().isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"joeng03"},"content":"            Set\u003cAllergy\u003e allergies \u003d descriptor.getAllergies().get();","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"joeng03"},"content":"            if (allergies.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"joeng03"},"content":"                sb.append(PREFIX_ALLERGY);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"joeng03"},"content":"            } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"timetraveller-123"},"content":"                allergies.forEach(s -\u003e sb.append(PREFIX_ALLERGY).append(s.allergy.getMedicineName()).append(\" \"));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"joeng03"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"HEEaZ":1,"joeng03":22,"-":50,"timetraveller-123":2}},{"path":"src/test/java/seedu/pharmhub/testutil/PharmHubBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":" * A utility class to help with building PharmHub objects.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":" *     {@code PharmHub ab \u003d new PharmHubBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"public class PharmHubBuilder {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"joeng03"},"content":"    private PharmHub pharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"joeng03"},"content":"    public PharmHubBuilder() {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"joeng03"},"content":"        pharmHub \u003d new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"    public PharmHubBuilder(PharmHub pharmHub) {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"        this.pharmHub \u003d pharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"joeng03"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"joeng03"},"content":"     * Adds a new {@code Person} to the {@code PharmHub} that we are building.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"joeng03"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"joeng03"},"content":"    public PharmHubBuilder withPerson(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"joeng03"},"content":"        pharmHub.addPerson(person);","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"joeng03"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"    public PharmHub build() {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"        return pharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"joeng03"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"joeng03"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"joeng03":34}},{"path":"src/test/java/seedu/pharmhub/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":1,"-":71}},{"path":"src/test/java/seedu/pharmhub/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeng03":4,"-":51}},{"path":"src/test/java/seedu/pharmhub/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"timetraveller-123"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"timetraveller-123"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"timetraveller-123"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"    public static final Index INDEX_FIFTH \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"joeng03":2,"-":7,"timetraveller-123":4}},{"path":"src/test/java/seedu/pharmhub/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"timetraveller-123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"timetraveller-123"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"timetraveller-123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Order;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.OrderNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.order.Status;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"timetraveller-123"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"timetraveller-123"},"content":" * A utility class containing a list of {@code Order} objects to be used in tests.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"timetraveller-123"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"timetraveller-123"},"content":"public class TypicalOrders {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"timetraveller-123"},"content":"    public static final String ORDER_NUMBER_FIRST_ORDER \u003d \"1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"timetraveller-123"},"content":"    public static final String ORDER_NUMBER_SECOND_ORDER \u003d \"1234\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    public static final Status STATUS_PENDING \u003d new Status(Status.OrderStatus.PENDING);","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    public static final Status STATUS_COMPLETED \u003d new Status(Status.OrderStatus.COMPLETED);","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"timetraveller-123"},"content":"    public static final Medicine PANADOL_MEDICINE \u003d new Medicine(\"Panadol\");","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"timetraveller-123"},"content":"    public static final Medicine ASPIRIN_MEDICINE \u003d new Medicine(\"Aspirin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"timetraveller-123"},"content":"    public static final Medicine PARACETAMOL_MEDICINE \u003d new Medicine(\"Paracetamol\");","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"timetraveller-123"},"content":"    public static final Medicine PENICILLIN_MEDICINE \u003d new Medicine(\"Penicillin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"timetraveller-123"},"content":"    public static final Medicine IBUPROFEN_MEDICINE \u003d new Medicine(\"Ibuprofen\");","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"timetraveller-123"},"content":"    public static final Order CARL_PANADOL_ORDER \u003d new Order(new OrderNumber(\"1\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"timetraveller-123"},"content":"            TypicalPersons.CARL, new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)), STATUS_PENDING);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"timetraveller-123"},"content":"    public static final Order BENSON_PANADOL_ORDER \u003d new Order(new OrderNumber(\"1234\"),","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"timetraveller-123"},"content":"            TypicalPersons.BENSON, new HashSet\u003c\u003e(List.of(PANADOL_MEDICINE)), STATUS_COMPLETED);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"timetraveller-123"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"timetraveller-123"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CARL_PANADOL_ORDER, BENSON_PANADOL_ORDER));","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"timetraveller-123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"timetraveller-123"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"LinWanLeii":2,"HEEaZ":3,"joeng03":5,"timetraveller-123":27}},{"path":"src/test/java/seedu/pharmhub/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.PharmHub;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.medicine.Medicine;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"joeng03"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"joeng03"},"content":"            .withAllergies(\"Aspirin\")","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"joeng03"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"joeng03"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"joeng03"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"joeng03"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"joeng03"},"content":"            .withAllergies(\"Aspirin\", \"Penicillin\")","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"joeng03"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"joeng03"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").withAllergies(","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"joeng03"},"content":"                    \"Paracetamol\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"joeng03"},"content":"     * Returns an {@code PharmHub} with all the typical persons.","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"joeng03"},"content":"    public static PharmHub getTypicalPharmHub() {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"joeng03"},"content":"        PharmHub ab \u003d new PharmHub();","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"timetraveller-123"},"content":"        ab.addMedicine(new Medicine(\"Aspirin\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"timetraveller-123"},"content":"        ab.addMedicine(new Medicine(\"Panadol\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"timetraveller-123"},"content":"        ab.addMedicine(new Medicine(\"Penicillin\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"timetraveller-123"},"content":"        ab.addMedicine(new Medicine(\"Paracetamol\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"timetraveller-123"},"content":"        ab.addMedicine(new Medicine(\"For Deleting\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"timetraveller-123"},"content":"        ab.setOrders(TypicalOrders.getTypicalOrders());","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"timetraveller-123"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"joeng03":27,"-":56,"timetraveller-123":9}},{"path":"src/test/java/seedu/pharmhub/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"joeng03":1,"-":44}},{"path":"src/test/java/seedu/pharmhub/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeng03"},"content":"package seedu.pharmhub.ui;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joeng03"},"content":"import static seedu.pharmhub.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"joeng03"},"content":"import seedu.pharmhub.MainApp;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"joeng03":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"\u003c?import seedu.pharmhub.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"joeng03":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"joeng03"},"content":"\u003cfx:root type\u003d\"seedu.pharmhub.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"joeng03":1}}]

[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"### Jed","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"\u003cimg src\u003d\"images/jedkohjk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"[[github](https://github.com/jedkohjk)]","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"* Role: Developer","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"### Nguyen Cao Duy","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"\u003cimg src\u003d\"images/ncduy0303.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"[[github](https://github.com/ncduy0303)]","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"[[portfolio](team/ncduy0303.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"* Role: Developer","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"* Responsibilities: Full Stack","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"### Nathaniel Calimag","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"\u003cimg src\u003d\"images/nathanielcalimag.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"[[github](http://github.com/nathanielcalimag)] [[portfolio](team/nathanielcalimag.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"* Role: Software Engineer","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"* Responsibilities: Full Stack","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"### Khoo Wui Hong","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"\u003cimg src\u003d\"images/wui-hong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"[[github](http://github.com/wui-hong)]","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"* Responsibilities: ","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"### Jeffrey Jian","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/jeffrey-jian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"[[github](http://github.com/jeffrey-jian)]","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"[[portfolio](team/jeffrey-jian.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"* Responsibilities: Full Stack","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"jedkohjk":4,"nathanielcalimag":5,"ncduy0303":6,"-":32,"wui-hong":4,"jeffrey-jian":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"jedkohjk"},"content":"**Target User Profile**: University students who live in hall","lastModifiedDate":"2023-10-02"},{"lineNumber":260,"author":{"gitId":"jedkohjk"},"content":"* Needs to manage a significant number of contacts","lastModifiedDate":"2023-10-02"},{"lineNumber":261,"author":{"gitId":"jedkohjk"},"content":"* Often splits expenses with other hallmates (for groceries, meals etc.)","lastModifiedDate":"2023-10-02"},{"lineNumber":262,"author":{"gitId":"jedkohjk"},"content":"* Have friend groups with whom they hang out more frequently","lastModifiedDate":"2023-10-02"},{"lineNumber":263,"author":{"gitId":"jedkohjk"},"content":"* Often has their laptop on hand and prefer desktop apps","lastModifiedDate":"2023-10-02"},{"lineNumber":264,"author":{"gitId":"jedkohjk"},"content":"* Used to typing fast on their laptop","lastModifiedDate":"2023-10-02"},{"lineNumber":265,"author":{"gitId":"jedkohjk"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"jedkohjk"},"content":"**Value Proposition**: The app will allow users to seamlessly keep track of the money they owe/are owed, with regards to borrowers/lenders and their expenses. It is CLI-based and manages contacts faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-10-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​ | So that I can…​ |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"jedkohjk"},"content":"| `* * *` | new user | see usage instructions | refer to instructions when I forget how to use the app |","lastModifiedDate":"2023-10-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| `* * *` | user | add a new person | |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| `* * *`  | user | delete a person | remove entries that I no longer need |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | user | find a person by name | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"jedkohjk"},"content":"| `* * *` | user | add expenses under a specific person | |","lastModifiedDate":"2023-10-02"},{"lineNumber":281,"author":{"gitId":"jedkohjk"},"content":"| `* * *` | user | add group expenses | easily add expenses that are split among a group |","lastModifiedDate":"2023-10-02"},{"lineNumber":282,"author":{"gitId":"jedkohjk"},"content":"| `* *` | user | edit expenses | change incorrectly added entries |","lastModifiedDate":"2023-10-02"},{"lineNumber":283,"author":{"gitId":"jedkohjk"},"content":"| `* * *` | user | delete expenses | remove incorrectly added entries |","lastModifiedDate":"2023-10-02"},{"lineNumber":284,"author":{"gitId":"jedkohjk"},"content":"| `* * *` | user | view balance with each person | know how much they owe me |","lastModifiedDate":"2023-10-02"},{"lineNumber":285,"author":{"gitId":"jedkohjk"},"content":"| `* *` | user | settle balances | simulate clearing of debt |","lastModifiedDate":"2023-10-02"},{"lineNumber":286,"author":{"gitId":"jedkohjk"},"content":"| `* * *` | user | list all my expenses with a specific person | remind myself of why a specific person\u0027s balance is the way it is |","lastModifiedDate":"2023-10-02"},{"lineNumber":287,"author":{"gitId":"jedkohjk"},"content":"| `* *` | user with many persons in the address book | sort persons by balance | know from whom I should collect money |","lastModifiedDate":"2023-10-02"},{"lineNumber":288,"author":{"gitId":"jedkohjk"},"content":"| `*` | user | hide private contact details | minimise chance of someone else seeing them by accident |","lastModifiedDate":"2023-10-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jedkohjk":18,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"# Spend n Split","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"## Description","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"Spend n Split (SnS) is a **desktop app for managing expense from contacts, optimized for use via a Command Line ","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SnS can ","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"get your contact expense management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"## Setup","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"2. Download the latest `spendnsplit.jar` from [here](https://github.com). (Coming soon)","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Spend N Split.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar spendnsplit.jar` ","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will ","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"open the help window.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    * `list` : Lists all expenses.","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    * `clear` : Deletes all content.","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"## Features","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"### __v1.2__","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"### Adding an expense: `addExpense`","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"Adds an expense.","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"Format: `addExpense n/NAME c/COST d/DETAILS`","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"* `addExpense n/John Doe c/25 d/Sourdough bread`","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"* `addExpense n/Sir Bobby c/1759 d/Iphone 20`","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"Sample Execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"```bash","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"$ add n/John Doe c/25 d/Sourdough bread ","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"Added an expense for John Doe. Sourdough bread, $25.00.","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"$ add n/Ryan d/Sourdough bread ","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"Error. Expense cost was not provided with a c/ flag.","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"![addExpense success](images/user-guide/addExpense1.jpg)","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"![addExpense error](images/user-guide/addExpense2.jpg)","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"### Editing an expense: `editExpense`","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"Edits the expense for the person at the specified `INDEX`. The index refers to the index number when viewing a ","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"specific person\u0027s expenses. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"Format: `editExpense n/NAME i/INDEX [c/COST] [d/DETAILS]​`","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"* `editExpense n/John Doe i/1 c/35`","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"* `editExpense n/Sir Bobby i/4 d/iPhone 30`","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"Sample Execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"Suppose this is the list of expenses for Bob:","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"$ log n/Bob","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"1.            eat                  $1.00    Bob","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"2.            Pokemon Cards        $15.12   Bob","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"$ editExpense n/Bob 2 c/12.12","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"I have edited Bob\u0027s expense to be Pokemon Cards, $12.12.","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"$ editExpense n/Bob 3 d/Potato","lastModifiedDate":"2023-09-29"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"Error! There is no such expense for Bob at that index.","lastModifiedDate":"2023-09-29"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"![editExpense success](images/user-guide/editExpense1.jpg)","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"![editExpense error](images/user-guide/editExpense2.jpg)","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"### Deleting an expense: `deleteExpense`","lastModifiedDate":"2023-09-29"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"Deletes the specified expense based on index. Must be in an expense log view when entering this command.","lastModifiedDate":"2023-09-29"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"Format: `deleteExpense i/INDEX`","lastModifiedDate":"2023-09-29"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"Parameters:","lastModifiedDate":"2023-09-29"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"- `i/INDEX`: The index of the expense to be deleted.","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"* `deleteExpense i/2`","lastModifiedDate":"2023-09-29"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"    * Deletes the second expense in the list","lastModifiedDate":"2023-09-29"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"* `deleteExpense i/1`","lastModifiedDate":"2023-09-29"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"    * Deletes the first expense in the list","lastModifiedDate":"2023-09-29"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/deleteExpense1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/deleteExpense2.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/deleteExpense3.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"### Viewing my log with a person: `log`","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"Shows a list of the expenses with the specified person.","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"Format: `log p/PERSON`","lastModifiedDate":"2023-09-29"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"Parameters:","lastModifiedDate":"2023-09-29"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"- `p/PERSON`: Specifies the name of the person whose log we want to check.","lastModifiedDate":"2023-09-29"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"wui-hong"},"content":"* `log p/Bob`","lastModifiedDate":"2023-09-29"},{"lineNumber":129,"author":{"gitId":"wui-hong"},"content":"    * Shows log with Bob","lastModifiedDate":"2023-09-29"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"* `log p/Alice`","lastModifiedDate":"2023-09-29"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"    * Shows log with Alice","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"wui-hong"},"content":"![log success](images/user-guide/log1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/log2.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":136,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/log3.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/log4.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"wui-hong"},"content":"### Settling expenses: `settle`","lastModifiedDate":"2023-09-29"},{"lineNumber":143,"author":{"gitId":"wui-hong"},"content":"Fully settles the outstanding balance with the specified person.","lastModifiedDate":"2023-09-29"},{"lineNumber":144,"author":{"gitId":"wui-hong"},"content":"After settling, outstanding balance with the specified person will be 0.","lastModifiedDate":"2023-09-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"wui-hong"},"content":"Format: `settle n/NAME`","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"wui-hong"},"content":"Example:","lastModifiedDate":"2023-09-29"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"- `settle n/Bob`","lastModifiedDate":"2023-09-29"},{"lineNumber":150,"author":{"gitId":"wui-hong"},"content":"    - settles the outstanding balance with contact Bob.","lastModifiedDate":"2023-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"wui-hong"},"content":"Sample Execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":153,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":154,"author":{"gitId":"wui-hong"},"content":"$ settle ","lastModifiedDate":"2023-09-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"wui-hong"},"content":"Error: Please indicate the person you would like to settle expenses with.","lastModifiedDate":"2023-09-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":158,"author":{"gitId":"wui-hong"},"content":"$ settle n/Bob","lastModifiedDate":"2023-09-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"wui-hong"},"content":"Confirm settle expense with Bob? [Y/N]","lastModifiedDate":"2023-09-29"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"    Bob owes you $50. ","lastModifiedDate":"2023-09-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"$ Y","lastModifiedDate":"2023-09-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"Successfully settled expense with Bob.  ","lastModifiedDate":"2023-09-29"},{"lineNumber":166,"author":{"gitId":"wui-hong"},"content":"    No outstanding balance with Bob.","lastModifiedDate":"2023-09-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"wui-hong"},"content":"$ settle n/Mary","lastModifiedDate":"2023-09-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"wui-hong"},"content":"Confirm settle expense with Mary? [Y/N]","lastModifiedDate":"2023-09-29"},{"lineNumber":171,"author":{"gitId":"wui-hong"},"content":"    You owe Mary $30.","lastModifiedDate":"2023-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"wui-hong"},"content":"$ N","lastModifiedDate":"2023-09-29"},{"lineNumber":174,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":176,"author":{"gitId":"wui-hong"},"content":"![settle error](images/user-guide/settle1.jpg)","lastModifiedDate":"2023-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":178,"author":{"gitId":"wui-hong"},"content":"![settle prompt confirm](images/user-guide/settle2.jpg)","lastModifiedDate":"2023-09-30"},{"lineNumber":179,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":180,"author":{"gitId":"wui-hong"},"content":"![settle success](images/user-guide/settle3.jpg)","lastModifiedDate":"2023-09-30"},{"lineNumber":181,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":182,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":183,"author":{"gitId":"wui-hong"},"content":"### Listing balances of all persons : `list`","lastModifiedDate":"2023-09-29"},{"lineNumber":184,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":185,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":186,"author":{"gitId":"wui-hong"},"content":"Shows the outstanding balances for each person, along with their contact information.","lastModifiedDate":"2023-09-29"},{"lineNumber":187,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":188,"author":{"gitId":"wui-hong"},"content":"Format: `list`","lastModifiedDate":"2023-09-29"},{"lineNumber":189,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":190,"author":{"gitId":"wui-hong"},"content":"Sample Execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":191,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":192,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":193,"author":{"gitId":"wui-hong"},"content":"$ list","lastModifiedDate":"2023-09-29"},{"lineNumber":194,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":195,"author":{"gitId":"wui-hong"},"content":"| S/N | Name | Contact  | Balance |","lastModifiedDate":"2023-09-29"},{"lineNumber":196,"author":{"gitId":"wui-hong"},"content":"| --- | ---  | -------- | ------- |","lastModifiedDate":"2023-09-29"},{"lineNumber":197,"author":{"gitId":"wui-hong"},"content":"|  1  | Amy  | 95382713 |   $50   |","lastModifiedDate":"2023-09-29"},{"lineNumber":198,"author":{"gitId":"wui-hong"},"content":"|  2  | John | 82347185 |  -$14   |","lastModifiedDate":"2023-09-29"},{"lineNumber":199,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":200,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":201,"author":{"gitId":"wui-hong"},"content":"![list success](images/user-guide/list1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":202,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":203,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":204,"author":{"gitId":"wui-hong"},"content":"### Sorting people by balance: `sortBalance`","lastModifiedDate":"2023-09-29"},{"lineNumber":205,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":206,"author":{"gitId":"wui-hong"},"content":"Sorts the list of people in your address book based on their outstanding balances in either ascending or descending ","lastModifiedDate":"2023-09-30"},{"lineNumber":207,"author":{"gitId":"wui-hong"},"content":"order. This allows you to quickly identify who owes the most or the least amount of money. Negative balance means you ","lastModifiedDate":"2023-09-30"},{"lineNumber":208,"author":{"gitId":"wui-hong"},"content":"own them money.","lastModifiedDate":"2023-09-30"},{"lineNumber":209,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":210,"author":{"gitId":"wui-hong"},"content":"Format: `sortBalance o/ORDER`","lastModifiedDate":"2023-09-29"},{"lineNumber":211,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":212,"author":{"gitId":"wui-hong"},"content":"Parameters:","lastModifiedDate":"2023-09-29"},{"lineNumber":213,"author":{"gitId":"wui-hong"},"content":"- `o/ORDER`: Specifies the order in which to sort the balances. Use `asc` for ascending order and `desc` for ","lastModifiedDate":"2023-09-30"},{"lineNumber":214,"author":{"gitId":"wui-hong"},"content":"descending order. Raise error for missing or unknown parameters.","lastModifiedDate":"2023-09-30"},{"lineNumber":215,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":216,"author":{"gitId":"wui-hong"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":217,"author":{"gitId":"wui-hong"},"content":"* `sortBalance o/asc`","lastModifiedDate":"2023-09-29"},{"lineNumber":218,"author":{"gitId":"wui-hong"},"content":"    * This command will rearrange the list to show the person with the lowest outstanding balance at the top, followed ","lastModifiedDate":"2023-09-30"},{"lineNumber":219,"author":{"gitId":"wui-hong"},"content":"        by others in increasing order of their outstanding balances.","lastModifiedDate":"2023-09-30"},{"lineNumber":220,"author":{"gitId":"wui-hong"},"content":"* `sortBalance o/desc`","lastModifiedDate":"2023-09-29"},{"lineNumber":221,"author":{"gitId":"wui-hong"},"content":"    * This command will rearrange the list to show the person with the highest outstanding balance at the top, ","lastModifiedDate":"2023-09-30"},{"lineNumber":222,"author":{"gitId":"wui-hong"},"content":"        followed by others in decreasing order of their outstanding balances.","lastModifiedDate":"2023-09-30"},{"lineNumber":223,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":224,"author":{"gitId":"wui-hong"},"content":"Sample execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":225,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":226,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":227,"author":{"gitId":"wui-hong"},"content":"$ sortBalance o/asc","lastModifiedDate":"2023-09-29"},{"lineNumber":228,"author":{"gitId":"wui-hong"},"content":"All contacts balance in ascending order. Negative balance means you own them money.","lastModifiedDate":"2023-09-29"},{"lineNumber":229,"author":{"gitId":"wui-hong"},"content":"1. Alex Yeoh, -$15","lastModifiedDate":"2023-09-29"},{"lineNumber":230,"author":{"gitId":"wui-hong"},"content":"2. Bernice Yu, -$12","lastModifiedDate":"2023-09-29"},{"lineNumber":231,"author":{"gitId":"wui-hong"},"content":"3. Charlotte Oliveiro, $23","lastModifiedDate":"2023-09-29"},{"lineNumber":232,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":233,"author":{"gitId":"wui-hong"},"content":"![sortBalance success](images/user-guide/sortBalance1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":234,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":235,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":236,"author":{"gitId":"wui-hong"},"content":"$ sortBalance","lastModifiedDate":"2023-09-29"},{"lineNumber":237,"author":{"gitId":"wui-hong"},"content":"Invalid sorting order, must be `o/asc` or `o/desc`","lastModifiedDate":"2023-09-29"},{"lineNumber":238,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":239,"author":{"gitId":"wui-hong"},"content":"$ sortBalance o/increasing","lastModifiedDate":"2023-09-29"},{"lineNumber":240,"author":{"gitId":"wui-hong"},"content":"Invalid sorting order, must be `o/asc` or `o/desc`","lastModifiedDate":"2023-09-29"},{"lineNumber":241,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":242,"author":{"gitId":"wui-hong"},"content":"![sortBalance error](images/user-guide/sortBalance2.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":243,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":244,"author":{"gitId":"wui-hong"},"content":"### Creating shared expenses: `createGroupExpense`","lastModifiedDate":"2023-09-29"},{"lineNumber":245,"author":{"gitId":"wui-hong"},"content":"Creates an expense for multiple people with customised split ratios.","lastModifiedDate":"2023-09-29"},{"lineNumber":246,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":247,"author":{"gitId":"wui-hong"},"content":"Format: `createGroupExpense c/COST d/DETAILS [n/NAME w/WEIGHT]...`","lastModifiedDate":"2023-09-29"},{"lineNumber":248,"author":{"gitId":"wui-hong"},"content":"- Cost has to be a number.","lastModifiedDate":"2023-09-29"},{"lineNumber":249,"author":{"gitId":"wui-hong"},"content":"- Positive cost means that the person owes you.","lastModifiedDate":"2023-09-29"},{"lineNumber":250,"author":{"gitId":"wui-hong"},"content":"- Negative cost means that you owe the person.","lastModifiedDate":"2023-09-29"},{"lineNumber":251,"author":{"gitId":"wui-hong"},"content":"- If you want to create a weight for yourself, include `n/Self` to refer to yourself.","lastModifiedDate":"2023-09-29"},{"lineNumber":252,"author":{"gitId":"wui-hong"},"content":"- At least one pair of name and weight must be provided.","lastModifiedDate":"2023-09-29"},{"lineNumber":253,"author":{"gitId":"wui-hong"},"content":"- Weight must be an integer.","lastModifiedDate":"2023-09-29"},{"lineNumber":254,"author":{"gitId":"wui-hong"},"content":"- The cost for each person is calculated as follows:","lastModifiedDate":"2023-09-29"},{"lineNumber":255,"author":{"gitId":"wui-hong"},"content":"    - Individual cost \u003d Total Cost * (Individual Weight / Total Weight)","lastModifiedDate":"2023-09-30"},{"lineNumber":256,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":257,"author":{"gitId":"wui-hong"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":258,"author":{"gitId":"wui-hong"},"content":"* `createGroupExpense c/100 d/Dinner n/John w/2 n/Mary w/2 n/Alice w/1`","lastModifiedDate":"2023-09-29"},{"lineNumber":259,"author":{"gitId":"wui-hong"},"content":"    * creates 3 expenses: two expenses of $40 for John and Mary (2/5 of $100 each), and one expense of $20 for ","lastModifiedDate":"2023-09-30"},{"lineNumber":260,"author":{"gitId":"wui-hong"},"content":"        Alice (1/5 of $100)","lastModifiedDate":"2023-09-30"},{"lineNumber":261,"author":{"gitId":"wui-hong"},"content":"* `createGroupExpense c/600 d/Rent n/Self w/1 n/John w/1 n/Mary /w1`","lastModifiedDate":"2023-09-29"},{"lineNumber":262,"author":{"gitId":"wui-hong"},"content":"    * creates 2 expenses: $200 each for John and Mary (since you incurred 1/3 of the cost, which is $200)","lastModifiedDate":"2023-09-29"},{"lineNumber":263,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":264,"author":{"gitId":"wui-hong"},"content":"Sample execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":265,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":266,"author":{"gitId":"wui-hong"},"content":"$ createGroupExpense c/100 d/Dinner n/John w/2 n/Mary w/2 n/Alice w/1","lastModifiedDate":"2023-09-29"},{"lineNumber":267,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":268,"author":{"gitId":"wui-hong"},"content":"Successfully created 3 expenses totalling $100:    ","lastModifiedDate":"2023-09-29"},{"lineNumber":269,"author":{"gitId":"wui-hong"},"content":"    John owes you $40","lastModifiedDate":"2023-09-29"},{"lineNumber":270,"author":{"gitId":"wui-hong"},"content":"    Mary owes you $40","lastModifiedDate":"2023-09-29"},{"lineNumber":271,"author":{"gitId":"wui-hong"},"content":"    Alice owes you $20","lastModifiedDate":"2023-09-29"},{"lineNumber":272,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":273,"author":{"gitId":"wui-hong"},"content":"![createGroupExpense success](images/user-guide/createGroupExpense1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":274,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":275,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":276,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":277,"author":{"gitId":"wui-hong"},"content":"$ createGroupExpense c/200 d/Textbooks","lastModifiedDate":"2023-09-29"},{"lineNumber":278,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":279,"author":{"gitId":"wui-hong"},"content":"Error: At least one other person must be included in a shared expense.","lastModifiedDate":"2023-09-29"},{"lineNumber":280,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":281,"author":{"gitId":"wui-hong"},"content":"For example,","lastModifiedDate":"2023-09-29"},{"lineNumber":282,"author":{"gitId":"wui-hong"},"content":"c/30 d/Lunch n/John w/1 n/Mary w/1","lastModifiedDate":"2023-09-29"},{"lineNumber":283,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":284,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":285,"author":{"gitId":"wui-hong"},"content":"![createGroupExpense error](images/user-guide/createGroupExpense2.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":286,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":287,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":288,"author":{"gitId":"wui-hong"},"content":"### __v1.1__","lastModifiedDate":"2023-09-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"wui-hong"},"content":"### Listing all persons : `list` (deprecated)","lastModifiedDate":"2023-09-29"},{"lineNumber":300,"author":{"gitId":"wui-hong"},"content":"**NOTE: The latest version of this command is in v1.2**","lastModifiedDate":"2023-09-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"wui-hong"},"content":"![list](images/user-guide/listOld.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":306,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":307,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"wui-hong"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. ","lastModifiedDate":"2023-09-30"},{"lineNumber":315,"author":{"gitId":"wui-hong"},"content":"    The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"wui-hong"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com`","lastModifiedDate":"2023-09-29"},{"lineNumber":324,"author":{"gitId":"wui-hong"},"content":"    *  Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` ","lastModifiedDate":"2023-09-30"},{"lineNumber":325,"author":{"gitId":"wui-hong"},"content":"        respectively.","lastModifiedDate":"2023-09-30"},{"lineNumber":326,"author":{"gitId":"wui-hong"},"content":"*  `edit 2 n/Betsy Crower t/`","lastModifiedDate":"2023-09-29"},{"lineNumber":327,"author":{"gitId":"wui-hong"},"content":"    *  Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-09-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"wui-hong"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2023-09-29"},{"lineNumber":345,"author":{"gitId":"wui-hong"},"content":"  ![find success](images/user-guide/find1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":346,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/delete1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":363,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":364,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/clear1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":371,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"wui-hong"},"content":"![](images/user-guide/exit1.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"wui-hong"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need ","lastModifiedDate":"2023-09-30"},{"lineNumber":383,"author":{"gitId":"wui-hong"},"content":"to save manually.","lastModifiedDate":"2023-09-30"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":387,"author":{"gitId":"wui-hong"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users ","lastModifiedDate":"2023-09-30"},{"lineNumber":388,"author":{"gitId":"wui-hong"},"content":"are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-30"},{"lineNumber":389,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"wui-hong"},"content":"### Why do the expenses in the log not add up exactly to the balance?","lastModifiedDate":"2023-09-29"},{"lineNumber":391,"author":{"gitId":"wui-hong"},"content":"The expenses displayed are rounded to a fixed number of decimal places. This means there may be fractional differences ","lastModifiedDate":"2023-09-30"},{"lineNumber":392,"author":{"gitId":"wui-hong"},"content":"between the actual expenses and what is displayed.","lastModifiedDate":"2023-09-30"},{"lineNumber":393,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":394,"author":{"gitId":"wui-hong"},"content":"Example:","lastModifiedDate":"2023-09-29"},{"lineNumber":395,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":396,"author":{"gitId":"wui-hong"},"content":"If these are the logs stored:","lastModifiedDate":"2023-09-29"},{"lineNumber":397,"author":{"gitId":"wui-hong"},"content":"A:      0.122","lastModifiedDate":"2023-09-29"},{"lineNumber":398,"author":{"gitId":"wui-hong"},"content":"B:      0.223","lastModifiedDate":"2023-09-29"},{"lineNumber":399,"author":{"gitId":"wui-hong"},"content":"Total:  0.345","lastModifiedDate":"2023-09-29"},{"lineNumber":400,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":401,"author":{"gitId":"wui-hong"},"content":"This is displayed instead when the app is set to show 2 decimal places:","lastModifiedDate":"2023-09-29"},{"lineNumber":402,"author":{"gitId":"wui-hong"},"content":"A:      0.12","lastModifiedDate":"2023-09-29"},{"lineNumber":403,"author":{"gitId":"wui-hong"},"content":"B:      0.22","lastModifiedDate":"2023-09-29"},{"lineNumber":404,"author":{"gitId":"wui-hong"},"content":"Total:  0.35","lastModifiedDate":"2023-09-29"},{"lineNumber":405,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"-":110,"wui-hong":295}},{"path":"docs/team/jedkohjk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jedkohjk"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"title: Jed Koh\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"### Project: Spend n Split","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"Spend n Split (SnS) is a **desktop app for managing expense from contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"If you can type fast, SnS can get your contact expense management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djedkohjk\u0026)","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"* **Enhancements implemented**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"* **Contributions to the UG**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"* **Contributions to the DG**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"* **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"* **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"  * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"jedkohjk":59}}]
